// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$2110 {

    static final FunctionDescriptor gtk_rc_parse$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_rc_parse$MH = RuntimeHelper.downcallHandle(
        "gtk_rc_parse",
        constants$2110.gtk_rc_parse$FUNC, false
    );
    static final FunctionDescriptor gtk_rc_parse_string$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_rc_parse_string$MH = RuntimeHelper.downcallHandle(
        "gtk_rc_parse_string",
        constants$2110.gtk_rc_parse_string$FUNC, false
    );
    static final FunctionDescriptor gtk_rc_reparse_all$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle gtk_rc_reparse_all$MH = RuntimeHelper.downcallHandle(
        "gtk_rc_reparse_all",
        constants$2110.gtk_rc_reparse_all$FUNC, false
    );
    static final FunctionDescriptor gtk_rc_style_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle gtk_rc_style_get_type$MH = RuntimeHelper.downcallHandle(
        "gtk_rc_style_get_type",
        constants$2110.gtk_rc_style_get_type$FUNC, false
    );
    static final FunctionDescriptor gtk_rc_style_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle gtk_rc_style_new$MH = RuntimeHelper.downcallHandle(
        "gtk_rc_style_new",
        constants$2110.gtk_rc_style_new$FUNC, false
    );
    static final FunctionDescriptor gtk_rc_style_copy$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_rc_style_copy$MH = RuntimeHelper.downcallHandle(
        "gtk_rc_style_copy",
        constants$2110.gtk_rc_style_copy$FUNC, false
    );
}


