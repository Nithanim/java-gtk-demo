// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class test_h_14 extends test_h_13 {

    public static MethodHandle gdk_threads_add_idle_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gdk_threads_add_idle_full$MH,"gdk_threads_add_idle_full");
    }
    public static int gdk_threads_add_idle_full ( int priority,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.gdk_threads_add_idle_full$MH, "gdk_threads_add_idle_full");
        try {
            return (int)mh$.invokeExact(priority, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gdk_threads_add_idle$MH,"gdk_threads_add_idle");
    }
    public static int gdk_threads_add_idle ( Addressable function,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.gdk_threads_add_idle$MH, "gdk_threads_add_idle");
        try {
            return (int)mh$.invokeExact(function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_timeout_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gdk_threads_add_timeout_full$MH,"gdk_threads_add_timeout_full");
    }
    public static int gdk_threads_add_timeout_full ( int priority,  int interval,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.gdk_threads_add_timeout_full$MH, "gdk_threads_add_timeout_full");
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gdk_threads_add_timeout$MH,"gdk_threads_add_timeout");
    }
    public static int gdk_threads_add_timeout ( int interval,  Addressable function,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.gdk_threads_add_timeout$MH, "gdk_threads_add_timeout");
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_timeout_seconds_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gdk_threads_add_timeout_seconds_full$MH,"gdk_threads_add_timeout_seconds_full");
    }
    public static int gdk_threads_add_timeout_seconds_full ( int priority,  int interval,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.gdk_threads_add_timeout_seconds_full$MH, "gdk_threads_add_timeout_seconds_full");
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_timeout_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gdk_threads_add_timeout_seconds$MH,"gdk_threads_add_timeout_seconds");
    }
    public static int gdk_threads_add_timeout_seconds ( int interval,  Addressable function,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.gdk_threads_add_timeout_seconds$MH, "gdk_threads_add_timeout_seconds");
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_VISUAL_STATIC_GRAY() {
        return (int)0L;
    }
    public static int GDK_VISUAL_GRAYSCALE() {
        return (int)1L;
    }
    public static int GDK_VISUAL_STATIC_COLOR() {
        return (int)2L;
    }
    public static int GDK_VISUAL_PSEUDO_COLOR() {
        return (int)3L;
    }
    public static int GDK_VISUAL_TRUE_COLOR() {
        return (int)4L;
    }
    public static int GDK_VISUAL_DIRECT_COLOR() {
        return (int)5L;
    }
    public static MethodHandle gdk_visual_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gdk_visual_get_type$MH,"gdk_visual_get_type");
    }
    public static long gdk_visual_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.gdk_visual_get_type$MH, "gdk_visual_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gdk_visual_get_best_depth$MH,"gdk_visual_get_best_depth");
    }
    public static int gdk_visual_get_best_depth () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.gdk_visual_get_best_depth$MH, "gdk_visual_get_best_depth");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gdk_visual_get_best_type$MH,"gdk_visual_get_best_type");
    }
    public static int gdk_visual_get_best_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.gdk_visual_get_best_type$MH, "gdk_visual_get_best_type");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_system$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_system$MH,"gdk_visual_get_system");
    }
    public static MemoryAddress gdk_visual_get_system () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_system$MH, "gdk_visual_get_system");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_best$MH,"gdk_visual_get_best");
    }
    public static MemoryAddress gdk_visual_get_best () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_best$MH, "gdk_visual_get_best");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_with_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_best_with_depth$MH,"gdk_visual_get_best_with_depth");
    }
    public static MemoryAddress gdk_visual_get_best_with_depth ( int depth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_best_with_depth$MH, "gdk_visual_get_best_with_depth");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_with_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_best_with_type$MH,"gdk_visual_get_best_with_type");
    }
    public static MemoryAddress gdk_visual_get_best_with_type ( int visual_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_best_with_type$MH, "gdk_visual_get_best_with_type");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(visual_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_with_both$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_best_with_both$MH,"gdk_visual_get_best_with_both");
    }
    public static MemoryAddress gdk_visual_get_best_with_both ( int depth,  int visual_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.gdk_visual_get_best_with_both$MH, "gdk_visual_get_best_with_both");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(depth, visual_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_query_depths$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gdk_query_depths$MH,"gdk_query_depths");
    }
    public static void gdk_query_depths ( Addressable depths,  Addressable count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.gdk_query_depths$MH, "gdk_query_depths");
        try {
            mh$.invokeExact(depths, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_query_visual_types$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gdk_query_visual_types$MH,"gdk_query_visual_types");
    }
    public static void gdk_query_visual_types ( Addressable visual_types,  Addressable count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.gdk_query_visual_types$MH, "gdk_query_visual_types");
        try {
            mh$.invokeExact(visual_types, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_list_visuals$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gdk_list_visuals$MH,"gdk_list_visuals");
    }
    public static MemoryAddress gdk_list_visuals () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.gdk_list_visuals$MH, "gdk_list_visuals");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gdk_visual_get_screen$MH,"gdk_visual_get_screen");
    }
    public static MemoryAddress gdk_visual_get_screen ( Addressable visual) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.gdk_visual_get_screen$MH, "gdk_visual_get_screen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_visual_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gdk_visual_get_visual_type$MH,"gdk_visual_get_visual_type");
    }
    public static int gdk_visual_get_visual_type ( Addressable visual) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.gdk_visual_get_visual_type$MH, "gdk_visual_get_visual_type");
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gdk_visual_get_depth$MH,"gdk_visual_get_depth");
    }
    public static int gdk_visual_get_depth ( Addressable visual) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.gdk_visual_get_depth$MH, "gdk_visual_get_depth");
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_byte_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gdk_visual_get_byte_order$MH,"gdk_visual_get_byte_order");
    }
    public static int gdk_visual_get_byte_order ( Addressable visual) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.gdk_visual_get_byte_order$MH, "gdk_visual_get_byte_order");
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_colormap_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_colormap_size$MH,"gdk_visual_get_colormap_size");
    }
    public static int gdk_visual_get_colormap_size ( Addressable visual) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_colormap_size$MH, "gdk_visual_get_colormap_size");
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_bits_per_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_bits_per_rgb$MH,"gdk_visual_get_bits_per_rgb");
    }
    public static int gdk_visual_get_bits_per_rgb ( Addressable visual) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_bits_per_rgb$MH, "gdk_visual_get_bits_per_rgb");
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_red_pixel_details$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_red_pixel_details$MH,"gdk_visual_get_red_pixel_details");
    }
    public static void gdk_visual_get_red_pixel_details ( Addressable visual,  Addressable mask,  Addressable shift,  Addressable precision) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_red_pixel_details$MH, "gdk_visual_get_red_pixel_details");
        try {
            mh$.invokeExact(visual, mask, shift, precision);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_green_pixel_details$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_green_pixel_details$MH,"gdk_visual_get_green_pixel_details");
    }
    public static void gdk_visual_get_green_pixel_details ( Addressable visual,  Addressable mask,  Addressable shift,  Addressable precision) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_green_pixel_details$MH, "gdk_visual_get_green_pixel_details");
        try {
            mh$.invokeExact(visual, mask, shift, precision);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_blue_pixel_details$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_blue_pixel_details$MH,"gdk_visual_get_blue_pixel_details");
    }
    public static void gdk_visual_get_blue_pixel_details ( Addressable visual,  Addressable mask,  Addressable shift,  Addressable precision) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.gdk_visual_get_blue_pixel_details$MH, "gdk_visual_get_blue_pixel_details");
        try {
            mh$.invokeExact(visual, mask, shift, precision);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkAppLaunchContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkAppLaunchContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkAppLaunchContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkAppLaunchContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.glib_autoptr_clear_GdkAppLaunchContext$MH,"glib_autoptr_clear_GdkAppLaunchContext");
    }
    public static void glib_autoptr_clear_GdkAppLaunchContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.glib_autoptr_clear_GdkAppLaunchContext$MH, "glib_autoptr_clear_GdkAppLaunchContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.glib_autoptr_cleanup_GdkAppLaunchContext$MH,"glib_autoptr_cleanup_GdkAppLaunchContext");
    }
    public static void glib_autoptr_cleanup_GdkAppLaunchContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.glib_autoptr_cleanup_GdkAppLaunchContext$MH, "glib_autoptr_cleanup_GdkAppLaunchContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.glib_listautoptr_cleanup_GdkAppLaunchContext$MH,"glib_listautoptr_cleanup_GdkAppLaunchContext");
    }
    public static void glib_listautoptr_cleanup_GdkAppLaunchContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.glib_listautoptr_cleanup_GdkAppLaunchContext$MH, "glib_listautoptr_cleanup_GdkAppLaunchContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.glib_slistautoptr_cleanup_GdkAppLaunchContext$MH,"glib_slistautoptr_cleanup_GdkAppLaunchContext");
    }
    public static void glib_slistautoptr_cleanup_GdkAppLaunchContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.glib_slistautoptr_cleanup_GdkAppLaunchContext$MH, "glib_slistautoptr_cleanup_GdkAppLaunchContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.glib_queueautoptr_cleanup_GdkAppLaunchContext$MH,"glib_queueautoptr_cleanup_GdkAppLaunchContext");
    }
    public static void glib_queueautoptr_cleanup_GdkAppLaunchContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.glib_queueautoptr_cleanup_GdkAppLaunchContext$MH, "glib_queueautoptr_cleanup_GdkAppLaunchContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkCursor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkCursor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkCursor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkCursor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.glib_autoptr_clear_GdkCursor$MH,"glib_autoptr_clear_GdkCursor");
    }
    public static void glib_autoptr_clear_GdkCursor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.glib_autoptr_clear_GdkCursor$MH, "glib_autoptr_clear_GdkCursor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.glib_autoptr_cleanup_GdkCursor$MH,"glib_autoptr_cleanup_GdkCursor");
    }
    public static void glib_autoptr_cleanup_GdkCursor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.glib_autoptr_cleanup_GdkCursor$MH, "glib_autoptr_cleanup_GdkCursor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.glib_listautoptr_cleanup_GdkCursor$MH,"glib_listautoptr_cleanup_GdkCursor");
    }
    public static void glib_listautoptr_cleanup_GdkCursor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.glib_listautoptr_cleanup_GdkCursor$MH, "glib_listautoptr_cleanup_GdkCursor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.glib_slistautoptr_cleanup_GdkCursor$MH,"glib_slistautoptr_cleanup_GdkCursor");
    }
    public static void glib_slistautoptr_cleanup_GdkCursor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.glib_slistautoptr_cleanup_GdkCursor$MH, "glib_slistautoptr_cleanup_GdkCursor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.glib_queueautoptr_cleanup_GdkCursor$MH,"glib_queueautoptr_cleanup_GdkCursor");
    }
    public static void glib_queueautoptr_cleanup_GdkCursor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.glib_queueautoptr_cleanup_GdkCursor$MH, "glib_queueautoptr_cleanup_GdkCursor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkDevice_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDevice_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDevice_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDevice_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkDevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.glib_autoptr_clear_GdkDevice$MH,"glib_autoptr_clear_GdkDevice");
    }
    public static void glib_autoptr_clear_GdkDevice ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.glib_autoptr_clear_GdkDevice$MH, "glib_autoptr_clear_GdkDevice");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkDevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.glib_autoptr_cleanup_GdkDevice$MH,"glib_autoptr_cleanup_GdkDevice");
    }
    public static void glib_autoptr_cleanup_GdkDevice ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.glib_autoptr_cleanup_GdkDevice$MH, "glib_autoptr_cleanup_GdkDevice");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkDevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.glib_listautoptr_cleanup_GdkDevice$MH,"glib_listautoptr_cleanup_GdkDevice");
    }
    public static void glib_listautoptr_cleanup_GdkDevice ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.glib_listautoptr_cleanup_GdkDevice$MH, "glib_listautoptr_cleanup_GdkDevice");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkDevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.glib_slistautoptr_cleanup_GdkDevice$MH,"glib_slistautoptr_cleanup_GdkDevice");
    }
    public static void glib_slistautoptr_cleanup_GdkDevice ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.glib_slistautoptr_cleanup_GdkDevice$MH, "glib_slistautoptr_cleanup_GdkDevice");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkDevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.glib_queueautoptr_cleanup_GdkDevice$MH,"glib_queueautoptr_cleanup_GdkDevice");
    }
    public static void glib_queueautoptr_cleanup_GdkDevice ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.glib_queueautoptr_cleanup_GdkDevice$MH, "glib_queueautoptr_cleanup_GdkDevice");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkDeviceManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDeviceManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDeviceManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDeviceManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkDeviceManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.glib_autoptr_clear_GdkDeviceManager$MH,"glib_autoptr_clear_GdkDeviceManager");
    }
    public static void glib_autoptr_clear_GdkDeviceManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.glib_autoptr_clear_GdkDeviceManager$MH, "glib_autoptr_clear_GdkDeviceManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkDeviceManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.glib_autoptr_cleanup_GdkDeviceManager$MH,"glib_autoptr_cleanup_GdkDeviceManager");
    }
    public static void glib_autoptr_cleanup_GdkDeviceManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.glib_autoptr_cleanup_GdkDeviceManager$MH, "glib_autoptr_cleanup_GdkDeviceManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkDeviceManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.glib_listautoptr_cleanup_GdkDeviceManager$MH,"glib_listautoptr_cleanup_GdkDeviceManager");
    }
    public static void glib_listautoptr_cleanup_GdkDeviceManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.glib_listautoptr_cleanup_GdkDeviceManager$MH, "glib_listautoptr_cleanup_GdkDeviceManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkDeviceManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.glib_slistautoptr_cleanup_GdkDeviceManager$MH,"glib_slistautoptr_cleanup_GdkDeviceManager");
    }
    public static void glib_slistautoptr_cleanup_GdkDeviceManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.glib_slistautoptr_cleanup_GdkDeviceManager$MH, "glib_slistautoptr_cleanup_GdkDeviceManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkDeviceManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.glib_queueautoptr_cleanup_GdkDeviceManager$MH,"glib_queueautoptr_cleanup_GdkDeviceManager");
    }
    public static void glib_queueautoptr_cleanup_GdkDeviceManager ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.glib_queueautoptr_cleanup_GdkDeviceManager$MH, "glib_queueautoptr_cleanup_GdkDeviceManager");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkDisplay_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDisplay_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDisplay_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDisplay_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkDisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.glib_autoptr_clear_GdkDisplay$MH,"glib_autoptr_clear_GdkDisplay");
    }
    public static void glib_autoptr_clear_GdkDisplay ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.glib_autoptr_clear_GdkDisplay$MH, "glib_autoptr_clear_GdkDisplay");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkDisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.glib_autoptr_cleanup_GdkDisplay$MH,"glib_autoptr_cleanup_GdkDisplay");
    }
    public static void glib_autoptr_cleanup_GdkDisplay ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.glib_autoptr_cleanup_GdkDisplay$MH, "glib_autoptr_cleanup_GdkDisplay");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkDisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.glib_listautoptr_cleanup_GdkDisplay$MH,"glib_listautoptr_cleanup_GdkDisplay");
    }
    public static void glib_listautoptr_cleanup_GdkDisplay ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.glib_listautoptr_cleanup_GdkDisplay$MH, "glib_listautoptr_cleanup_GdkDisplay");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkDisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.glib_slistautoptr_cleanup_GdkDisplay$MH,"glib_slistautoptr_cleanup_GdkDisplay");
    }
    public static void glib_slistautoptr_cleanup_GdkDisplay ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.glib_slistautoptr_cleanup_GdkDisplay$MH, "glib_slistautoptr_cleanup_GdkDisplay");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkDisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.glib_queueautoptr_cleanup_GdkDisplay$MH,"glib_queueautoptr_cleanup_GdkDisplay");
    }
    public static void glib_queueautoptr_cleanup_GdkDisplay ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.glib_queueautoptr_cleanup_GdkDisplay$MH, "glib_queueautoptr_cleanup_GdkDisplay");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkDisplayManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDisplayManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDisplayManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDisplayManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkDisplayManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.glib_autoptr_clear_GdkDisplayManager$MH,"glib_autoptr_clear_GdkDisplayManager");
    }
    public static void glib_autoptr_clear_GdkDisplayManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.glib_autoptr_clear_GdkDisplayManager$MH, "glib_autoptr_clear_GdkDisplayManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkDisplayManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.glib_autoptr_cleanup_GdkDisplayManager$MH,"glib_autoptr_cleanup_GdkDisplayManager");
    }
    public static void glib_autoptr_cleanup_GdkDisplayManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.glib_autoptr_cleanup_GdkDisplayManager$MH, "glib_autoptr_cleanup_GdkDisplayManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkDisplayManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.glib_listautoptr_cleanup_GdkDisplayManager$MH,"glib_listautoptr_cleanup_GdkDisplayManager");
    }
    public static void glib_listautoptr_cleanup_GdkDisplayManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.glib_listautoptr_cleanup_GdkDisplayManager$MH, "glib_listautoptr_cleanup_GdkDisplayManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkDisplayManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.glib_slistautoptr_cleanup_GdkDisplayManager$MH,"glib_slistautoptr_cleanup_GdkDisplayManager");
    }
    public static void glib_slistautoptr_cleanup_GdkDisplayManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.glib_slistautoptr_cleanup_GdkDisplayManager$MH, "glib_slistautoptr_cleanup_GdkDisplayManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkDisplayManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.glib_queueautoptr_cleanup_GdkDisplayManager$MH,"glib_queueautoptr_cleanup_GdkDisplayManager");
    }
    public static void glib_queueautoptr_cleanup_GdkDisplayManager ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.glib_queueautoptr_cleanup_GdkDisplayManager$MH, "glib_queueautoptr_cleanup_GdkDisplayManager");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkDragContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDragContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDragContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkDragContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkDragContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.glib_autoptr_clear_GdkDragContext$MH,"glib_autoptr_clear_GdkDragContext");
    }
    public static void glib_autoptr_clear_GdkDragContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.glib_autoptr_clear_GdkDragContext$MH, "glib_autoptr_clear_GdkDragContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkDragContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.glib_autoptr_cleanup_GdkDragContext$MH,"glib_autoptr_cleanup_GdkDragContext");
    }
    public static void glib_autoptr_cleanup_GdkDragContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1322.glib_autoptr_cleanup_GdkDragContext$MH, "glib_autoptr_cleanup_GdkDragContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkDragContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.glib_listautoptr_cleanup_GdkDragContext$MH,"glib_listautoptr_cleanup_GdkDragContext");
    }
    public static void glib_listautoptr_cleanup_GdkDragContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1322.glib_listautoptr_cleanup_GdkDragContext$MH, "glib_listautoptr_cleanup_GdkDragContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkDragContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.glib_slistautoptr_cleanup_GdkDragContext$MH,"glib_slistautoptr_cleanup_GdkDragContext");
    }
    public static void glib_slistautoptr_cleanup_GdkDragContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1322.glib_slistautoptr_cleanup_GdkDragContext$MH, "glib_slistautoptr_cleanup_GdkDragContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkDragContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.glib_queueautoptr_cleanup_GdkDragContext$MH,"glib_queueautoptr_cleanup_GdkDragContext");
    }
    public static void glib_queueautoptr_cleanup_GdkDragContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1322.glib_queueautoptr_cleanup_GdkDragContext$MH, "glib_queueautoptr_cleanup_GdkDragContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkFrameClock_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkFrameClock_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkFrameClock_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkFrameClock_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkFrameClock$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.glib_autoptr_clear_GdkFrameClock$MH,"glib_autoptr_clear_GdkFrameClock");
    }
    public static void glib_autoptr_clear_GdkFrameClock ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1322.glib_autoptr_clear_GdkFrameClock$MH, "glib_autoptr_clear_GdkFrameClock");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkFrameClock$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.glib_autoptr_cleanup_GdkFrameClock$MH,"glib_autoptr_cleanup_GdkFrameClock");
    }
    public static void glib_autoptr_cleanup_GdkFrameClock ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1322.glib_autoptr_cleanup_GdkFrameClock$MH, "glib_autoptr_cleanup_GdkFrameClock");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkFrameClock$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.glib_listautoptr_cleanup_GdkFrameClock$MH,"glib_listautoptr_cleanup_GdkFrameClock");
    }
    public static void glib_listautoptr_cleanup_GdkFrameClock ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.glib_listautoptr_cleanup_GdkFrameClock$MH, "glib_listautoptr_cleanup_GdkFrameClock");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkFrameClock$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.glib_slistautoptr_cleanup_GdkFrameClock$MH,"glib_slistautoptr_cleanup_GdkFrameClock");
    }
    public static void glib_slistautoptr_cleanup_GdkFrameClock ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.glib_slistautoptr_cleanup_GdkFrameClock$MH, "glib_slistautoptr_cleanup_GdkFrameClock");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkFrameClock$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.glib_queueautoptr_cleanup_GdkFrameClock$MH,"glib_queueautoptr_cleanup_GdkFrameClock");
    }
    public static void glib_queueautoptr_cleanup_GdkFrameClock ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.glib_queueautoptr_cleanup_GdkFrameClock$MH, "glib_queueautoptr_cleanup_GdkFrameClock");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkGLContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkGLContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkGLContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkGLContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkGLContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.glib_autoptr_clear_GdkGLContext$MH,"glib_autoptr_clear_GdkGLContext");
    }
    public static void glib_autoptr_clear_GdkGLContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.glib_autoptr_clear_GdkGLContext$MH, "glib_autoptr_clear_GdkGLContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkGLContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.glib_autoptr_cleanup_GdkGLContext$MH,"glib_autoptr_cleanup_GdkGLContext");
    }
    public static void glib_autoptr_cleanup_GdkGLContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.glib_autoptr_cleanup_GdkGLContext$MH, "glib_autoptr_cleanup_GdkGLContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkGLContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.glib_listautoptr_cleanup_GdkGLContext$MH,"glib_listautoptr_cleanup_GdkGLContext");
    }
    public static void glib_listautoptr_cleanup_GdkGLContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.glib_listautoptr_cleanup_GdkGLContext$MH, "glib_listautoptr_cleanup_GdkGLContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkGLContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.glib_slistautoptr_cleanup_GdkGLContext$MH,"glib_slistautoptr_cleanup_GdkGLContext");
    }
    public static void glib_slistautoptr_cleanup_GdkGLContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.glib_slistautoptr_cleanup_GdkGLContext$MH, "glib_slistautoptr_cleanup_GdkGLContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkGLContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.glib_queueautoptr_cleanup_GdkGLContext$MH,"glib_queueautoptr_cleanup_GdkGLContext");
    }
    public static void glib_queueautoptr_cleanup_GdkGLContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.glib_queueautoptr_cleanup_GdkGLContext$MH, "glib_queueautoptr_cleanup_GdkGLContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkKeymap_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkKeymap_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkKeymap_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkKeymap_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkKeymap$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.glib_autoptr_clear_GdkKeymap$MH,"glib_autoptr_clear_GdkKeymap");
    }
    public static void glib_autoptr_clear_GdkKeymap ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.glib_autoptr_clear_GdkKeymap$MH, "glib_autoptr_clear_GdkKeymap");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkKeymap$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.glib_autoptr_cleanup_GdkKeymap$MH,"glib_autoptr_cleanup_GdkKeymap");
    }
    public static void glib_autoptr_cleanup_GdkKeymap ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.glib_autoptr_cleanup_GdkKeymap$MH, "glib_autoptr_cleanup_GdkKeymap");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkKeymap$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.glib_listautoptr_cleanup_GdkKeymap$MH,"glib_listautoptr_cleanup_GdkKeymap");
    }
    public static void glib_listautoptr_cleanup_GdkKeymap ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.glib_listautoptr_cleanup_GdkKeymap$MH, "glib_listautoptr_cleanup_GdkKeymap");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkKeymap$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.glib_slistautoptr_cleanup_GdkKeymap$MH,"glib_slistautoptr_cleanup_GdkKeymap");
    }
    public static void glib_slistautoptr_cleanup_GdkKeymap ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.glib_slistautoptr_cleanup_GdkKeymap$MH, "glib_slistautoptr_cleanup_GdkKeymap");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkKeymap$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.glib_queueautoptr_cleanup_GdkKeymap$MH,"glib_queueautoptr_cleanup_GdkKeymap");
    }
    public static void glib_queueautoptr_cleanup_GdkKeymap ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.glib_queueautoptr_cleanup_GdkKeymap$MH, "glib_queueautoptr_cleanup_GdkKeymap");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkScreen_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkScreen_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkScreen_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkScreen_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkScreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.glib_autoptr_clear_GdkScreen$MH,"glib_autoptr_clear_GdkScreen");
    }
    public static void glib_autoptr_clear_GdkScreen ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.glib_autoptr_clear_GdkScreen$MH, "glib_autoptr_clear_GdkScreen");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkScreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.glib_autoptr_cleanup_GdkScreen$MH,"glib_autoptr_cleanup_GdkScreen");
    }
    public static void glib_autoptr_cleanup_GdkScreen ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.glib_autoptr_cleanup_GdkScreen$MH, "glib_autoptr_cleanup_GdkScreen");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkScreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.glib_listautoptr_cleanup_GdkScreen$MH,"glib_listautoptr_cleanup_GdkScreen");
    }
    public static void glib_listautoptr_cleanup_GdkScreen ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.glib_listautoptr_cleanup_GdkScreen$MH, "glib_listautoptr_cleanup_GdkScreen");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkScreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.glib_slistautoptr_cleanup_GdkScreen$MH,"glib_slistautoptr_cleanup_GdkScreen");
    }
    public static void glib_slistautoptr_cleanup_GdkScreen ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.glib_slistautoptr_cleanup_GdkScreen$MH, "glib_slistautoptr_cleanup_GdkScreen");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkScreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.glib_queueautoptr_cleanup_GdkScreen$MH,"glib_queueautoptr_cleanup_GdkScreen");
    }
    public static void glib_queueautoptr_cleanup_GdkScreen ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.glib_queueautoptr_cleanup_GdkScreen$MH, "glib_queueautoptr_cleanup_GdkScreen");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkVisual_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkVisual_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkVisual_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkVisual_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkVisual$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.glib_autoptr_clear_GdkVisual$MH,"glib_autoptr_clear_GdkVisual");
    }
    public static void glib_autoptr_clear_GdkVisual ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1326.glib_autoptr_clear_GdkVisual$MH, "glib_autoptr_clear_GdkVisual");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkVisual$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.glib_autoptr_cleanup_GdkVisual$MH,"glib_autoptr_cleanup_GdkVisual");
    }
    public static void glib_autoptr_cleanup_GdkVisual ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1326.glib_autoptr_cleanup_GdkVisual$MH, "glib_autoptr_cleanup_GdkVisual");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkVisual$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.glib_listautoptr_cleanup_GdkVisual$MH,"glib_listautoptr_cleanup_GdkVisual");
    }
    public static void glib_listautoptr_cleanup_GdkVisual ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1326.glib_listautoptr_cleanup_GdkVisual$MH, "glib_listautoptr_cleanup_GdkVisual");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkVisual$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.glib_slistautoptr_cleanup_GdkVisual$MH,"glib_slistautoptr_cleanup_GdkVisual");
    }
    public static void glib_slistautoptr_cleanup_GdkVisual ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1326.glib_slistautoptr_cleanup_GdkVisual$MH, "glib_slistautoptr_cleanup_GdkVisual");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkVisual$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.glib_queueautoptr_cleanup_GdkVisual$MH,"glib_queueautoptr_cleanup_GdkVisual");
    }
    public static void glib_queueautoptr_cleanup_GdkVisual ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1326.glib_queueautoptr_cleanup_GdkVisual$MH, "glib_queueautoptr_cleanup_GdkVisual");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.glib_autoptr_clear_GdkWindow$MH,"glib_autoptr_clear_GdkWindow");
    }
    public static void glib_autoptr_clear_GdkWindow ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1326.glib_autoptr_clear_GdkWindow$MH, "glib_autoptr_clear_GdkWindow");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.glib_autoptr_cleanup_GdkWindow$MH,"glib_autoptr_cleanup_GdkWindow");
    }
    public static void glib_autoptr_cleanup_GdkWindow ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1327.glib_autoptr_cleanup_GdkWindow$MH, "glib_autoptr_cleanup_GdkWindow");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.glib_listautoptr_cleanup_GdkWindow$MH,"glib_listautoptr_cleanup_GdkWindow");
    }
    public static void glib_listautoptr_cleanup_GdkWindow ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1327.glib_listautoptr_cleanup_GdkWindow$MH, "glib_listautoptr_cleanup_GdkWindow");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.glib_slistautoptr_cleanup_GdkWindow$MH,"glib_slistautoptr_cleanup_GdkWindow");
    }
    public static void glib_slistautoptr_cleanup_GdkWindow ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1327.glib_slistautoptr_cleanup_GdkWindow$MH, "glib_slistautoptr_cleanup_GdkWindow");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.glib_queueautoptr_cleanup_GdkWindow$MH,"glib_queueautoptr_cleanup_GdkWindow");
    }
    public static void glib_queueautoptr_cleanup_GdkWindow ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1327.glib_queueautoptr_cleanup_GdkWindow$MH, "glib_queueautoptr_cleanup_GdkWindow");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkEvent_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkEvent_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkEvent_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkEvent_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.glib_autoptr_clear_GdkEvent$MH,"glib_autoptr_clear_GdkEvent");
    }
    public static void glib_autoptr_clear_GdkEvent ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1327.glib_autoptr_clear_GdkEvent$MH, "glib_autoptr_clear_GdkEvent");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.glib_autoptr_cleanup_GdkEvent$MH,"glib_autoptr_cleanup_GdkEvent");
    }
    public static void glib_autoptr_cleanup_GdkEvent ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1327.glib_autoptr_cleanup_GdkEvent$MH, "glib_autoptr_cleanup_GdkEvent");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.glib_listautoptr_cleanup_GdkEvent$MH,"glib_listautoptr_cleanup_GdkEvent");
    }
    public static void glib_listautoptr_cleanup_GdkEvent ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.glib_listautoptr_cleanup_GdkEvent$MH, "glib_listautoptr_cleanup_GdkEvent");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.glib_slistautoptr_cleanup_GdkEvent$MH,"glib_slistautoptr_cleanup_GdkEvent");
    }
    public static void glib_slistautoptr_cleanup_GdkEvent ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.glib_slistautoptr_cleanup_GdkEvent$MH, "glib_slistautoptr_cleanup_GdkEvent");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.glib_queueautoptr_cleanup_GdkEvent$MH,"glib_queueautoptr_cleanup_GdkEvent");
    }
    public static void glib_queueautoptr_cleanup_GdkEvent ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.glib_queueautoptr_cleanup_GdkEvent$MH, "glib_queueautoptr_cleanup_GdkEvent");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkFrameTimings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkFrameTimings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkFrameTimings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkFrameTimings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkFrameTimings$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.glib_autoptr_clear_GdkFrameTimings$MH,"glib_autoptr_clear_GdkFrameTimings");
    }
    public static void glib_autoptr_clear_GdkFrameTimings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.glib_autoptr_clear_GdkFrameTimings$MH, "glib_autoptr_clear_GdkFrameTimings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkFrameTimings$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.glib_autoptr_cleanup_GdkFrameTimings$MH,"glib_autoptr_cleanup_GdkFrameTimings");
    }
    public static void glib_autoptr_cleanup_GdkFrameTimings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.glib_autoptr_cleanup_GdkFrameTimings$MH, "glib_autoptr_cleanup_GdkFrameTimings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkFrameTimings$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.glib_listautoptr_cleanup_GdkFrameTimings$MH,"glib_listautoptr_cleanup_GdkFrameTimings");
    }
    public static void glib_listautoptr_cleanup_GdkFrameTimings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.glib_listautoptr_cleanup_GdkFrameTimings$MH, "glib_listautoptr_cleanup_GdkFrameTimings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkFrameTimings$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.glib_slistautoptr_cleanup_GdkFrameTimings$MH,"glib_slistautoptr_cleanup_GdkFrameTimings");
    }
    public static void glib_slistautoptr_cleanup_GdkFrameTimings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.glib_slistautoptr_cleanup_GdkFrameTimings$MH, "glib_slistautoptr_cleanup_GdkFrameTimings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkFrameTimings$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.glib_queueautoptr_cleanup_GdkFrameTimings$MH,"glib_queueautoptr_cleanup_GdkFrameTimings");
    }
    public static void glib_queueautoptr_cleanup_GdkFrameTimings ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.glib_queueautoptr_cleanup_GdkFrameTimings$MH, "glib_queueautoptr_cleanup_GdkFrameTimings");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkRGBA_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkRGBA_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkRGBA_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkRGBA_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkRGBA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.glib_autoptr_clear_GdkRGBA$MH,"glib_autoptr_clear_GdkRGBA");
    }
    public static void glib_autoptr_clear_GdkRGBA ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.glib_autoptr_clear_GdkRGBA$MH, "glib_autoptr_clear_GdkRGBA");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GdkRGBA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.glib_autoptr_cleanup_GdkRGBA$MH,"glib_autoptr_cleanup_GdkRGBA");
    }
    public static void glib_autoptr_cleanup_GdkRGBA ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.glib_autoptr_cleanup_GdkRGBA$MH, "glib_autoptr_cleanup_GdkRGBA");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GdkRGBA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.glib_listautoptr_cleanup_GdkRGBA$MH,"glib_listautoptr_cleanup_GdkRGBA");
    }
    public static void glib_listautoptr_cleanup_GdkRGBA ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.glib_listautoptr_cleanup_GdkRGBA$MH, "glib_listautoptr_cleanup_GdkRGBA");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GdkRGBA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.glib_slistautoptr_cleanup_GdkRGBA$MH,"glib_slistautoptr_cleanup_GdkRGBA");
    }
    public static void glib_slistautoptr_cleanup_GdkRGBA ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.glib_slistautoptr_cleanup_GdkRGBA$MH, "glib_slistautoptr_cleanup_GdkRGBA");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GdkRGBA$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.glib_queueautoptr_cleanup_GdkRGBA$MH,"glib_queueautoptr_cleanup_GdkRGBA");
    }
    public static void glib_queueautoptr_cleanup_GdkRGBA ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1330.glib_queueautoptr_cleanup_GdkRGBA$MH, "glib_queueautoptr_cleanup_GdkRGBA");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_ALIGN_FILL() {
        return (int)0L;
    }
    public static int GTK_ALIGN_START() {
        return (int)1L;
    }
    public static int GTK_ALIGN_END() {
        return (int)2L;
    }
    public static int GTK_ALIGN_CENTER() {
        return (int)3L;
    }
    public static int GTK_ALIGN_BASELINE() {
        return (int)4L;
    }
    public static int GTK_ARROW_UP() {
        return (int)0L;
    }
    public static int GTK_ARROW_DOWN() {
        return (int)1L;
    }
    public static int GTK_ARROW_LEFT() {
        return (int)2L;
    }
    public static int GTK_ARROW_RIGHT() {
        return (int)3L;
    }
    public static int GTK_ARROW_NONE() {
        return (int)4L;
    }
    public static int GTK_BASELINE_POSITION_TOP() {
        return (int)0L;
    }
    public static int GTK_BASELINE_POSITION_CENTER() {
        return (int)1L;
    }
    public static int GTK_BASELINE_POSITION_BOTTOM() {
        return (int)2L;
    }
    public static int GTK_DELETE_CHARS() {
        return (int)0L;
    }
    public static int GTK_DELETE_WORD_ENDS() {
        return (int)1L;
    }
    public static int GTK_DELETE_WORDS() {
        return (int)2L;
    }
    public static int GTK_DELETE_DISPLAY_LINES() {
        return (int)3L;
    }
    public static int GTK_DELETE_DISPLAY_LINE_ENDS() {
        return (int)4L;
    }
    public static int GTK_DELETE_PARAGRAPH_ENDS() {
        return (int)5L;
    }
    public static int GTK_DELETE_PARAGRAPHS() {
        return (int)6L;
    }
    public static int GTK_DELETE_WHITESPACE() {
        return (int)7L;
    }
    public static int GTK_DIR_TAB_FORWARD() {
        return (int)0L;
    }
    public static int GTK_DIR_TAB_BACKWARD() {
        return (int)1L;
    }
    public static int GTK_DIR_UP() {
        return (int)2L;
    }
    public static int GTK_DIR_DOWN() {
        return (int)3L;
    }
    public static int GTK_DIR_LEFT() {
        return (int)4L;
    }
    public static int GTK_DIR_RIGHT() {
        return (int)5L;
    }
    public static int GTK_ICON_SIZE_INVALID() {
        return (int)0L;
    }
    public static int GTK_ICON_SIZE_MENU() {
        return (int)1L;
    }
    public static int GTK_ICON_SIZE_SMALL_TOOLBAR() {
        return (int)2L;
    }
    public static int GTK_ICON_SIZE_LARGE_TOOLBAR() {
        return (int)3L;
    }
    public static int GTK_ICON_SIZE_BUTTON() {
        return (int)4L;
    }
    public static int GTK_ICON_SIZE_DND() {
        return (int)5L;
    }
    public static int GTK_ICON_SIZE_DIALOG() {
        return (int)6L;
    }
    public static int GTK_SENSITIVITY_AUTO() {
        return (int)0L;
    }
    public static int GTK_SENSITIVITY_ON() {
        return (int)1L;
    }
    public static int GTK_SENSITIVITY_OFF() {
        return (int)2L;
    }
    public static int GTK_TEXT_DIR_NONE() {
        return (int)0L;
    }
    public static int GTK_TEXT_DIR_LTR() {
        return (int)1L;
    }
    public static int GTK_TEXT_DIR_RTL() {
        return (int)2L;
    }
    public static int GTK_JUSTIFY_LEFT() {
        return (int)0L;
    }
    public static int GTK_JUSTIFY_RIGHT() {
        return (int)1L;
    }
    public static int GTK_JUSTIFY_CENTER() {
        return (int)2L;
    }
    public static int GTK_JUSTIFY_FILL() {
        return (int)3L;
    }
    public static int GTK_MENU_DIR_PARENT() {
        return (int)0L;
    }
    public static int GTK_MENU_DIR_CHILD() {
        return (int)1L;
    }
    public static int GTK_MENU_DIR_NEXT() {
        return (int)2L;
    }
    public static int GTK_MENU_DIR_PREV() {
        return (int)3L;
    }
    public static int GTK_MESSAGE_INFO() {
        return (int)0L;
    }
    public static int GTK_MESSAGE_WARNING() {
        return (int)1L;
    }
    public static int GTK_MESSAGE_QUESTION() {
        return (int)2L;
    }
    public static int GTK_MESSAGE_ERROR() {
        return (int)3L;
    }
    public static int GTK_MESSAGE_OTHER() {
        return (int)4L;
    }
    public static int GTK_MOVEMENT_LOGICAL_POSITIONS() {
        return (int)0L;
    }
    public static int GTK_MOVEMENT_VISUAL_POSITIONS() {
        return (int)1L;
    }
    public static int GTK_MOVEMENT_WORDS() {
        return (int)2L;
    }
    public static int GTK_MOVEMENT_DISPLAY_LINES() {
        return (int)3L;
    }
    public static int GTK_MOVEMENT_DISPLAY_LINE_ENDS() {
        return (int)4L;
    }
    public static int GTK_MOVEMENT_PARAGRAPHS() {
        return (int)5L;
    }
    public static int GTK_MOVEMENT_PARAGRAPH_ENDS() {
        return (int)6L;
    }
    public static int GTK_MOVEMENT_PAGES() {
        return (int)7L;
    }
    public static int GTK_MOVEMENT_BUFFER_ENDS() {
        return (int)8L;
    }
    public static int GTK_MOVEMENT_HORIZONTAL_PAGES() {
        return (int)9L;
    }
    public static int GTK_SCROLL_STEPS() {
        return (int)0L;
    }
    public static int GTK_SCROLL_PAGES() {
        return (int)1L;
    }
    public static int GTK_SCROLL_ENDS() {
        return (int)2L;
    }
    public static int GTK_SCROLL_HORIZONTAL_STEPS() {
        return (int)3L;
    }
    public static int GTK_SCROLL_HORIZONTAL_PAGES() {
        return (int)4L;
    }
    public static int GTK_SCROLL_HORIZONTAL_ENDS() {
        return (int)5L;
    }
    public static int GTK_ORIENTATION_HORIZONTAL() {
        return (int)0L;
    }
    public static int GTK_ORIENTATION_VERTICAL() {
        return (int)1L;
    }
    public static int GTK_PACK_START() {
        return (int)0L;
    }
    public static int GTK_PACK_END() {
        return (int)1L;
    }
    public static int GTK_POS_LEFT() {
        return (int)0L;
    }
    public static int GTK_POS_RIGHT() {
        return (int)1L;
    }
    public static int GTK_POS_TOP() {
        return (int)2L;
    }
    public static int GTK_POS_BOTTOM() {
        return (int)3L;
    }
    public static int GTK_RELIEF_NORMAL() {
        return (int)0L;
    }
    public static int GTK_RELIEF_HALF() {
        return (int)1L;
    }
    public static int GTK_RELIEF_NONE() {
        return (int)2L;
    }
    public static int GTK_SCROLL_NONE() {
        return (int)0L;
    }
    public static int GTK_SCROLL_JUMP() {
        return (int)1L;
    }
    public static int GTK_SCROLL_STEP_BACKWARD() {
        return (int)2L;
    }
    public static int GTK_SCROLL_STEP_FORWARD() {
        return (int)3L;
    }
    public static int GTK_SCROLL_PAGE_BACKWARD() {
        return (int)4L;
    }
    public static int GTK_SCROLL_PAGE_FORWARD() {
        return (int)5L;
    }
    public static int GTK_SCROLL_STEP_UP() {
        return (int)6L;
    }
    public static int GTK_SCROLL_STEP_DOWN() {
        return (int)7L;
    }
    public static int GTK_SCROLL_PAGE_UP() {
        return (int)8L;
    }
    public static int GTK_SCROLL_PAGE_DOWN() {
        return (int)9L;
    }
    public static int GTK_SCROLL_STEP_LEFT() {
        return (int)10L;
    }
    public static int GTK_SCROLL_STEP_RIGHT() {
        return (int)11L;
    }
    public static int GTK_SCROLL_PAGE_LEFT() {
        return (int)12L;
    }
    public static int GTK_SCROLL_PAGE_RIGHT() {
        return (int)13L;
    }
    public static int GTK_SCROLL_START() {
        return (int)14L;
    }
    public static int GTK_SCROLL_END() {
        return (int)15L;
    }
    public static int GTK_SELECTION_NONE() {
        return (int)0L;
    }
    public static int GTK_SELECTION_SINGLE() {
        return (int)1L;
    }
    public static int GTK_SELECTION_BROWSE() {
        return (int)2L;
    }
    public static int GTK_SELECTION_MULTIPLE() {
        return (int)3L;
    }
    public static int GTK_SHADOW_NONE() {
        return (int)0L;
    }
    public static int GTK_SHADOW_IN() {
        return (int)1L;
    }
    public static int GTK_SHADOW_OUT() {
        return (int)2L;
    }
    public static int GTK_SHADOW_ETCHED_IN() {
        return (int)3L;
    }
    public static int GTK_SHADOW_ETCHED_OUT() {
        return (int)4L;
    }
    public static int GTK_STATE_NORMAL() {
        return (int)0L;
    }
    public static int GTK_STATE_ACTIVE() {
        return (int)1L;
    }
    public static int GTK_STATE_PRELIGHT() {
        return (int)2L;
    }
    public static int GTK_STATE_SELECTED() {
        return (int)3L;
    }
    public static int GTK_STATE_INSENSITIVE() {
        return (int)4L;
    }
    public static int GTK_STATE_INCONSISTENT() {
        return (int)5L;
    }
    public static int GTK_STATE_FOCUSED() {
        return (int)6L;
    }
    public static int GTK_TOOLBAR_ICONS() {
        return (int)0L;
    }
    public static int GTK_TOOLBAR_TEXT() {
        return (int)1L;
    }
    public static int GTK_TOOLBAR_BOTH() {
        return (int)2L;
    }
    public static int GTK_TOOLBAR_BOTH_HORIZ() {
        return (int)3L;
    }
    public static int GTK_WRAP_NONE() {
        return (int)0L;
    }
    public static int GTK_WRAP_CHAR() {
        return (int)1L;
    }
    public static int GTK_WRAP_WORD() {
        return (int)2L;
    }
    public static int GTK_WRAP_WORD_CHAR() {
        return (int)3L;
    }
    public static int GTK_SORT_ASCENDING() {
        return (int)0L;
    }
    public static int GTK_SORT_DESCENDING() {
        return (int)1L;
    }
    public static int GTK_IM_PREEDIT_NOTHING() {
        return (int)0L;
    }
    public static int GTK_IM_PREEDIT_CALLBACK() {
        return (int)1L;
    }
    public static int GTK_IM_PREEDIT_NONE() {
        return (int)2L;
    }
    public static int GTK_IM_STATUS_NOTHING() {
        return (int)0L;
    }
    public static int GTK_IM_STATUS_CALLBACK() {
        return (int)1L;
    }
    public static int GTK_IM_STATUS_NONE() {
        return (int)2L;
    }
    public static int GTK_PACK_DIRECTION_LTR() {
        return (int)0L;
    }
    public static int GTK_PACK_DIRECTION_RTL() {
        return (int)1L;
    }
    public static int GTK_PACK_DIRECTION_TTB() {
        return (int)2L;
    }
    public static int GTK_PACK_DIRECTION_BTT() {
        return (int)3L;
    }
    public static int GTK_PRINT_PAGES_ALL() {
        return (int)0L;
    }
    public static int GTK_PRINT_PAGES_CURRENT() {
        return (int)1L;
    }
    public static int GTK_PRINT_PAGES_RANGES() {
        return (int)2L;
    }
    public static int GTK_PRINT_PAGES_SELECTION() {
        return (int)3L;
    }
    public static int GTK_PAGE_SET_ALL() {
        return (int)0L;
    }
    public static int GTK_PAGE_SET_EVEN() {
        return (int)1L;
    }
    public static int GTK_PAGE_SET_ODD() {
        return (int)2L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM() {
        return (int)0L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP() {
        return (int)1L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM() {
        return (int)2L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP() {
        return (int)3L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT() {
        return (int)4L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT() {
        return (int)5L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT() {
        return (int)6L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT() {
        return (int)7L;
    }
    public static int GTK_PAGE_ORIENTATION_PORTRAIT() {
        return (int)0L;
    }
    public static int GTK_PAGE_ORIENTATION_LANDSCAPE() {
        return (int)1L;
    }
    public static int GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT() {
        return (int)2L;
    }
    public static int GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE() {
        return (int)3L;
    }
    public static int GTK_PRINT_QUALITY_LOW() {
        return (int)0L;
    }
    public static int GTK_PRINT_QUALITY_NORMAL() {
        return (int)1L;
    }
    public static int GTK_PRINT_QUALITY_HIGH() {
        return (int)2L;
    }
    public static int GTK_PRINT_QUALITY_DRAFT() {
        return (int)3L;
    }
    public static int GTK_PRINT_DUPLEX_SIMPLEX() {
        return (int)0L;
    }
    public static int GTK_PRINT_DUPLEX_HORIZONTAL() {
        return (int)1L;
    }
    public static int GTK_PRINT_DUPLEX_VERTICAL() {
        return (int)2L;
    }
    public static int GTK_UNIT_NONE() {
        return (int)0L;
    }
    public static int GTK_UNIT_POINTS() {
        return (int)1L;
    }
    public static int GTK_UNIT_INCH() {
        return (int)2L;
    }
    public static int GTK_UNIT_MM() {
        return (int)3L;
    }
    public static int GTK_TREE_VIEW_GRID_LINES_NONE() {
        return (int)0L;
    }
    public static int GTK_TREE_VIEW_GRID_LINES_HORIZONTAL() {
        return (int)1L;
    }
    public static int GTK_TREE_VIEW_GRID_LINES_VERTICAL() {
        return (int)2L;
    }
    public static int GTK_TREE_VIEW_GRID_LINES_BOTH() {
        return (int)3L;
    }
    public static int GTK_DRAG_RESULT_SUCCESS() {
        return (int)0L;
    }
    public static int GTK_DRAG_RESULT_NO_TARGET() {
        return (int)1L;
    }
    public static int GTK_DRAG_RESULT_USER_CANCELLED() {
        return (int)2L;
    }
    public static int GTK_DRAG_RESULT_TIMEOUT_EXPIRED() {
        return (int)3L;
    }
    public static int GTK_DRAG_RESULT_GRAB_BROKEN() {
        return (int)4L;
    }
    public static int GTK_DRAG_RESULT_ERROR() {
        return (int)5L;
    }
    public static int GTK_SIZE_GROUP_NONE() {
        return (int)0L;
    }
    public static int GTK_SIZE_GROUP_HORIZONTAL() {
        return (int)1L;
    }
    public static int GTK_SIZE_GROUP_VERTICAL() {
        return (int)2L;
    }
    public static int GTK_SIZE_GROUP_BOTH() {
        return (int)3L;
    }
    public static int GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH() {
        return (int)0L;
    }
    public static int GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT() {
        return (int)1L;
    }
    public static int GTK_SIZE_REQUEST_CONSTANT_SIZE() {
        return (int)2L;
    }
    public static int GTK_SCROLL_MINIMUM() {
        return (int)0L;
    }
    public static int GTK_SCROLL_NATURAL() {
        return (int)1L;
    }
    public static int GTK_STATE_FLAG_NORMAL() {
        return (int)0L;
    }
    public static int GTK_STATE_FLAG_ACTIVE() {
        return (int)1L;
    }
    public static int GTK_STATE_FLAG_PRELIGHT() {
        return (int)2L;
    }
    public static int GTK_STATE_FLAG_SELECTED() {
        return (int)4L;
    }
    public static int GTK_STATE_FLAG_INSENSITIVE() {
        return (int)8L;
    }
    public static int GTK_STATE_FLAG_INCONSISTENT() {
        return (int)16L;
    }
    public static int GTK_STATE_FLAG_FOCUSED() {
        return (int)32L;
    }
    public static int GTK_STATE_FLAG_BACKDROP() {
        return (int)64L;
    }
    public static int GTK_STATE_FLAG_DIR_LTR() {
        return (int)128L;
    }
    public static int GTK_STATE_FLAG_DIR_RTL() {
        return (int)256L;
    }
    public static int GTK_STATE_FLAG_LINK() {
        return (int)512L;
    }
    public static int GTK_STATE_FLAG_VISITED() {
        return (int)1024L;
    }
    public static int GTK_STATE_FLAG_CHECKED() {
        return (int)2048L;
    }
    public static int GTK_STATE_FLAG_DROP_ACTIVE() {
        return (int)4096L;
    }
    public static int GTK_REGION_EVEN() {
        return (int)1L;
    }
    public static int GTK_REGION_ODD() {
        return (int)2L;
    }
    public static int GTK_REGION_FIRST() {
        return (int)4L;
    }
    public static int GTK_REGION_LAST() {
        return (int)8L;
    }
    public static int GTK_REGION_ONLY() {
        return (int)16L;
    }
    public static int GTK_REGION_SORTED() {
        return (int)32L;
    }
    public static int GTK_JUNCTION_NONE() {
        return (int)0L;
    }
    public static int GTK_JUNCTION_CORNER_TOPLEFT() {
        return (int)1L;
    }
    public static int GTK_JUNCTION_CORNER_TOPRIGHT() {
        return (int)2L;
    }
    public static int GTK_JUNCTION_CORNER_BOTTOMLEFT() {
        return (int)4L;
    }
    public static int GTK_JUNCTION_CORNER_BOTTOMRIGHT() {
        return (int)8L;
    }
    public static int GTK_JUNCTION_TOP() {
        return (int)3L;
    }
    public static int GTK_JUNCTION_BOTTOM() {
        return (int)12L;
    }
    public static int GTK_JUNCTION_LEFT() {
        return (int)5L;
    }
    public static int GTK_JUNCTION_RIGHT() {
        return (int)10L;
    }
    public static int GTK_BORDER_STYLE_NONE() {
        return (int)0L;
    }
    public static int GTK_BORDER_STYLE_SOLID() {
        return (int)1L;
    }
    public static int GTK_BORDER_STYLE_INSET() {
        return (int)2L;
    }
    public static int GTK_BORDER_STYLE_OUTSET() {
        return (int)3L;
    }
    public static int GTK_BORDER_STYLE_HIDDEN() {
        return (int)4L;
    }
    public static int GTK_BORDER_STYLE_DOTTED() {
        return (int)5L;
    }
    public static int GTK_BORDER_STYLE_DASHED() {
        return (int)6L;
    }
    public static int GTK_BORDER_STYLE_DOUBLE() {
        return (int)7L;
    }
    public static int GTK_BORDER_STYLE_GROOVE() {
        return (int)8L;
    }
    public static int GTK_BORDER_STYLE_RIDGE() {
        return (int)9L;
    }
    public static int GTK_LEVEL_BAR_MODE_CONTINUOUS() {
        return (int)0L;
    }
    public static int GTK_LEVEL_BAR_MODE_DISCRETE() {
        return (int)1L;
    }
    public static int GTK_INPUT_PURPOSE_FREE_FORM() {
        return (int)0L;
    }
    public static int GTK_INPUT_PURPOSE_ALPHA() {
        return (int)1L;
    }
    public static int GTK_INPUT_PURPOSE_DIGITS() {
        return (int)2L;
    }
    public static int GTK_INPUT_PURPOSE_NUMBER() {
        return (int)3L;
    }
    public static int GTK_INPUT_PURPOSE_PHONE() {
        return (int)4L;
    }
    public static int GTK_INPUT_PURPOSE_URL() {
        return (int)5L;
    }
    public static int GTK_INPUT_PURPOSE_EMAIL() {
        return (int)6L;
    }
    public static int GTK_INPUT_PURPOSE_NAME() {
        return (int)7L;
    }
    public static int GTK_INPUT_PURPOSE_PASSWORD() {
        return (int)8L;
    }
    public static int GTK_INPUT_PURPOSE_PIN() {
        return (int)9L;
    }
    public static int GTK_INPUT_PURPOSE_TERMINAL() {
        return (int)10L;
    }
    public static int GTK_INPUT_HINT_NONE() {
        return (int)0L;
    }
    public static int GTK_INPUT_HINT_SPELLCHECK() {
        return (int)1L;
    }
    public static int GTK_INPUT_HINT_NO_SPELLCHECK() {
        return (int)2L;
    }
    public static int GTK_INPUT_HINT_WORD_COMPLETION() {
        return (int)4L;
    }
    public static int GTK_INPUT_HINT_LOWERCASE() {
        return (int)8L;
    }
    public static int GTK_INPUT_HINT_UPPERCASE_CHARS() {
        return (int)16L;
    }
    public static int GTK_INPUT_HINT_UPPERCASE_WORDS() {
        return (int)32L;
    }
    public static int GTK_INPUT_HINT_UPPERCASE_SENTENCES() {
        return (int)64L;
    }
    public static int GTK_INPUT_HINT_INHIBIT_OSK() {
        return (int)128L;
    }
    public static int GTK_INPUT_HINT_VERTICAL_WRITING() {
        return (int)256L;
    }
    public static int GTK_INPUT_HINT_EMOJI() {
        return (int)512L;
    }
    public static int GTK_INPUT_HINT_NO_EMOJI() {
        return (int)1024L;
    }
    public static int GTK_PHASE_NONE() {
        return (int)0L;
    }
    public static int GTK_PHASE_CAPTURE() {
        return (int)1L;
    }
    public static int GTK_PHASE_BUBBLE() {
        return (int)2L;
    }
    public static int GTK_PHASE_TARGET() {
        return (int)3L;
    }
    public static int GTK_EVENT_SEQUENCE_NONE() {
        return (int)0L;
    }
    public static int GTK_EVENT_SEQUENCE_CLAIMED() {
        return (int)1L;
    }
    public static int GTK_EVENT_SEQUENCE_DENIED() {
        return (int)2L;
    }
    public static int GTK_PAN_DIRECTION_LEFT() {
        return (int)0L;
    }
    public static int GTK_PAN_DIRECTION_RIGHT() {
        return (int)1L;
    }
    public static int GTK_PAN_DIRECTION_UP() {
        return (int)2L;
    }
    public static int GTK_PAN_DIRECTION_DOWN() {
        return (int)3L;
    }
    public static int GTK_POPOVER_CONSTRAINT_NONE() {
        return (int)0L;
    }
    public static int GTK_POPOVER_CONSTRAINT_WINDOW() {
        return (int)1L;
    }
    public static int GTK_ACCEL_VISIBLE() {
        return (int)1L;
    }
    public static int GTK_ACCEL_LOCKED() {
        return (int)2L;
    }
    public static int GTK_ACCEL_MASK() {
        return (int)7L;
    }
    public static MethodHandle gtk_accel_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.gtk_accel_group_get_type$MH,"gtk_accel_group_get_type");
    }
    public static long gtk_accel_group_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1330.gtk_accel_group_get_type$MH, "gtk_accel_group_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_new$MH,"gtk_accel_group_new");
    }
    public static MemoryAddress gtk_accel_group_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_new$MH, "gtk_accel_group_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_get_is_locked$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_get_is_locked$MH,"gtk_accel_group_get_is_locked");
    }
    public static int gtk_accel_group_get_is_locked ( Addressable accel_group) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_get_is_locked$MH, "gtk_accel_group_get_is_locked");
        try {
            return (int)mh$.invokeExact(accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_get_modifier_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_get_modifier_mask$MH,"gtk_accel_group_get_modifier_mask");
    }
    public static int gtk_accel_group_get_modifier_mask ( Addressable accel_group) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_get_modifier_mask$MH, "gtk_accel_group_get_modifier_mask");
        try {
            return (int)mh$.invokeExact(accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_lock$MH,"gtk_accel_group_lock");
    }
    public static void gtk_accel_group_lock ( Addressable accel_group) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_lock$MH, "gtk_accel_group_lock");
        try {
            mh$.invokeExact(accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_unlock$MH,"gtk_accel_group_unlock");
    }
    public static void gtk_accel_group_unlock ( Addressable accel_group) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_unlock$MH, "gtk_accel_group_unlock");
        try {
            mh$.invokeExact(accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_connect$MH,"gtk_accel_group_connect");
    }
    public static void gtk_accel_group_connect ( Addressable accel_group,  int accel_key,  int accel_mods,  int accel_flags,  Addressable closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.gtk_accel_group_connect$MH, "gtk_accel_group_connect");
        try {
            mh$.invokeExact(accel_group, accel_key, accel_mods, accel_flags, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_connect_by_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_accel_group_connect_by_path$MH,"gtk_accel_group_connect_by_path");
    }
    public static void gtk_accel_group_connect_by_path ( Addressable accel_group,  Addressable accel_path,  Addressable closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.gtk_accel_group_connect_by_path$MH, "gtk_accel_group_connect_by_path");
        try {
            mh$.invokeExact(accel_group, accel_path, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_accel_group_disconnect$MH,"gtk_accel_group_disconnect");
    }
    public static int gtk_accel_group_disconnect ( Addressable accel_group,  Addressable closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.gtk_accel_group_disconnect$MH, "gtk_accel_group_disconnect");
        try {
            return (int)mh$.invokeExact(accel_group, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_disconnect_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_accel_group_disconnect_key$MH,"gtk_accel_group_disconnect_key");
    }
    public static int gtk_accel_group_disconnect_key ( Addressable accel_group,  int accel_key,  int accel_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.gtk_accel_group_disconnect_key$MH, "gtk_accel_group_disconnect_key");
        try {
            return (int)mh$.invokeExact(accel_group, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_accel_group_activate$MH,"gtk_accel_group_activate");
    }
    public static int gtk_accel_group_activate ( Addressable accel_group,  int accel_quark,  Addressable acceleratable,  int accel_key,  int accel_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.gtk_accel_group_activate$MH, "gtk_accel_group_activate");
        try {
            return (int)mh$.invokeExact(accel_group, accel_quark, acceleratable, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_accel_group_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$1332._gtk_accel_group_attach$MH,"_gtk_accel_group_attach");
    }
    public static void _gtk_accel_group_attach ( Addressable accel_group,  Addressable object) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332._gtk_accel_group_attach$MH, "_gtk_accel_group_attach");
        try {
            mh$.invokeExact(accel_group, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_accel_group_detach$MH() {
        return RuntimeHelper.requireNonNull(constants$1332._gtk_accel_group_detach$MH,"_gtk_accel_group_detach");
    }
    public static void _gtk_accel_group_detach ( Addressable accel_group,  Addressable object) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332._gtk_accel_group_detach$MH, "_gtk_accel_group_detach");
        try {
            mh$.invokeExact(accel_group, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_groups_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_accel_groups_activate$MH,"gtk_accel_groups_activate");
    }
    public static int gtk_accel_groups_activate ( Addressable object,  int accel_key,  int accel_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.gtk_accel_groups_activate$MH, "gtk_accel_groups_activate");
        try {
            return (int)mh$.invokeExact(object, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_groups_from_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_accel_groups_from_object$MH,"gtk_accel_groups_from_object");
    }
    public static MemoryAddress gtk_accel_groups_from_object ( Addressable object) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.gtk_accel_groups_from_object$MH, "gtk_accel_groups_from_object");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_find$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_accel_group_find$MH,"gtk_accel_group_find");
    }
    public static MemoryAddress gtk_accel_group_find ( Addressable accel_group,  Addressable find_func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.gtk_accel_group_find$MH, "gtk_accel_group_find");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accel_group, find_func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_from_accel_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_accel_group_from_accel_closure$MH,"gtk_accel_group_from_accel_closure");
    }
    public static MemoryAddress gtk_accel_group_from_accel_closure ( Addressable closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.gtk_accel_group_from_accel_closure$MH, "gtk_accel_group_from_accel_closure");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_accelerator_valid$MH,"gtk_accelerator_valid");
    }
    public static int gtk_accelerator_valid ( int keyval,  int modifiers) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.gtk_accelerator_valid$MH, "gtk_accelerator_valid");
        try {
            return (int)mh$.invokeExact(keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_accelerator_parse$MH,"gtk_accelerator_parse");
    }
    public static void gtk_accelerator_parse ( Addressable accelerator,  Addressable accelerator_key,  Addressable accelerator_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.gtk_accelerator_parse$MH, "gtk_accelerator_parse");
        try {
            mh$.invokeExact(accelerator, accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_parse_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_parse_with_keycode$MH,"gtk_accelerator_parse_with_keycode");
    }
    public static void gtk_accelerator_parse_with_keycode ( Addressable accelerator,  Addressable accelerator_key,  Addressable accelerator_codes,  Addressable accelerator_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_parse_with_keycode$MH, "gtk_accelerator_parse_with_keycode");
        try {
            mh$.invokeExact(accelerator, accelerator_key, accelerator_codes, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_name$MH,"gtk_accelerator_name");
    }
    public static MemoryAddress gtk_accelerator_name ( int accelerator_key,  int accelerator_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_name$MH, "gtk_accelerator_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_name_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_name_with_keycode$MH,"gtk_accelerator_name_with_keycode");
    }
    public static MemoryAddress gtk_accelerator_name_with_keycode ( Addressable display,  int accelerator_key,  int keycode,  int accelerator_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_name_with_keycode$MH, "gtk_accelerator_name_with_keycode");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(display, accelerator_key, keycode, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_get_label$MH,"gtk_accelerator_get_label");
    }
    public static MemoryAddress gtk_accelerator_get_label ( int accelerator_key,  int accelerator_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_get_label$MH, "gtk_accelerator_get_label");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_label_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_get_label_with_keycode$MH,"gtk_accelerator_get_label_with_keycode");
    }
    public static MemoryAddress gtk_accelerator_get_label_with_keycode ( Addressable display,  int accelerator_key,  int keycode,  int accelerator_mods) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_get_label_with_keycode$MH, "gtk_accelerator_get_label_with_keycode");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(display, accelerator_key, keycode, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_set_default_mod_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_set_default_mod_mask$MH,"gtk_accelerator_set_default_mod_mask");
    }
    public static void gtk_accelerator_set_default_mod_mask ( int default_mod_mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.gtk_accelerator_set_default_mod_mask$MH, "gtk_accelerator_set_default_mod_mask");
        try {
            mh$.invokeExact(default_mod_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_default_mod_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.gtk_accelerator_get_default_mod_mask$MH,"gtk_accelerator_get_default_mod_mask");
    }
    public static int gtk_accelerator_get_default_mod_mask () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.gtk_accelerator_get_default_mod_mask$MH, "gtk_accelerator_get_default_mod_mask");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_query$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.gtk_accel_group_query$MH,"gtk_accel_group_query");
    }
    public static MemoryAddress gtk_accel_group_query ( Addressable accel_group,  int accel_key,  int accel_mods,  Addressable n_entries) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.gtk_accel_group_query$MH, "gtk_accel_group_query");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accel_group, accel_key, accel_mods, n_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAccelGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAccelGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAccelGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAccelGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAccelGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.glib_autoptr_clear_GtkAccelGroup$MH,"glib_autoptr_clear_GtkAccelGroup");
    }
    public static void glib_autoptr_clear_GtkAccelGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.glib_autoptr_clear_GtkAccelGroup$MH, "glib_autoptr_clear_GtkAccelGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAccelGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.glib_autoptr_cleanup_GtkAccelGroup$MH,"glib_autoptr_cleanup_GtkAccelGroup");
    }
    public static void glib_autoptr_cleanup_GtkAccelGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.glib_autoptr_cleanup_GtkAccelGroup$MH, "glib_autoptr_cleanup_GtkAccelGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAccelGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.glib_listautoptr_cleanup_GtkAccelGroup$MH,"glib_listautoptr_cleanup_GtkAccelGroup");
    }
    public static void glib_listautoptr_cleanup_GtkAccelGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.glib_listautoptr_cleanup_GtkAccelGroup$MH, "glib_listautoptr_cleanup_GtkAccelGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAccelGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.glib_slistautoptr_cleanup_GtkAccelGroup$MH,"glib_slistautoptr_cleanup_GtkAccelGroup");
    }
    public static void glib_slistautoptr_cleanup_GtkAccelGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.glib_slistautoptr_cleanup_GtkAccelGroup$MH, "glib_slistautoptr_cleanup_GtkAccelGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAccelGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.glib_queueautoptr_cleanup_GtkAccelGroup$MH,"glib_queueautoptr_cleanup_GtkAccelGroup");
    }
    public static void glib_queueautoptr_cleanup_GtkAccelGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.glib_queueautoptr_cleanup_GtkAccelGroup$MH, "glib_queueautoptr_cleanup_GtkAccelGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_border_get_type$MH,"gtk_border_get_type");
    }
    public static long gtk_border_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.gtk_border_get_type$MH, "gtk_border_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_border_new$MH,"gtk_border_new");
    }
    public static MemoryAddress gtk_border_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.gtk_border_new$MH, "gtk_border_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_border_copy$MH,"gtk_border_copy");
    }
    public static MemoryAddress gtk_border_copy ( Addressable border_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.gtk_border_copy$MH, "gtk_border_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(border_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_border_free$MH,"gtk_border_free");
    }
    public static void gtk_border_free ( Addressable border_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.gtk_border_free$MH, "gtk_border_free");
        try {
            mh$.invokeExact(border_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkBorder_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBorder_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBorder_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBorder_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.glib_autoptr_clear_GtkBorder$MH,"glib_autoptr_clear_GtkBorder");
    }
    public static void glib_autoptr_clear_GtkBorder ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.glib_autoptr_clear_GtkBorder$MH, "glib_autoptr_clear_GtkBorder");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.glib_autoptr_cleanup_GtkBorder$MH,"glib_autoptr_cleanup_GtkBorder");
    }
    public static void glib_autoptr_cleanup_GtkBorder ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.glib_autoptr_cleanup_GtkBorder$MH, "glib_autoptr_cleanup_GtkBorder");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.glib_listautoptr_cleanup_GtkBorder$MH,"glib_listautoptr_cleanup_GtkBorder");
    }
    public static void glib_listautoptr_cleanup_GtkBorder ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.glib_listautoptr_cleanup_GtkBorder$MH, "glib_listautoptr_cleanup_GtkBorder");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.glib_slistautoptr_cleanup_GtkBorder$MH,"glib_slistautoptr_cleanup_GtkBorder");
    }
    public static void glib_slistautoptr_cleanup_GtkBorder ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.glib_slistautoptr_cleanup_GtkBorder$MH, "glib_slistautoptr_cleanup_GtkBorder");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.glib_queueautoptr_cleanup_GtkBorder$MH,"glib_queueautoptr_cleanup_GtkBorder");
    }
    public static void glib_queueautoptr_cleanup_GtkBorder ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.glib_queueautoptr_cleanup_GtkBorder$MH, "glib_queueautoptr_cleanup_GtkBorder");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_major_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.atk_get_major_version$MH,"atk_get_major_version");
    }
    public static int atk_get_major_version () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.atk_get_major_version$MH, "atk_get_major_version");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_minor_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.atk_get_minor_version$MH,"atk_get_minor_version");
    }
    public static int atk_get_minor_version () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.atk_get_minor_version$MH, "atk_get_minor_version");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_micro_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.atk_get_micro_version$MH,"atk_get_micro_version");
    }
    public static int atk_get_micro_version () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.atk_get_micro_version$MH, "atk_get_micro_version");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_binary_age$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.atk_get_binary_age$MH,"atk_get_binary_age");
    }
    public static int atk_get_binary_age () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.atk_get_binary_age$MH, "atk_get_binary_age");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_interface_age$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.atk_get_interface_age$MH,"atk_get_interface_age");
    }
    public static int atk_get_interface_age () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.atk_get_interface_age$MH, "atk_get_interface_age");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_STATE_INVALID() {
        return (int)0L;
    }
    public static int ATK_STATE_ACTIVE() {
        return (int)1L;
    }
    public static int ATK_STATE_ARMED() {
        return (int)2L;
    }
    public static int ATK_STATE_BUSY() {
        return (int)3L;
    }
    public static int ATK_STATE_CHECKED() {
        return (int)4L;
    }
    public static int ATK_STATE_DEFUNCT() {
        return (int)5L;
    }
    public static int ATK_STATE_EDITABLE() {
        return (int)6L;
    }
    public static int ATK_STATE_ENABLED() {
        return (int)7L;
    }
    public static int ATK_STATE_EXPANDABLE() {
        return (int)8L;
    }
    public static int ATK_STATE_EXPANDED() {
        return (int)9L;
    }
    public static int ATK_STATE_FOCUSABLE() {
        return (int)10L;
    }
    public static int ATK_STATE_FOCUSED() {
        return (int)11L;
    }
    public static int ATK_STATE_HORIZONTAL() {
        return (int)12L;
    }
    public static int ATK_STATE_ICONIFIED() {
        return (int)13L;
    }
    public static int ATK_STATE_MODAL() {
        return (int)14L;
    }
    public static int ATK_STATE_MULTI_LINE() {
        return (int)15L;
    }
    public static int ATK_STATE_MULTISELECTABLE() {
        return (int)16L;
    }
    public static int ATK_STATE_OPAQUE() {
        return (int)17L;
    }
    public static int ATK_STATE_PRESSED() {
        return (int)18L;
    }
    public static int ATK_STATE_RESIZABLE() {
        return (int)19L;
    }
    public static int ATK_STATE_SELECTABLE() {
        return (int)20L;
    }
    public static int ATK_STATE_SELECTED() {
        return (int)21L;
    }
    public static int ATK_STATE_SENSITIVE() {
        return (int)22L;
    }
    public static int ATK_STATE_SHOWING() {
        return (int)23L;
    }
    public static int ATK_STATE_SINGLE_LINE() {
        return (int)24L;
    }
    public static int ATK_STATE_STALE() {
        return (int)25L;
    }
    public static int ATK_STATE_TRANSIENT() {
        return (int)26L;
    }
    public static int ATK_STATE_VERTICAL() {
        return (int)27L;
    }
    public static int ATK_STATE_VISIBLE() {
        return (int)28L;
    }
    public static int ATK_STATE_MANAGES_DESCENDANTS() {
        return (int)29L;
    }
    public static int ATK_STATE_INDETERMINATE() {
        return (int)30L;
    }
    public static int ATK_STATE_TRUNCATED() {
        return (int)31L;
    }
    public static int ATK_STATE_REQUIRED() {
        return (int)32L;
    }
    public static int ATK_STATE_INVALID_ENTRY() {
        return (int)33L;
    }
    public static int ATK_STATE_SUPPORTS_AUTOCOMPLETION() {
        return (int)34L;
    }
    public static int ATK_STATE_SELECTABLE_TEXT() {
        return (int)35L;
    }
    public static int ATK_STATE_DEFAULT() {
        return (int)36L;
    }
    public static int ATK_STATE_ANIMATED() {
        return (int)37L;
    }
    public static int ATK_STATE_VISITED() {
        return (int)38L;
    }
    public static int ATK_STATE_CHECKABLE() {
        return (int)39L;
    }
    public static int ATK_STATE_HAS_POPUP() {
        return (int)40L;
    }
    public static int ATK_STATE_HAS_TOOLTIP() {
        return (int)41L;
    }
    public static int ATK_STATE_READ_ONLY() {
        return (int)42L;
    }
    public static int ATK_STATE_LAST_DEFINED() {
        return (int)43L;
    }
    public static MethodHandle atk_state_type_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.atk_state_type_register$MH,"atk_state_type_register");
    }
    public static int atk_state_type_register ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.atk_state_type_register$MH, "atk_state_type_register");
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_type_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.atk_state_type_get_name$MH,"atk_state_type_get_name");
    }
    public static MemoryAddress atk_state_type_get_name ( int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.atk_state_type_get_name$MH, "atk_state_type_get_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_type_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.atk_state_type_for_name$MH,"atk_state_type_for_name");
    }
    public static int atk_state_type_for_name ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.atk_state_type_for_name$MH, "atk_state_type_for_name");
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_RELATION_NULL() {
        return (int)0L;
    }
    public static int ATK_RELATION_CONTROLLED_BY() {
        return (int)1L;
    }
    public static int ATK_RELATION_CONTROLLER_FOR() {
        return (int)2L;
    }
    public static int ATK_RELATION_LABEL_FOR() {
        return (int)3L;
    }
    public static int ATK_RELATION_LABELLED_BY() {
        return (int)4L;
    }
    public static int ATK_RELATION_MEMBER_OF() {
        return (int)5L;
    }
    public static int ATK_RELATION_NODE_CHILD_OF() {
        return (int)6L;
    }
    public static int ATK_RELATION_FLOWS_TO() {
        return (int)7L;
    }
    public static int ATK_RELATION_FLOWS_FROM() {
        return (int)8L;
    }
    public static int ATK_RELATION_SUBWINDOW_OF() {
        return (int)9L;
    }
    public static int ATK_RELATION_EMBEDS() {
        return (int)10L;
    }
    public static int ATK_RELATION_EMBEDDED_BY() {
        return (int)11L;
    }
    public static int ATK_RELATION_POPUP_FOR() {
        return (int)12L;
    }
    public static int ATK_RELATION_PARENT_WINDOW_OF() {
        return (int)13L;
    }
    public static int ATK_RELATION_DESCRIBED_BY() {
        return (int)14L;
    }
    public static int ATK_RELATION_DESCRIPTION_FOR() {
        return (int)15L;
    }
    public static int ATK_RELATION_NODE_PARENT_OF() {
        return (int)16L;
    }
    public static int ATK_RELATION_DETAILS() {
        return (int)17L;
    }
    public static int ATK_RELATION_DETAILS_FOR() {
        return (int)18L;
    }
    public static int ATK_RELATION_ERROR_MESSAGE() {
        return (int)19L;
    }
    public static int ATK_RELATION_ERROR_FOR() {
        return (int)20L;
    }
    public static int ATK_RELATION_LAST_DEFINED() {
        return (int)21L;
    }
    public static int ATK_ROLE_INVALID() {
        return (int)0L;
    }
    public static int ATK_ROLE_ACCEL_LABEL() {
        return (int)1L;
    }
    public static int ATK_ROLE_ALERT() {
        return (int)2L;
    }
    public static int ATK_ROLE_ANIMATION() {
        return (int)3L;
    }
    public static int ATK_ROLE_ARROW() {
        return (int)4L;
    }
    public static int ATK_ROLE_CALENDAR() {
        return (int)5L;
    }
    public static int ATK_ROLE_CANVAS() {
        return (int)6L;
    }
    public static int ATK_ROLE_CHECK_BOX() {
        return (int)7L;
    }
    public static int ATK_ROLE_CHECK_MENU_ITEM() {
        return (int)8L;
    }
    public static int ATK_ROLE_COLOR_CHOOSER() {
        return (int)9L;
    }
    public static int ATK_ROLE_COLUMN_HEADER() {
        return (int)10L;
    }
    public static int ATK_ROLE_COMBO_BOX() {
        return (int)11L;
    }
    public static int ATK_ROLE_DATE_EDITOR() {
        return (int)12L;
    }
    public static int ATK_ROLE_DESKTOP_ICON() {
        return (int)13L;
    }
    public static int ATK_ROLE_DESKTOP_FRAME() {
        return (int)14L;
    }
    public static int ATK_ROLE_DIAL() {
        return (int)15L;
    }
    public static int ATK_ROLE_DIALOG() {
        return (int)16L;
    }
    public static int ATK_ROLE_DIRECTORY_PANE() {
        return (int)17L;
    }
    public static int ATK_ROLE_DRAWING_AREA() {
        return (int)18L;
    }
    public static int ATK_ROLE_FILE_CHOOSER() {
        return (int)19L;
    }
    public static int ATK_ROLE_FILLER() {
        return (int)20L;
    }
    public static int ATK_ROLE_FONT_CHOOSER() {
        return (int)21L;
    }
    public static int ATK_ROLE_FRAME() {
        return (int)22L;
    }
    public static int ATK_ROLE_GLASS_PANE() {
        return (int)23L;
    }
    public static int ATK_ROLE_HTML_CONTAINER() {
        return (int)24L;
    }
    public static int ATK_ROLE_ICON() {
        return (int)25L;
    }
    public static int ATK_ROLE_IMAGE() {
        return (int)26L;
    }
    public static int ATK_ROLE_INTERNAL_FRAME() {
        return (int)27L;
    }
    public static int ATK_ROLE_LABEL() {
        return (int)28L;
    }
    public static int ATK_ROLE_LAYERED_PANE() {
        return (int)29L;
    }
    public static int ATK_ROLE_LIST() {
        return (int)30L;
    }
    public static int ATK_ROLE_LIST_ITEM() {
        return (int)31L;
    }
    public static int ATK_ROLE_MENU() {
        return (int)32L;
    }
    public static int ATK_ROLE_MENU_BAR() {
        return (int)33L;
    }
    public static int ATK_ROLE_MENU_ITEM() {
        return (int)34L;
    }
    public static int ATK_ROLE_OPTION_PANE() {
        return (int)35L;
    }
    public static int ATK_ROLE_PAGE_TAB() {
        return (int)36L;
    }
    public static int ATK_ROLE_PAGE_TAB_LIST() {
        return (int)37L;
    }
    public static int ATK_ROLE_PANEL() {
        return (int)38L;
    }
    public static int ATK_ROLE_PASSWORD_TEXT() {
        return (int)39L;
    }
    public static int ATK_ROLE_POPUP_MENU() {
        return (int)40L;
    }
    public static int ATK_ROLE_PROGRESS_BAR() {
        return (int)41L;
    }
    public static int ATK_ROLE_PUSH_BUTTON() {
        return (int)42L;
    }
    public static int ATK_ROLE_RADIO_BUTTON() {
        return (int)43L;
    }
    public static int ATK_ROLE_RADIO_MENU_ITEM() {
        return (int)44L;
    }
    public static int ATK_ROLE_ROOT_PANE() {
        return (int)45L;
    }
    public static int ATK_ROLE_ROW_HEADER() {
        return (int)46L;
    }
    public static int ATK_ROLE_SCROLL_BAR() {
        return (int)47L;
    }
    public static int ATK_ROLE_SCROLL_PANE() {
        return (int)48L;
    }
    public static int ATK_ROLE_SEPARATOR() {
        return (int)49L;
    }
    public static int ATK_ROLE_SLIDER() {
        return (int)50L;
    }
    public static int ATK_ROLE_SPLIT_PANE() {
        return (int)51L;
    }
    public static int ATK_ROLE_SPIN_BUTTON() {
        return (int)52L;
    }
    public static int ATK_ROLE_STATUSBAR() {
        return (int)53L;
    }
    public static int ATK_ROLE_TABLE() {
        return (int)54L;
    }
    public static int ATK_ROLE_TABLE_CELL() {
        return (int)55L;
    }
    public static int ATK_ROLE_TABLE_COLUMN_HEADER() {
        return (int)56L;
    }
    public static int ATK_ROLE_TABLE_ROW_HEADER() {
        return (int)57L;
    }
    public static int ATK_ROLE_TEAR_OFF_MENU_ITEM() {
        return (int)58L;
    }
    public static int ATK_ROLE_TERMINAL() {
        return (int)59L;
    }
    public static int ATK_ROLE_TEXT() {
        return (int)60L;
    }
    public static int ATK_ROLE_TOGGLE_BUTTON() {
        return (int)61L;
    }
    public static int ATK_ROLE_TOOL_BAR() {
        return (int)62L;
    }
    public static int ATK_ROLE_TOOL_TIP() {
        return (int)63L;
    }
    public static int ATK_ROLE_TREE() {
        return (int)64L;
    }
    public static int ATK_ROLE_TREE_TABLE() {
        return (int)65L;
    }
    public static int ATK_ROLE_UNKNOWN() {
        return (int)66L;
    }
    public static int ATK_ROLE_VIEWPORT() {
        return (int)67L;
    }
    public static int ATK_ROLE_WINDOW() {
        return (int)68L;
    }
    public static int ATK_ROLE_HEADER() {
        return (int)69L;
    }
    public static int ATK_ROLE_FOOTER() {
        return (int)70L;
    }
    public static int ATK_ROLE_PARAGRAPH() {
        return (int)71L;
    }
    public static int ATK_ROLE_RULER() {
        return (int)72L;
    }
    public static int ATK_ROLE_APPLICATION() {
        return (int)73L;
    }
    public static int ATK_ROLE_AUTOCOMPLETE() {
        return (int)74L;
    }
    public static int ATK_ROLE_EDITBAR() {
        return (int)75L;
    }
    public static int ATK_ROLE_EMBEDDED() {
        return (int)76L;
    }
    public static int ATK_ROLE_ENTRY() {
        return (int)77L;
    }
    public static int ATK_ROLE_CHART() {
        return (int)78L;
    }
    public static int ATK_ROLE_CAPTION() {
        return (int)79L;
    }
    public static int ATK_ROLE_DOCUMENT_FRAME() {
        return (int)80L;
    }
    public static int ATK_ROLE_HEADING() {
        return (int)81L;
    }
    public static int ATK_ROLE_PAGE() {
        return (int)82L;
    }
    public static int ATK_ROLE_SECTION() {
        return (int)83L;
    }
    public static int ATK_ROLE_REDUNDANT_OBJECT() {
        return (int)84L;
    }
    public static int ATK_ROLE_FORM() {
        return (int)85L;
    }
    public static int ATK_ROLE_LINK() {
        return (int)86L;
    }
    public static int ATK_ROLE_INPUT_METHOD_WINDOW() {
        return (int)87L;
    }
    public static int ATK_ROLE_TABLE_ROW() {
        return (int)88L;
    }
    public static int ATK_ROLE_TREE_ITEM() {
        return (int)89L;
    }
    public static int ATK_ROLE_DOCUMENT_SPREADSHEET() {
        return (int)90L;
    }
    public static int ATK_ROLE_DOCUMENT_PRESENTATION() {
        return (int)91L;
    }
    public static int ATK_ROLE_DOCUMENT_TEXT() {
        return (int)92L;
    }
    public static int ATK_ROLE_DOCUMENT_WEB() {
        return (int)93L;
    }
    public static int ATK_ROLE_DOCUMENT_EMAIL() {
        return (int)94L;
    }
    public static int ATK_ROLE_COMMENT() {
        return (int)95L;
    }
    public static int ATK_ROLE_LIST_BOX() {
        return (int)96L;
    }
    public static int ATK_ROLE_GROUPING() {
        return (int)97L;
    }
    public static int ATK_ROLE_IMAGE_MAP() {
        return (int)98L;
    }
    public static int ATK_ROLE_NOTIFICATION() {
        return (int)99L;
    }
    public static int ATK_ROLE_INFO_BAR() {
        return (int)100L;
    }
    public static int ATK_ROLE_LEVEL_BAR() {
        return (int)101L;
    }
    public static int ATK_ROLE_TITLE_BAR() {
        return (int)102L;
    }
    public static int ATK_ROLE_BLOCK_QUOTE() {
        return (int)103L;
    }
    public static int ATK_ROLE_AUDIO() {
        return (int)104L;
    }
    public static int ATK_ROLE_VIDEO() {
        return (int)105L;
    }
    public static int ATK_ROLE_DEFINITION() {
        return (int)106L;
    }
    public static int ATK_ROLE_ARTICLE() {
        return (int)107L;
    }
    public static int ATK_ROLE_LANDMARK() {
        return (int)108L;
    }
    public static int ATK_ROLE_LOG() {
        return (int)109L;
    }
    public static int ATK_ROLE_MARQUEE() {
        return (int)110L;
    }
    public static int ATK_ROLE_MATH() {
        return (int)111L;
    }
    public static int ATK_ROLE_RATING() {
        return (int)112L;
    }
    public static int ATK_ROLE_TIMER() {
        return (int)113L;
    }
    public static int ATK_ROLE_DESCRIPTION_LIST() {
        return (int)114L;
    }
    public static int ATK_ROLE_DESCRIPTION_TERM() {
        return (int)115L;
    }
    public static int ATK_ROLE_DESCRIPTION_VALUE() {
        return (int)116L;
    }
    public static int ATK_ROLE_STATIC() {
        return (int)117L;
    }
    public static int ATK_ROLE_MATH_FRACTION() {
        return (int)118L;
    }
    public static int ATK_ROLE_MATH_ROOT() {
        return (int)119L;
    }
    public static int ATK_ROLE_SUBSCRIPT() {
        return (int)120L;
    }
    public static int ATK_ROLE_SUPERSCRIPT() {
        return (int)121L;
    }
    public static int ATK_ROLE_FOOTNOTE() {
        return (int)122L;
    }
    public static int ATK_ROLE_CONTENT_DELETION() {
        return (int)123L;
    }
    public static int ATK_ROLE_CONTENT_INSERTION() {
        return (int)124L;
    }
    public static int ATK_ROLE_MARK() {
        return (int)125L;
    }
    public static int ATK_ROLE_SUGGESTION() {
        return (int)126L;
    }
    public static int ATK_ROLE_LAST_DEFINED() {
        return (int)127L;
    }
    public static int ATK_LAYER_INVALID() {
        return (int)0L;
    }
    public static int ATK_LAYER_BACKGROUND() {
        return (int)1L;
    }
    public static int ATK_LAYER_CANVAS() {
        return (int)2L;
    }
    public static int ATK_LAYER_WIDGET() {
        return (int)3L;
    }
    public static int ATK_LAYER_MDI() {
        return (int)4L;
    }
    public static int ATK_LAYER_POPUP() {
        return (int)5L;
    }
    public static int ATK_LAYER_OVERLAY() {
        return (int)6L;
    }
    public static int ATK_LAYER_WINDOW() {
        return (int)7L;
    }
    public static MethodHandle atk_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.atk_object_get_type$MH,"atk_object_get_type");
    }
    public static long atk_object_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.atk_object_get_type$MH, "atk_object_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_implementor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.atk_implementor_get_type$MH,"atk_implementor_get_type");
    }
    public static long atk_implementor_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.atk_implementor_get_type$MH, "atk_implementor_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_implementor_ref_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.atk_implementor_ref_accessible$MH,"atk_implementor_ref_accessible");
    }
    public static MemoryAddress atk_implementor_ref_accessible ( Addressable implementor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.atk_implementor_ref_accessible$MH, "atk_implementor_ref_accessible");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(implementor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.atk_object_get_name$MH,"atk_object_get_name");
    }
    public static MemoryAddress atk_object_get_name ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.atk_object_get_name$MH, "atk_object_get_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.atk_object_get_description$MH,"atk_object_get_description");
    }
    public static MemoryAddress atk_object_get_description ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.atk_object_get_description$MH, "atk_object_get_description");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.atk_object_get_parent$MH,"atk_object_get_parent");
    }
    public static MemoryAddress atk_object_get_parent ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.atk_object_get_parent$MH, "atk_object_get_parent");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.atk_object_peek_parent$MH,"atk_object_peek_parent");
    }
    public static MemoryAddress atk_object_peek_parent ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.atk_object_peek_parent$MH, "atk_object_peek_parent");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_n_accessible_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.atk_object_get_n_accessible_children$MH,"atk_object_get_n_accessible_children");
    }
    public static int atk_object_get_n_accessible_children ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.atk_object_get_n_accessible_children$MH, "atk_object_get_n_accessible_children");
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_accessible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.atk_object_ref_accessible_child$MH,"atk_object_ref_accessible_child");
    }
    public static MemoryAddress atk_object_ref_accessible_child ( Addressable accessible,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.atk_object_ref_accessible_child$MH, "atk_object_ref_accessible_child");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_relation_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.atk_object_ref_relation_set$MH,"atk_object_ref_relation_set");
    }
    public static MemoryAddress atk_object_ref_relation_set ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.atk_object_ref_relation_set$MH, "atk_object_ref_relation_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.atk_object_get_role$MH,"atk_object_get_role");
    }
    public static int atk_object_get_role ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1342.atk_object_get_role$MH, "atk_object_get_role");
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_layer$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.atk_object_get_layer$MH,"atk_object_get_layer");
    }
    public static int atk_object_get_layer ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1342.atk_object_get_layer$MH, "atk_object_get_layer");
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_mdi_zorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.atk_object_get_mdi_zorder$MH,"atk_object_get_mdi_zorder");
    }
    public static int atk_object_get_mdi_zorder ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1342.atk_object_get_mdi_zorder$MH, "atk_object_get_mdi_zorder");
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.atk_object_get_attributes$MH,"atk_object_get_attributes");
    }
    public static MemoryAddress atk_object_get_attributes ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1342.atk_object_get_attributes$MH, "atk_object_get_attributes");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_state_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.atk_object_ref_state_set$MH,"atk_object_ref_state_set");
    }
    public static MemoryAddress atk_object_ref_state_set ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1342.atk_object_ref_state_set$MH, "atk_object_ref_state_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_index_in_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.atk_object_get_index_in_parent$MH,"atk_object_get_index_in_parent");
    }
    public static int atk_object_get_index_in_parent ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1342.atk_object_get_index_in_parent$MH, "atk_object_get_index_in_parent");
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.atk_object_set_name$MH,"atk_object_set_name");
    }
    public static void atk_object_set_name ( Addressable accessible,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.atk_object_set_name$MH, "atk_object_set_name");
        try {
            mh$.invokeExact(accessible, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.atk_object_set_description$MH,"atk_object_set_description");
    }
    public static void atk_object_set_description ( Addressable accessible,  Addressable description) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.atk_object_set_description$MH, "atk_object_set_description");
        try {
            mh$.invokeExact(accessible, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.atk_object_set_parent$MH,"atk_object_set_parent");
    }
    public static void atk_object_set_parent ( Addressable accessible,  Addressable parent) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.atk_object_set_parent$MH, "atk_object_set_parent");
        try {
            mh$.invokeExact(accessible, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.atk_object_set_role$MH,"atk_object_set_role");
    }
    public static void atk_object_set_role ( Addressable accessible,  int role) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.atk_object_set_role$MH, "atk_object_set_role");
        try {
            mh$.invokeExact(accessible, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_connect_property_change_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.atk_object_connect_property_change_handler$MH,"atk_object_connect_property_change_handler");
    }
    public static int atk_object_connect_property_change_handler ( Addressable accessible,  Addressable handler) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.atk_object_connect_property_change_handler$MH, "atk_object_connect_property_change_handler");
        try {
            return (int)mh$.invokeExact(accessible, handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_remove_property_change_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.atk_object_remove_property_change_handler$MH,"atk_object_remove_property_change_handler");
    }
    public static void atk_object_remove_property_change_handler ( Addressable accessible,  int handler_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.atk_object_remove_property_change_handler$MH, "atk_object_remove_property_change_handler");
        try {
            mh$.invokeExact(accessible, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_notify_state_change$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.atk_object_notify_state_change$MH,"atk_object_notify_state_change");
    }
    public static void atk_object_notify_state_change ( Addressable accessible,  long state,  int value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.atk_object_notify_state_change$MH, "atk_object_notify_state_change");
        try {
            mh$.invokeExact(accessible, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_initialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.atk_object_initialize$MH,"atk_object_initialize");
    }
    public static void atk_object_initialize ( Addressable accessible,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.atk_object_initialize$MH, "atk_object_initialize");
        try {
            mh$.invokeExact(accessible, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.atk_role_get_name$MH,"atk_role_get_name");
    }
    public static MemoryAddress atk_role_get_name ( int role) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.atk_role_get_name$MH, "atk_role_get_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.atk_role_for_name$MH,"atk_role_for_name");
    }
    public static int atk_role_for_name ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.atk_role_for_name$MH, "atk_role_for_name");
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_add_relationship$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.atk_object_add_relationship$MH,"atk_object_add_relationship");
    }
    public static int atk_object_add_relationship ( Addressable object,  int relationship,  Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.atk_object_add_relationship$MH, "atk_object_add_relationship");
        try {
            return (int)mh$.invokeExact(object, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_remove_relationship$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.atk_object_remove_relationship$MH,"atk_object_remove_relationship");
    }
    public static int atk_object_remove_relationship ( Addressable object,  int relationship,  Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.atk_object_remove_relationship$MH, "atk_object_remove_relationship");
        try {
            return (int)mh$.invokeExact(object, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_get_localized_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.atk_role_get_localized_name$MH,"atk_role_get_localized_name");
    }
    public static MemoryAddress atk_role_get_localized_name ( int role) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.atk_role_get_localized_name$MH, "atk_role_get_localized_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.atk_role_register$MH,"atk_role_register");
    }
    public static int atk_role_register ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.atk_role_register$MH, "atk_role_register");
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_object_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.atk_object_get_object_locale$MH,"atk_object_get_object_locale");
    }
    public static MemoryAddress atk_object_get_object_locale ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.atk_object_get_object_locale$MH, "atk_object_get_object_locale");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_accessible_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.atk_object_get_accessible_id$MH,"atk_object_get_accessible_id");
    }
    public static MemoryAddress atk_object_get_accessible_id ( Addressable accessible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.atk_object_get_accessible_id$MH, "atk_object_get_accessible_id");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_accessible_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.atk_object_set_accessible_id$MH,"atk_object_set_accessible_id");
    }
    public static void atk_object_set_accessible_id ( Addressable accessible,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.atk_object_set_accessible_id$MH, "atk_object_set_accessible_id");
        try {
            mh$.invokeExact(accessible, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.atk_action_get_type$MH,"atk_action_get_type");
    }
    public static long atk_action_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.atk_action_get_type$MH, "atk_action_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_do_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.atk_action_do_action$MH,"atk_action_do_action");
    }
    public static int atk_action_do_action ( Addressable action,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.atk_action_do_action$MH, "atk_action_do_action");
        try {
            return (int)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_n_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.atk_action_get_n_actions$MH,"atk_action_get_n_actions");
    }
    public static int atk_action_get_n_actions ( Addressable action) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.atk_action_get_n_actions$MH, "atk_action_get_n_actions");
        try {
            return (int)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.atk_action_get_description$MH,"atk_action_get_description");
    }
    public static MemoryAddress atk_action_get_description ( Addressable action,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.atk_action_get_description$MH, "atk_action_get_description");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.atk_action_get_name$MH,"atk_action_get_name");
    }
    public static MemoryAddress atk_action_get_name ( Addressable action,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.atk_action_get_name$MH, "atk_action_get_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_keybinding$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.atk_action_get_keybinding$MH,"atk_action_get_keybinding");
    }
    public static MemoryAddress atk_action_get_keybinding ( Addressable action,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.atk_action_get_keybinding$MH, "atk_action_get_keybinding");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.atk_action_set_description$MH,"atk_action_set_description");
    }
    public static int atk_action_set_description ( Addressable action,  int i,  Addressable desc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.atk_action_set_description$MH, "atk_action_set_description");
        try {
            return (int)mh$.invokeExact(action, i, desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_localized_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.atk_action_get_localized_name$MH,"atk_action_get_localized_name");
    }
    public static MemoryAddress atk_action_get_localized_name ( Addressable action,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1347.atk_action_get_localized_name$MH, "atk_action_get_localized_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_KEY_EVENT_PRESS() {
        return (int)0L;
    }
    public static int ATK_KEY_EVENT_RELEASE() {
        return (int)1L;
    }
    public static int ATK_KEY_EVENT_LAST_DEFINED() {
        return (int)2L;
    }
    public static MethodHandle atk_util_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.atk_util_get_type$MH,"atk_util_get_type");
    }
    public static long atk_util_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1348.atk_util_get_type$MH, "atk_util_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_XY_SCREEN() {
        return (int)0L;
    }
    public static int ATK_XY_WINDOW() {
        return (int)1L;
    }
    public static int ATK_XY_PARENT() {
        return (int)2L;
    }
    public static MethodHandle atk_add_focus_tracker$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.atk_add_focus_tracker$MH,"atk_add_focus_tracker");
    }
    public static int atk_add_focus_tracker ( Addressable focus_tracker) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1348.atk_add_focus_tracker$MH, "atk_add_focus_tracker");
        try {
            return (int)mh$.invokeExact(focus_tracker);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_focus_tracker$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.atk_remove_focus_tracker$MH,"atk_remove_focus_tracker");
    }
    public static void atk_remove_focus_tracker ( int tracker_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1348.atk_remove_focus_tracker$MH, "atk_remove_focus_tracker");
        try {
            mh$.invokeExact(tracker_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_focus_tracker_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.atk_focus_tracker_init$MH,"atk_focus_tracker_init");
    }
    public static void atk_focus_tracker_init ( Addressable init) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1348.atk_focus_tracker_init$MH, "atk_focus_tracker_init");
        try {
            mh$.invokeExact(init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_focus_tracker_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.atk_focus_tracker_notify$MH,"atk_focus_tracker_notify");
    }
    public static void atk_focus_tracker_notify ( Addressable object) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1348.atk_focus_tracker_notify$MH, "atk_focus_tracker_notify");
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_add_global_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.atk_add_global_event_listener$MH,"atk_add_global_event_listener");
    }
    public static int atk_add_global_event_listener ( Addressable listener,  Addressable event_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1349.atk_add_global_event_listener$MH, "atk_add_global_event_listener");
        try {
            return (int)mh$.invokeExact(listener, event_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_global_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.atk_remove_global_event_listener$MH,"atk_remove_global_event_listener");
    }
    public static void atk_remove_global_event_listener ( int listener_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1349.atk_remove_global_event_listener$MH, "atk_remove_global_event_listener");
        try {
            mh$.invokeExact(listener_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_add_key_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.atk_add_key_event_listener$MH,"atk_add_key_event_listener");
    }
    public static int atk_add_key_event_listener ( Addressable listener,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1349.atk_add_key_event_listener$MH, "atk_add_key_event_listener");
        try {
            return (int)mh$.invokeExact(listener, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_key_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.atk_remove_key_event_listener$MH,"atk_remove_key_event_listener");
    }
    public static void atk_remove_key_event_listener ( int listener_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1349.atk_remove_key_event_listener$MH, "atk_remove_key_event_listener");
        try {
            mh$.invokeExact(listener_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_root$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.atk_get_root$MH,"atk_get_root");
    }
    public static MemoryAddress atk_get_root () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1349.atk_get_root$MH, "atk_get_root");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_focus_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.atk_get_focus_object$MH,"atk_get_focus_object");
    }
    public static MemoryAddress atk_get_focus_object () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1349.atk_get_focus_object$MH, "atk_get_focus_object");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_toolkit_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.atk_get_toolkit_name$MH,"atk_get_toolkit_name");
    }
    public static MemoryAddress atk_get_toolkit_name () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1350.atk_get_toolkit_name$MH, "atk_get_toolkit_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_toolkit_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.atk_get_toolkit_version$MH,"atk_get_toolkit_version");
    }
    public static MemoryAddress atk_get_toolkit_version () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1350.atk_get_toolkit_version$MH, "atk_get_toolkit_version");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.atk_get_version$MH,"atk_get_version");
    }
    public static MemoryAddress atk_get_version () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1350.atk_get_version$MH, "atk_get_version");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_SCROLL_TOP_LEFT() {
        return (int)0L;
    }
    public static int ATK_SCROLL_BOTTOM_RIGHT() {
        return (int)1L;
    }
    public static int ATK_SCROLL_TOP_EDGE() {
        return (int)2L;
    }
    public static int ATK_SCROLL_BOTTOM_EDGE() {
        return (int)3L;
    }
    public static int ATK_SCROLL_LEFT_EDGE() {
        return (int)4L;
    }
    public static int ATK_SCROLL_RIGHT_EDGE() {
        return (int)5L;
    }
    public static int ATK_SCROLL_ANYWHERE() {
        return (int)6L;
    }
    public static MethodHandle atk_rectangle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.atk_rectangle_get_type$MH,"atk_rectangle_get_type");
    }
    public static long atk_rectangle_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1350.atk_rectangle_get_type$MH, "atk_rectangle_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.atk_component_get_type$MH,"atk_component_get_type");
    }
    public static long atk_component_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1351.atk_component_get_type$MH, "atk_component_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_add_focus_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.atk_component_add_focus_handler$MH,"atk_component_add_focus_handler");
    }
    public static int atk_component_add_focus_handler ( Addressable component,  Addressable handler) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1351.atk_component_add_focus_handler$MH, "atk_component_add_focus_handler");
        try {
            return (int)mh$.invokeExact(component, handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.atk_component_contains$MH,"atk_component_contains");
    }
    public static int atk_component_contains ( Addressable component,  int x,  int y,  int coord_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1351.atk_component_contains$MH, "atk_component_contains");
        try {
            return (int)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_ref_accessible_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.atk_component_ref_accessible_at_point$MH,"atk_component_ref_accessible_at_point");
    }
    public static MemoryAddress atk_component_ref_accessible_at_point ( Addressable component,  int x,  int y,  int coord_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1351.atk_component_ref_accessible_at_point$MH, "atk_component_ref_accessible_at_point");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.atk_component_get_extents$MH,"atk_component_get_extents");
    }
    public static void atk_component_get_extents ( Addressable component,  Addressable x,  Addressable y,  Addressable width,  Addressable height,  int coord_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1351.atk_component_get_extents$MH, "atk_component_get_extents");
        try {
            mh$.invokeExact(component, x, y, width, height, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.atk_component_get_position$MH,"atk_component_get_position");
    }
    public static void atk_component_get_position ( Addressable component,  Addressable x,  Addressable y,  int coord_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1351.atk_component_get_position$MH, "atk_component_get_position");
        try {
            mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.atk_component_get_size$MH,"atk_component_get_size");
    }
    public static void atk_component_get_size ( Addressable component,  Addressable width,  Addressable height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1352.atk_component_get_size$MH, "atk_component_get_size");
        try {
            mh$.invokeExact(component, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_layer$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.atk_component_get_layer$MH,"atk_component_get_layer");
    }
    public static int atk_component_get_layer ( Addressable component) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1352.atk_component_get_layer$MH, "atk_component_get_layer");
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_mdi_zorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.atk_component_get_mdi_zorder$MH,"atk_component_get_mdi_zorder");
    }
    public static int atk_component_get_mdi_zorder ( Addressable component) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1352.atk_component_get_mdi_zorder$MH, "atk_component_get_mdi_zorder");
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_grab_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.atk_component_grab_focus$MH,"atk_component_grab_focus");
    }
    public static int atk_component_grab_focus ( Addressable component) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1352.atk_component_grab_focus$MH, "atk_component_grab_focus");
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_remove_focus_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.atk_component_remove_focus_handler$MH,"atk_component_remove_focus_handler");
    }
    public static void atk_component_remove_focus_handler ( Addressable component,  int handler_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1352.atk_component_remove_focus_handler$MH, "atk_component_remove_focus_handler");
        try {
            mh$.invokeExact(component, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.atk_component_set_extents$MH,"atk_component_set_extents");
    }
    public static int atk_component_set_extents ( Addressable component,  int x,  int y,  int width,  int height,  int coord_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1352.atk_component_set_extents$MH, "atk_component_set_extents");
        try {
            return (int)mh$.invokeExact(component, x, y, width, height, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.atk_component_set_position$MH,"atk_component_set_position");
    }
    public static int atk_component_set_position ( Addressable component,  int x,  int y,  int coord_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1353.atk_component_set_position$MH, "atk_component_set_position");
        try {
            return (int)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.atk_component_set_size$MH,"atk_component_set_size");
    }
    public static int atk_component_set_size ( Addressable component,  int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1353.atk_component_set_size$MH, "atk_component_set_size");
        try {
            return (int)mh$.invokeExact(component, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.atk_component_get_alpha$MH,"atk_component_get_alpha");
    }
    public static double atk_component_get_alpha ( Addressable component) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1353.atk_component_get_alpha$MH, "atk_component_get_alpha");
        try {
            return (double)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_scroll_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.atk_component_scroll_to$MH,"atk_component_scroll_to");
    }
    public static int atk_component_scroll_to ( Addressable component,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1353.atk_component_scroll_to$MH, "atk_component_scroll_to");
        try {
            return (int)mh$.invokeExact(component, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_scroll_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.atk_component_scroll_to_point$MH,"atk_component_scroll_to_point");
    }
    public static int atk_component_scroll_to_point ( Addressable component,  int coords,  int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1353.atk_component_scroll_to_point$MH, "atk_component_scroll_to_point");
        try {
            return (int)mh$.invokeExact(component, coords, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.atk_document_get_type$MH,"atk_document_get_type");
    }
    public static long atk_document_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1353.atk_document_get_type$MH, "atk_document_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_document_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.atk_document_get_document_type$MH,"atk_document_get_document_type");
    }
    public static MemoryAddress atk_document_get_document_type ( Addressable document) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1354.atk_document_get_document_type$MH, "atk_document_get_document_type");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_document$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.atk_document_get_document$MH,"atk_document_get_document");
    }
    public static MemoryAddress atk_document_get_document ( Addressable document) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1354.atk_document_get_document$MH, "atk_document_get_document");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.atk_document_get_locale$MH,"atk_document_get_locale");
    }
    public static MemoryAddress atk_document_get_locale ( Addressable document) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1354.atk_document_get_locale$MH, "atk_document_get_locale");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.atk_document_get_attributes$MH,"atk_document_get_attributes");
    }
    public static MemoryAddress atk_document_get_attributes ( Addressable document) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1354.atk_document_get_attributes$MH, "atk_document_get_attributes");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.atk_document_get_attribute_value$MH,"atk_document_get_attribute_value");
    }
    public static MemoryAddress atk_document_get_attribute_value ( Addressable document,  Addressable attribute_name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1354.atk_document_get_attribute_value$MH, "atk_document_get_attribute_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(document, attribute_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_set_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.atk_document_set_attribute_value$MH,"atk_document_set_attribute_value");
    }
    public static int atk_document_set_attribute_value ( Addressable document,  Addressable attribute_name,  Addressable attribute_value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1354.atk_document_set_attribute_value$MH, "atk_document_set_attribute_value");
        try {
            return (int)mh$.invokeExact(document, attribute_name, attribute_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_current_page_number$MH() {
        return RuntimeHelper.requireNonNull(constants$1355.atk_document_get_current_page_number$MH,"atk_document_get_current_page_number");
    }
    public static int atk_document_get_current_page_number ( Addressable document) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1355.atk_document_get_current_page_number$MH, "atk_document_get_current_page_number");
        try {
            return (int)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_page_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1355.atk_document_get_page_count$MH,"atk_document_get_page_count");
    }
    public static int atk_document_get_page_count ( Addressable document) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1355.atk_document_get_page_count$MH, "atk_document_get_page_count");
        try {
            return (int)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_TEXT_ATTR_INVALID() {
        return (int)0L;
    }
    public static int ATK_TEXT_ATTR_LEFT_MARGIN() {
        return (int)1L;
    }
    public static int ATK_TEXT_ATTR_RIGHT_MARGIN() {
        return (int)2L;
    }
    public static int ATK_TEXT_ATTR_INDENT() {
        return (int)3L;
    }
    public static int ATK_TEXT_ATTR_INVISIBLE() {
        return (int)4L;
    }
    public static int ATK_TEXT_ATTR_EDITABLE() {
        return (int)5L;
    }
    public static int ATK_TEXT_ATTR_PIXELS_ABOVE_LINES() {
        return (int)6L;
    }
    public static int ATK_TEXT_ATTR_PIXELS_BELOW_LINES() {
        return (int)7L;
    }
    public static int ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP() {
        return (int)8L;
    }
    public static int ATK_TEXT_ATTR_BG_FULL_HEIGHT() {
        return (int)9L;
    }
    public static int ATK_TEXT_ATTR_RISE() {
        return (int)10L;
    }
    public static int ATK_TEXT_ATTR_UNDERLINE() {
        return (int)11L;
    }
    public static int ATK_TEXT_ATTR_STRIKETHROUGH() {
        return (int)12L;
    }
    public static int ATK_TEXT_ATTR_SIZE() {
        return (int)13L;
    }
    public static int ATK_TEXT_ATTR_SCALE() {
        return (int)14L;
    }
    public static int ATK_TEXT_ATTR_WEIGHT() {
        return (int)15L;
    }
    public static int ATK_TEXT_ATTR_LANGUAGE() {
        return (int)16L;
    }
    public static int ATK_TEXT_ATTR_FAMILY_NAME() {
        return (int)17L;
    }
    public static int ATK_TEXT_ATTR_BG_COLOR() {
        return (int)18L;
    }
    public static int ATK_TEXT_ATTR_FG_COLOR() {
        return (int)19L;
    }
    public static int ATK_TEXT_ATTR_BG_STIPPLE() {
        return (int)20L;
    }
    public static int ATK_TEXT_ATTR_FG_STIPPLE() {
        return (int)21L;
    }
    public static int ATK_TEXT_ATTR_WRAP_MODE() {
        return (int)22L;
    }
    public static int ATK_TEXT_ATTR_DIRECTION() {
        return (int)23L;
    }
    public static int ATK_TEXT_ATTR_JUSTIFICATION() {
        return (int)24L;
    }
    public static int ATK_TEXT_ATTR_STRETCH() {
        return (int)25L;
    }
    public static int ATK_TEXT_ATTR_VARIANT() {
        return (int)26L;
    }
    public static int ATK_TEXT_ATTR_STYLE() {
        return (int)27L;
    }
    public static int ATK_TEXT_ATTR_TEXT_POSITION() {
        return (int)28L;
    }
    public static int ATK_TEXT_ATTR_LAST_DEFINED() {
        return (int)29L;
    }
    public static MethodHandle atk_text_attribute_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1355.atk_text_attribute_register$MH,"atk_text_attribute_register");
    }
    public static int atk_text_attribute_register ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1355.atk_text_attribute_register$MH, "atk_text_attribute_register");
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_TEXT_BOUNDARY_CHAR() {
        return (int)0L;
    }
    public static int ATK_TEXT_BOUNDARY_WORD_START() {
        return (int)1L;
    }
    public static int ATK_TEXT_BOUNDARY_WORD_END() {
        return (int)2L;
    }
    public static int ATK_TEXT_BOUNDARY_SENTENCE_START() {
        return (int)3L;
    }
    public static int ATK_TEXT_BOUNDARY_SENTENCE_END() {
        return (int)4L;
    }
    public static int ATK_TEXT_BOUNDARY_LINE_START() {
        return (int)5L;
    }
    public static int ATK_TEXT_BOUNDARY_LINE_END() {
        return (int)6L;
    }
    public static int ATK_TEXT_GRANULARITY_CHAR() {
        return (int)0L;
    }
    public static int ATK_TEXT_GRANULARITY_WORD() {
        return (int)1L;
    }
    public static int ATK_TEXT_GRANULARITY_SENTENCE() {
        return (int)2L;
    }
    public static int ATK_TEXT_GRANULARITY_LINE() {
        return (int)3L;
    }
    public static int ATK_TEXT_GRANULARITY_PARAGRAPH() {
        return (int)4L;
    }
    public static MethodHandle atk_text_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1355.atk_text_range_get_type$MH,"atk_text_range_get_type");
    }
    public static long atk_text_range_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1355.atk_text_range_get_type$MH, "atk_text_range_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_TEXT_CLIP_NONE() {
        return (int)0L;
    }
    public static int ATK_TEXT_CLIP_MIN() {
        return (int)1L;
    }
    public static int ATK_TEXT_CLIP_MAX() {
        return (int)2L;
    }
    public static int ATK_TEXT_CLIP_BOTH() {
        return (int)3L;
    }
    public static MethodHandle atk_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1355.atk_text_get_type$MH,"atk_text_get_type");
    }
    public static long atk_text_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1355.atk_text_get_type$MH, "atk_text_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1355.atk_text_get_text$MH,"atk_text_get_text");
    }
    public static MemoryAddress atk_text_get_text ( Addressable text,  int start_offset,  int end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1355.atk_text_get_text$MH, "atk_text_get_text");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1356.atk_text_get_character_at_offset$MH,"atk_text_get_character_at_offset");
    }
    public static int atk_text_get_character_at_offset ( Addressable text,  int offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1356.atk_text_get_character_at_offset$MH, "atk_text_get_character_at_offset");
        try {
            return (int)mh$.invokeExact(text, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_after_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1356.atk_text_get_text_after_offset$MH,"atk_text_get_text_after_offset");
    }
    public static MemoryAddress atk_text_get_text_after_offset ( Addressable text,  int offset,  int boundary_type,  Addressable start_offset,  Addressable end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1356.atk_text_get_text_after_offset$MH, "atk_text_get_text_after_offset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1356.atk_text_get_text_at_offset$MH,"atk_text_get_text_at_offset");
    }
    public static MemoryAddress atk_text_get_text_at_offset ( Addressable text,  int offset,  int boundary_type,  Addressable start_offset,  Addressable end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1356.atk_text_get_text_at_offset$MH, "atk_text_get_text_at_offset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_before_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1356.atk_text_get_text_before_offset$MH,"atk_text_get_text_before_offset");
    }
    public static MemoryAddress atk_text_get_text_before_offset ( Addressable text,  int offset,  int boundary_type,  Addressable start_offset,  Addressable end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1356.atk_text_get_text_before_offset$MH, "atk_text_get_text_before_offset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_string_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1356.atk_text_get_string_at_offset$MH,"atk_text_get_string_at_offset");
    }
    public static MemoryAddress atk_text_get_string_at_offset ( Addressable text,  int offset,  int granularity,  Addressable start_offset,  Addressable end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1356.atk_text_get_string_at_offset$MH, "atk_text_get_string_at_offset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text, offset, granularity, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_caret_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1356.atk_text_get_caret_offset$MH,"atk_text_get_caret_offset");
    }
    public static int atk_text_get_caret_offset ( Addressable text) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1356.atk_text_get_caret_offset$MH, "atk_text_get_caret_offset");
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.atk_text_get_character_extents$MH,"atk_text_get_character_extents");
    }
    public static void atk_text_get_character_extents ( Addressable text,  int offset,  Addressable x,  Addressable y,  Addressable width,  Addressable height,  int coords) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1357.atk_text_get_character_extents$MH, "atk_text_get_character_extents");
        try {
            mh$.invokeExact(text, offset, x, y, width, height, coords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_run_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.atk_text_get_run_attributes$MH,"atk_text_get_run_attributes");
    }
    public static MemoryAddress atk_text_get_run_attributes ( Addressable text,  int offset,  Addressable start_offset,  Addressable end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1357.atk_text_get_run_attributes$MH, "atk_text_get_run_attributes");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text, offset, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_default_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.atk_text_get_default_attributes$MH,"atk_text_get_default_attributes");
    }
    public static MemoryAddress atk_text_get_default_attributes ( Addressable text) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1357.atk_text_get_default_attributes$MH, "atk_text_get_default_attributes");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.atk_text_get_character_count$MH,"atk_text_get_character_count");
    }
    public static int atk_text_get_character_count ( Addressable text) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1357.atk_text_get_character_count$MH, "atk_text_get_character_count");
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_offset_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.atk_text_get_offset_at_point$MH,"atk_text_get_offset_at_point");
    }
    public static int atk_text_get_offset_at_point ( Addressable text,  int x,  int y,  int coords) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1357.atk_text_get_offset_at_point$MH, "atk_text_get_offset_at_point");
        try {
            return (int)mh$.invokeExact(text, x, y, coords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_n_selections$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.atk_text_get_n_selections$MH,"atk_text_get_n_selections");
    }
    public static int atk_text_get_n_selections ( Addressable text) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1357.atk_text_get_n_selections$MH, "atk_text_get_n_selections");
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.atk_text_get_selection$MH,"atk_text_get_selection");
    }
    public static MemoryAddress atk_text_get_selection ( Addressable text,  int selection_num,  Addressable start_offset,  Addressable end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1358.atk_text_get_selection$MH, "atk_text_get_selection");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text, selection_num, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_add_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.atk_text_add_selection$MH,"atk_text_add_selection");
    }
    public static int atk_text_add_selection ( Addressable text,  int start_offset,  int end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1358.atk_text_add_selection$MH, "atk_text_add_selection");
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_remove_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.atk_text_remove_selection$MH,"atk_text_remove_selection");
    }
    public static int atk_text_remove_selection ( Addressable text,  int selection_num) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1358.atk_text_remove_selection$MH, "atk_text_remove_selection");
        try {
            return (int)mh$.invokeExact(text, selection_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_set_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.atk_text_set_selection$MH,"atk_text_set_selection");
    }
    public static int atk_text_set_selection ( Addressable text,  int selection_num,  int start_offset,  int end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1358.atk_text_set_selection$MH, "atk_text_set_selection");
        try {
            return (int)mh$.invokeExact(text, selection_num, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_set_caret_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.atk_text_set_caret_offset$MH,"atk_text_set_caret_offset");
    }
    public static int atk_text_set_caret_offset ( Addressable text,  int offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1358.atk_text_set_caret_offset$MH, "atk_text_set_caret_offset");
        try {
            return (int)mh$.invokeExact(text, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_range_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.atk_text_get_range_extents$MH,"atk_text_get_range_extents");
    }
    public static void atk_text_get_range_extents ( Addressable text,  int start_offset,  int end_offset,  int coord_type,  Addressable rect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1358.atk_text_get_range_extents$MH, "atk_text_get_range_extents");
        try {
            mh$.invokeExact(text, start_offset, end_offset, coord_type, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_bounded_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.atk_text_get_bounded_ranges$MH,"atk_text_get_bounded_ranges");
    }
    public static MemoryAddress atk_text_get_bounded_ranges ( Addressable text,  Addressable rect,  int coord_type,  int x_clip_type,  int y_clip_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1359.atk_text_get_bounded_ranges$MH, "atk_text_get_bounded_ranges");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(text, rect, coord_type, x_clip_type, y_clip_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_free_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.atk_text_free_ranges$MH,"atk_text_free_ranges");
    }
    public static void atk_text_free_ranges ( Addressable ranges) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1359.atk_text_free_ranges$MH, "atk_text_free_ranges");
        try {
            mh$.invokeExact(ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_attribute_set_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.atk_attribute_set_free$MH,"atk_attribute_set_free");
    }
    public static void atk_attribute_set_free ( Addressable attrib_set) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1359.atk_attribute_set_free$MH, "atk_attribute_set_free");
        try {
            mh$.invokeExact(attrib_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.atk_text_attribute_get_name$MH,"atk_text_attribute_get_name");
    }
    public static MemoryAddress atk_text_attribute_get_name ( int attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1359.atk_text_attribute_get_name$MH, "atk_text_attribute_get_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.atk_text_attribute_for_name$MH,"atk_text_attribute_for_name");
    }
    public static int atk_text_attribute_for_name ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1359.atk_text_attribute_for_name$MH, "atk_text_attribute_for_name");
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.atk_text_attribute_get_value$MH,"atk_text_attribute_get_value");
    }
    public static MemoryAddress atk_text_attribute_get_value ( int attr,  int index_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1359.atk_text_attribute_get_value$MH, "atk_text_attribute_get_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(attr, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_scroll_substring_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.atk_text_scroll_substring_to$MH,"atk_text_scroll_substring_to");
    }
    public static int atk_text_scroll_substring_to ( Addressable text,  int start_offset,  int end_offset,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1360.atk_text_scroll_substring_to$MH, "atk_text_scroll_substring_to");
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_scroll_substring_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.atk_text_scroll_substring_to_point$MH,"atk_text_scroll_substring_to_point");
    }
    public static int atk_text_scroll_substring_to_point ( Addressable text,  int start_offset,  int end_offset,  int coords,  int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1360.atk_text_scroll_substring_to_point$MH, "atk_text_scroll_substring_to_point");
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset, coords, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.atk_editable_text_get_type$MH,"atk_editable_text_get_type");
    }
    public static long atk_editable_text_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1360.atk_editable_text_get_type$MH, "atk_editable_text_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_set_run_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.atk_editable_text_set_run_attributes$MH,"atk_editable_text_set_run_attributes");
    }
    public static int atk_editable_text_set_run_attributes ( Addressable text,  Addressable attrib_set,  int start_offset,  int end_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1360.atk_editable_text_set_run_attributes$MH, "atk_editable_text_set_run_attributes");
        try {
            return (int)mh$.invokeExact(text, attrib_set, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_set_text_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.atk_editable_text_set_text_contents$MH,"atk_editable_text_set_text_contents");
    }
    public static void atk_editable_text_set_text_contents ( Addressable text,  Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1360.atk_editable_text_set_text_contents$MH, "atk_editable_text_set_text_contents");
        try {
            mh$.invokeExact(text, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.atk_editable_text_insert_text$MH,"atk_editable_text_insert_text");
    }
    public static void atk_editable_text_insert_text ( Addressable text,  Addressable string,  int length,  Addressable position) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1360.atk_editable_text_insert_text$MH, "atk_editable_text_insert_text");
        try {
            mh$.invokeExact(text, string, length, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_copy_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.atk_editable_text_copy_text$MH,"atk_editable_text_copy_text");
    }
    public static void atk_editable_text_copy_text ( Addressable text,  int start_pos,  int end_pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1361.atk_editable_text_copy_text$MH, "atk_editable_text_copy_text");
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_cut_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.atk_editable_text_cut_text$MH,"atk_editable_text_cut_text");
    }
    public static void atk_editable_text_cut_text ( Addressable text,  int start_pos,  int end_pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1361.atk_editable_text_cut_text$MH, "atk_editable_text_cut_text");
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_delete_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.atk_editable_text_delete_text$MH,"atk_editable_text_delete_text");
    }
    public static void atk_editable_text_delete_text ( Addressable text,  int start_pos,  int end_pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1361.atk_editable_text_delete_text$MH, "atk_editable_text_delete_text");
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_paste_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.atk_editable_text_paste_text$MH,"atk_editable_text_paste_text");
    }
    public static void atk_editable_text_paste_text ( Addressable text,  int position) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1361.atk_editable_text_paste_text$MH, "atk_editable_text_paste_text");
        try {
            mh$.invokeExact(text, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_scroll_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.atk_scroll_type_get_type$MH,"atk_scroll_type_get_type");
    }
    public static long atk_scroll_type_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1361.atk_scroll_type_get_type$MH, "atk_scroll_type_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_state_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.atk_hyperlink_state_flags_get_type$MH,"atk_hyperlink_state_flags_get_type");
    }
    public static long atk_hyperlink_state_flags_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1361.atk_hyperlink_state_flags_get_type$MH, "atk_hyperlink_state_flags_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.atk_role_get_type$MH,"atk_role_get_type");
    }
    public static long atk_role_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1362.atk_role_get_type$MH, "atk_role_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_layer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.atk_layer_get_type$MH,"atk_layer_get_type");
    }
    public static long atk_layer_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1362.atk_layer_get_type$MH, "atk_layer_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.atk_relation_type_get_type$MH,"atk_relation_type_get_type");
    }
    public static long atk_relation_type_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1362.atk_relation_type_get_type$MH, "atk_relation_type_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.atk_state_type_get_type$MH,"atk_state_type_get_type");
    }
    public static long atk_state_type_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1362.atk_state_type_get_type$MH, "atk_state_type_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.atk_text_attribute_get_type$MH,"atk_text_attribute_get_type");
    }
    public static long atk_text_attribute_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1362.atk_text_attribute_get_type$MH, "atk_text_attribute_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_boundary_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.atk_text_boundary_get_type$MH,"atk_text_boundary_get_type");
    }
    public static long atk_text_boundary_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1362.atk_text_boundary_get_type$MH, "atk_text_boundary_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_granularity_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.atk_text_granularity_get_type$MH,"atk_text_granularity_get_type");
    }
    public static long atk_text_granularity_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1363.atk_text_granularity_get_type$MH, "atk_text_granularity_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_clip_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.atk_text_clip_type_get_type$MH,"atk_text_clip_type_get_type");
    }
    public static long atk_text_clip_type_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1363.atk_text_clip_type_get_type$MH, "atk_text_clip_type_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_key_event_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.atk_key_event_type_get_type$MH,"atk_key_event_type_get_type");
    }
    public static long atk_key_event_type_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1363.atk_key_event_type_get_type$MH, "atk_key_event_type_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_coord_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.atk_coord_type_get_type$MH,"atk_coord_type_get_type");
    }
    public static long atk_coord_type_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1363.atk_coord_type_get_type$MH, "atk_coord_type_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.atk_value_type_get_type$MH,"atk_value_type_get_type");
    }
    public static long atk_value_type_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1363.atk_value_type_get_type$MH, "atk_value_type_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.atk_gobject_accessible_get_type$MH,"atk_gobject_accessible_get_type");
    }
    public static long atk_gobject_accessible_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1363.atk_gobject_accessible_get_type$MH, "atk_gobject_accessible_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_for_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1364.atk_gobject_accessible_for_object$MH,"atk_gobject_accessible_for_object");
    }
    public static MemoryAddress atk_gobject_accessible_for_object ( Addressable obj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1364.atk_gobject_accessible_for_object$MH, "atk_gobject_accessible_for_object");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1364.atk_gobject_accessible_get_object$MH,"atk_gobject_accessible_get_object");
    }
    public static MemoryAddress atk_gobject_accessible_get_object ( Addressable obj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1364.atk_gobject_accessible_get_object$MH, "atk_gobject_accessible_get_object");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATK_HYPERLINK_IS_INLINE() {
        return (int)1L;
    }
    public static MethodHandle atk_hyperlink_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1364.atk_hyperlink_get_type$MH,"atk_hyperlink_get_type");
    }
    public static long atk_hyperlink_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1364.atk_hyperlink_get_type$MH, "atk_hyperlink_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1364.atk_hyperlink_get_uri$MH,"atk_hyperlink_get_uri");
    }
    public static MemoryAddress atk_hyperlink_get_uri ( Addressable link_,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1364.atk_hyperlink_get_uri$MH, "atk_hyperlink_get_uri");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(link_, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1364.atk_hyperlink_get_object$MH,"atk_hyperlink_get_object");
    }
    public static MemoryAddress atk_hyperlink_get_object ( Addressable link_,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1364.atk_hyperlink_get_object$MH, "atk_hyperlink_get_object");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(link_, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_end_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1364.atk_hyperlink_get_end_index$MH,"atk_hyperlink_get_end_index");
    }
    public static int atk_hyperlink_get_end_index ( Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1364.atk_hyperlink_get_end_index$MH, "atk_hyperlink_get_end_index");
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_start_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_get_start_index$MH,"atk_hyperlink_get_start_index");
    }
    public static int atk_hyperlink_get_start_index ( Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_get_start_index$MH, "atk_hyperlink_get_start_index");
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_is_valid$MH,"atk_hyperlink_is_valid");
    }
    public static int atk_hyperlink_is_valid ( Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_is_valid$MH, "atk_hyperlink_is_valid");
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_inline$MH() {
        return RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_is_inline$MH,"atk_hyperlink_is_inline");
    }
    public static int atk_hyperlink_is_inline ( Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_is_inline$MH, "atk_hyperlink_is_inline");
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_n_anchors$MH() {
        return RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_get_n_anchors$MH,"atk_hyperlink_get_n_anchors");
    }
    public static int atk_hyperlink_get_n_anchors ( Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_get_n_anchors$MH, "atk_hyperlink_get_n_anchors");
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_selected_link$MH() {
        return RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_is_selected_link$MH,"atk_hyperlink_is_selected_link");
    }
    public static int atk_hyperlink_is_selected_link ( Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_is_selected_link$MH, "atk_hyperlink_is_selected_link");
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_impl_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_impl_get_type$MH,"atk_hyperlink_impl_get_type");
    }
    public static long atk_hyperlink_impl_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1365.atk_hyperlink_impl_get_type$MH, "atk_hyperlink_impl_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_impl_get_hyperlink$MH() {
        return RuntimeHelper.requireNonNull(constants$1366.atk_hyperlink_impl_get_hyperlink$MH,"atk_hyperlink_impl_get_hyperlink");
    }
    public static MemoryAddress atk_hyperlink_impl_get_hyperlink ( Addressable impl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1366.atk_hyperlink_impl_get_hyperlink$MH, "atk_hyperlink_impl_get_hyperlink");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(impl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1366.atk_hypertext_get_type$MH,"atk_hypertext_get_type");
    }
    public static long atk_hypertext_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1366.atk_hypertext_get_type$MH, "atk_hypertext_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_link$MH() {
        return RuntimeHelper.requireNonNull(constants$1366.atk_hypertext_get_link$MH,"atk_hypertext_get_link");
    }
    public static MemoryAddress atk_hypertext_get_link ( Addressable hypertext,  int link_index) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1366.atk_hypertext_get_link$MH, "atk_hypertext_get_link");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hypertext, link_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_n_links$MH() {
        return RuntimeHelper.requireNonNull(constants$1366.atk_hypertext_get_n_links$MH,"atk_hypertext_get_n_links");
    }
    public static int atk_hypertext_get_n_links ( Addressable hypertext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1366.atk_hypertext_get_n_links$MH, "atk_hypertext_get_n_links");
        try {
            return (int)mh$.invokeExact(hypertext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_link_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1366.atk_hypertext_get_link_index$MH,"atk_hypertext_get_link_index");
    }
    public static int atk_hypertext_get_link_index ( Addressable hypertext,  int char_index) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1366.atk_hypertext_get_link_index$MH, "atk_hypertext_get_link_index");
        try {
            return (int)mh$.invokeExact(hypertext, char_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1366.atk_image_get_type$MH,"atk_image_get_type");
    }
    public static long atk_image_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1366.atk_image_get_type$MH, "atk_image_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1367.atk_image_get_image_description$MH,"atk_image_get_image_description");
    }
    public static MemoryAddress atk_image_get_image_description ( Addressable image) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1367.atk_image_get_image_description$MH, "atk_image_get_image_description");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1367.atk_image_get_image_size$MH,"atk_image_get_image_size");
    }
    public static void atk_image_get_image_size ( Addressable image,  Addressable width,  Addressable height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1367.atk_image_get_image_size$MH, "atk_image_get_image_size");
        try {
            mh$.invokeExact(image, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_set_image_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1367.atk_image_set_image_description$MH,"atk_image_set_image_description");
    }
    public static int atk_image_set_image_description ( Addressable image,  Addressable description) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1367.atk_image_set_image_description$MH, "atk_image_set_image_description");
        try {
            return (int)mh$.invokeExact(image, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1367.atk_image_get_image_position$MH,"atk_image_get_image_position");
    }
    public static void atk_image_get_image_position ( Addressable image,  Addressable x,  Addressable y,  int coord_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1367.atk_image_get_image_position$MH, "atk_image_get_image_position");
        try {
            mh$.invokeExact(image, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$1367.atk_image_get_image_locale$MH,"atk_image_get_image_locale");
    }
    public static MemoryAddress atk_image_get_image_locale ( Addressable image) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1367.atk_image_get_image_locale$MH, "atk_image_get_image_locale");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1367.atk_no_op_object_get_type$MH,"atk_no_op_object_get_type");
    }
    public static long atk_no_op_object_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1367.atk_no_op_object_get_type$MH, "atk_no_op_object_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1368.atk_no_op_object_new$MH,"atk_no_op_object_new");
    }
    public static MemoryAddress atk_no_op_object_new ( Addressable obj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1368.atk_no_op_object_new$MH, "atk_no_op_object_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1368.atk_object_factory_get_type$MH,"atk_object_factory_get_type");
    }
    public static long atk_object_factory_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1368.atk_object_factory_get_type$MH, "atk_object_factory_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_create_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$1368.atk_object_factory_create_accessible$MH,"atk_object_factory_create_accessible");
    }
    public static MemoryAddress atk_object_factory_create_accessible ( Addressable factory,  Addressable obj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1368.atk_object_factory_create_accessible$MH, "atk_object_factory_create_accessible");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(factory, obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$1368.atk_object_factory_invalidate$MH,"atk_object_factory_invalidate");
    }
    public static void atk_object_factory_invalidate ( Addressable factory) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1368.atk_object_factory_invalidate$MH, "atk_object_factory_invalidate");
        try {
            mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_get_accessible_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1368.atk_object_factory_get_accessible_type$MH,"atk_object_factory_get_accessible_type");
    }
    public static long atk_object_factory_get_accessible_type ( Addressable factory) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1368.atk_object_factory_get_accessible_type$MH, "atk_object_factory_get_accessible_type");
        try {
            return (long)mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1368.atk_no_op_object_factory_get_type$MH,"atk_no_op_object_factory_get_type");
    }
    public static long atk_no_op_object_factory_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1368.atk_no_op_object_factory_get_type$MH, "atk_no_op_object_factory_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_factory_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1369.atk_no_op_object_factory_new$MH,"atk_no_op_object_factory_new");
    }
    public static MemoryAddress atk_no_op_object_factory_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1369.atk_no_op_object_factory_new$MH, "atk_no_op_object_factory_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1369.atk_plug_get_type$MH,"atk_plug_get_type");
    }
    public static long atk_plug_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1369.atk_plug_get_type$MH, "atk_plug_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1369.atk_plug_new$MH,"atk_plug_new");
    }
    public static MemoryAddress atk_plug_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1369.atk_plug_new$MH, "atk_plug_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1369.atk_plug_set_child$MH,"atk_plug_set_child");
    }
    public static void atk_plug_set_child ( Addressable plug,  Addressable child) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1369.atk_plug_set_child$MH, "atk_plug_set_child");
        try {
            mh$.invokeExact(plug, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1369.atk_plug_get_id$MH,"atk_plug_get_id");
    }
    public static MemoryAddress atk_plug_get_id ( Addressable plug) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1369.atk_plug_get_id$MH, "atk_plug_get_id");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(plug);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1369.atk_range_get_type$MH,"atk_range_get_type");
    }
    public static long atk_range_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1369.atk_range_get_type$MH, "atk_range_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.atk_range_copy$MH,"atk_range_copy");
    }
    public static MemoryAddress atk_range_copy ( Addressable src) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1370.atk_range_copy$MH, "atk_range_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.atk_range_free$MH,"atk_range_free");
    }
    public static void atk_range_free ( Addressable range) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1370.atk_range_free$MH, "atk_range_free");
        try {
            mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_lower_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.atk_range_get_lower_limit$MH,"atk_range_get_lower_limit");
    }
    public static double atk_range_get_lower_limit ( Addressable range) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1370.atk_range_get_lower_limit$MH, "atk_range_get_lower_limit");
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_upper_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.atk_range_get_upper_limit$MH,"atk_range_get_upper_limit");
    }
    public static double atk_range_get_upper_limit ( Addressable range) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1370.atk_range_get_upper_limit$MH, "atk_range_get_upper_limit");
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.atk_range_get_description$MH,"atk_range_get_description");
    }
    public static MemoryAddress atk_range_get_description ( Addressable range) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1370.atk_range_get_description$MH, "atk_range_get_description");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.atk_range_new$MH,"atk_range_new");
    }
    public static MemoryAddress atk_range_new ( double lower_limit,  double upper_limit,  Addressable description) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1370.atk_range_new$MH, "atk_range_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lower_limit, upper_limit, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.atk_registry_get_type$MH,"atk_registry_get_type");
    }
    public static long atk_registry_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1371.atk_registry_get_type$MH, "atk_registry_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_set_factory_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.atk_registry_set_factory_type$MH,"atk_registry_set_factory_type");
    }
    public static void atk_registry_set_factory_type ( Addressable registry,  long type,  long factory_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1371.atk_registry_set_factory_type$MH, "atk_registry_set_factory_type");
        try {
            mh$.invokeExact(registry, type, factory_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_factory_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.atk_registry_get_factory_type$MH,"atk_registry_get_factory_type");
    }
    public static long atk_registry_get_factory_type ( Addressable registry,  long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1371.atk_registry_get_factory_type$MH, "atk_registry_get_factory_type");
        try {
            return (long)mh$.invokeExact(registry, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.atk_registry_get_factory$MH,"atk_registry_get_factory");
    }
    public static MemoryAddress atk_registry_get_factory ( Addressable registry,  long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1371.atk_registry_get_factory$MH, "atk_registry_get_factory");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(registry, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_default_registry$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.atk_get_default_registry$MH,"atk_get_default_registry");
    }
    public static MemoryAddress atk_get_default_registry () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1371.atk_get_default_registry$MH, "atk_get_default_registry");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.atk_relation_get_type$MH,"atk_relation_get_type");
    }
    public static long atk_relation_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1371.atk_relation_get_type$MH, "atk_relation_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.atk_relation_type_register$MH,"atk_relation_type_register");
    }
    public static int atk_relation_type_register ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1372.atk_relation_type_register$MH, "atk_relation_type_register");
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.atk_relation_type_get_name$MH,"atk_relation_type_get_name");
    }
    public static MemoryAddress atk_relation_type_get_name ( int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1372.atk_relation_type_get_name$MH, "atk_relation_type_get_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.atk_relation_type_for_name$MH,"atk_relation_type_for_name");
    }
    public static int atk_relation_type_for_name ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1372.atk_relation_type_for_name$MH, "atk_relation_type_for_name");
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.atk_relation_new$MH,"atk_relation_new");
    }
    public static MemoryAddress atk_relation_new ( Addressable targets,  int n_targets,  int relationship) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1372.atk_relation_new$MH, "atk_relation_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(targets, n_targets, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_relation_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.atk_relation_get_relation_type$MH,"atk_relation_get_relation_type");
    }
    public static int atk_relation_get_relation_type ( Addressable relation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1372.atk_relation_get_relation_type$MH, "atk_relation_get_relation_type");
        try {
            return (int)mh$.invokeExact(relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.atk_relation_get_target$MH,"atk_relation_get_target");
    }
    public static MemoryAddress atk_relation_get_target ( Addressable relation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1372.atk_relation_get_target$MH, "atk_relation_get_target");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_add_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.atk_relation_add_target$MH,"atk_relation_add_target");
    }
    public static void atk_relation_add_target ( Addressable relation,  Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1373.atk_relation_add_target$MH, "atk_relation_add_target");
        try {
            mh$.invokeExact(relation, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_remove_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.atk_relation_remove_target$MH,"atk_relation_remove_target");
    }
    public static int atk_relation_remove_target ( Addressable relation,  Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1373.atk_relation_remove_target$MH, "atk_relation_remove_target");
        try {
            return (int)mh$.invokeExact(relation, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.atk_relation_set_get_type$MH,"atk_relation_set_get_type");
    }
    public static long atk_relation_set_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1373.atk_relation_set_get_type$MH, "atk_relation_set_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.atk_relation_set_new$MH,"atk_relation_set_new");
    }
    public static MemoryAddress atk_relation_set_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1373.atk_relation_set_new$MH, "atk_relation_set_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.atk_relation_set_contains$MH,"atk_relation_set_contains");
    }
    public static int atk_relation_set_contains ( Addressable set,  int relationship) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1373.atk_relation_set_contains$MH, "atk_relation_set_contains");
        try {
            return (int)mh$.invokeExact(set, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_contains_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.atk_relation_set_contains_target$MH,"atk_relation_set_contains_target");
    }
    public static int atk_relation_set_contains_target ( Addressable set,  int relationship,  Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1373.atk_relation_set_contains_target$MH, "atk_relation_set_contains_target");
        try {
            return (int)mh$.invokeExact(set, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_remove$MH,"atk_relation_set_remove");
    }
    public static void atk_relation_set_remove ( Addressable set,  Addressable relation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_remove$MH, "atk_relation_set_remove");
        try {
            mh$.invokeExact(set, relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_add$MH,"atk_relation_set_add");
    }
    public static void atk_relation_set_add ( Addressable set,  Addressable relation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_add$MH, "atk_relation_set_add");
        try {
            mh$.invokeExact(set, relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_n_relations$MH() {
        return RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_get_n_relations$MH,"atk_relation_set_get_n_relations");
    }
    public static int atk_relation_set_get_n_relations ( Addressable set) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_get_n_relations$MH, "atk_relation_set_get_n_relations");
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_relation$MH() {
        return RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_get_relation$MH,"atk_relation_set_get_relation");
    }
    public static MemoryAddress atk_relation_set_get_relation ( Addressable set,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_get_relation$MH, "atk_relation_set_get_relation");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(set, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_relation_by_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_get_relation_by_type$MH,"atk_relation_set_get_relation_by_type");
    }
    public static MemoryAddress atk_relation_set_get_relation_by_type ( Addressable set,  int relationship) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_get_relation_by_type$MH, "atk_relation_set_get_relation_by_type");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(set, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_add_relation_by_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_add_relation_by_type$MH,"atk_relation_set_add_relation_by_type");
    }
    public static void atk_relation_set_add_relation_by_type ( Addressable set,  int relationship,  Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1374.atk_relation_set_add_relation_by_type$MH, "atk_relation_set_add_relation_by_type");
        try {
            mh$.invokeExact(set, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1375.atk_selection_get_type$MH,"atk_selection_get_type");
    }
    public static long atk_selection_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1375.atk_selection_get_type$MH, "atk_selection_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_add_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1375.atk_selection_add_selection$MH,"atk_selection_add_selection");
    }
    public static int atk_selection_add_selection ( Addressable selection,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1375.atk_selection_add_selection$MH, "atk_selection_add_selection");
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_clear_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1375.atk_selection_clear_selection$MH,"atk_selection_clear_selection");
    }
    public static int atk_selection_clear_selection ( Addressable selection) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1375.atk_selection_clear_selection$MH, "atk_selection_clear_selection");
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_ref_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1375.atk_selection_ref_selection$MH,"atk_selection_ref_selection");
    }
    public static MemoryAddress atk_selection_ref_selection ( Addressable selection,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1375.atk_selection_ref_selection$MH, "atk_selection_ref_selection");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_get_selection_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1375.atk_selection_get_selection_count$MH,"atk_selection_get_selection_count");
    }
    public static int atk_selection_get_selection_count ( Addressable selection) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1375.atk_selection_get_selection_count$MH, "atk_selection_get_selection_count");
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_is_child_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1375.atk_selection_is_child_selected$MH,"atk_selection_is_child_selected");
    }
    public static int atk_selection_is_child_selected ( Addressable selection,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1375.atk_selection_is_child_selected$MH, "atk_selection_is_child_selected");
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_remove_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.atk_selection_remove_selection$MH,"atk_selection_remove_selection");
    }
    public static int atk_selection_remove_selection ( Addressable selection,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1376.atk_selection_remove_selection$MH, "atk_selection_remove_selection");
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_select_all_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.atk_selection_select_all_selection$MH,"atk_selection_select_all_selection");
    }
    public static int atk_selection_select_all_selection ( Addressable selection) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1376.atk_selection_select_all_selection$MH, "atk_selection_select_all_selection");
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.atk_socket_get_type$MH,"atk_socket_get_type");
    }
    public static long atk_socket_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1376.atk_socket_get_type$MH, "atk_socket_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.atk_socket_new$MH,"atk_socket_new");
    }
    public static MemoryAddress atk_socket_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1376.atk_socket_new$MH, "atk_socket_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_embed$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.atk_socket_embed$MH,"atk_socket_embed");
    }
    public static void atk_socket_embed ( Addressable obj,  Addressable plug_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1376.atk_socket_embed$MH, "atk_socket_embed");
        try {
            mh$.invokeExact(obj, plug_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_is_occupied$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.atk_socket_is_occupied$MH,"atk_socket_is_occupied");
    }
    public static int atk_socket_is_occupied ( Addressable obj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1376.atk_socket_is_occupied$MH, "atk_socket_is_occupied");
        try {
            return (int)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.atk_state_set_get_type$MH,"atk_state_set_get_type");
    }
    public static long atk_state_set_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1377.atk_state_set_get_type$MH, "atk_state_set_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.atk_state_set_new$MH,"atk_state_set_new");
    }
    public static MemoryAddress atk_state_set_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1377.atk_state_set_new$MH, "atk_state_set_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.atk_state_set_is_empty$MH,"atk_state_set_is_empty");
    }
    public static int atk_state_set_is_empty ( Addressable set) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1377.atk_state_set_is_empty$MH, "atk_state_set_is_empty");
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_add_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.atk_state_set_add_state$MH,"atk_state_set_add_state");
    }
    public static int atk_state_set_add_state ( Addressable set,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1377.atk_state_set_add_state$MH, "atk_state_set_add_state");
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_add_states$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.atk_state_set_add_states$MH,"atk_state_set_add_states");
    }
    public static void atk_state_set_add_states ( Addressable set,  Addressable types,  int n_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1377.atk_state_set_add_states$MH, "atk_state_set_add_states");
        try {
            mh$.invokeExact(set, types, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_clear_states$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.atk_state_set_clear_states$MH,"atk_state_set_clear_states");
    }
    public static void atk_state_set_clear_states ( Addressable set) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1377.atk_state_set_clear_states$MH, "atk_state_set_clear_states");
        try {
            mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_contains_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1378.atk_state_set_contains_state$MH,"atk_state_set_contains_state");
    }
    public static int atk_state_set_contains_state ( Addressable set,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1378.atk_state_set_contains_state$MH, "atk_state_set_contains_state");
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_contains_states$MH() {
        return RuntimeHelper.requireNonNull(constants$1378.atk_state_set_contains_states$MH,"atk_state_set_contains_states");
    }
    public static int atk_state_set_contains_states ( Addressable set,  Addressable types,  int n_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1378.atk_state_set_contains_states$MH, "atk_state_set_contains_states");
        try {
            return (int)mh$.invokeExact(set, types, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_remove_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1378.atk_state_set_remove_state$MH,"atk_state_set_remove_state");
    }
    public static int atk_state_set_remove_state ( Addressable set,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1378.atk_state_set_remove_state$MH, "atk_state_set_remove_state");
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_and_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$1378.atk_state_set_and_sets$MH,"atk_state_set_and_sets");
    }
    public static MemoryAddress atk_state_set_and_sets ( Addressable set,  Addressable compare_set) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1378.atk_state_set_and_sets$MH, "atk_state_set_and_sets");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_or_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$1378.atk_state_set_or_sets$MH,"atk_state_set_or_sets");
    }
    public static MemoryAddress atk_state_set_or_sets ( Addressable set,  Addressable compare_set) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1378.atk_state_set_or_sets$MH, "atk_state_set_or_sets");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_xor_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$1378.atk_state_set_xor_sets$MH,"atk_state_set_xor_sets");
    }
    public static MemoryAddress atk_state_set_xor_sets ( Addressable set,  Addressable compare_set) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1378.atk_state_set_xor_sets$MH, "atk_state_set_xor_sets");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_type$MH,"atk_streamable_content_get_type");
    }
    public static long atk_streamable_content_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_type$MH, "atk_streamable_content_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_n_mime_types$MH() {
        return RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_n_mime_types$MH,"atk_streamable_content_get_n_mime_types");
    }
    public static int atk_streamable_content_get_n_mime_types ( Addressable streamable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_n_mime_types$MH, "atk_streamable_content_get_n_mime_types");
        try {
            return (int)mh$.invokeExact(streamable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_mime_type$MH,"atk_streamable_content_get_mime_type");
    }
    public static MemoryAddress atk_streamable_content_get_mime_type ( Addressable streamable,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_mime_type$MH, "atk_streamable_content_get_mime_type");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(streamable, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_stream$MH,"atk_streamable_content_get_stream");
    }
    public static MemoryAddress atk_streamable_content_get_stream ( Addressable streamable,  Addressable mime_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_stream$MH, "atk_streamable_content_get_stream");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(streamable, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_uri$MH,"atk_streamable_content_get_uri");
    }
    public static MemoryAddress atk_streamable_content_get_uri ( Addressable streamable,  Addressable mime_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1379.atk_streamable_content_get_uri$MH, "atk_streamable_content_get_uri");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(streamable, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1379.atk_table_get_type$MH,"atk_table_get_type");
    }
    public static long atk_table_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1379.atk_table_get_type$MH, "atk_table_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_ref_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.atk_table_ref_at$MH,"atk_table_ref_at");
    }
    public static MemoryAddress atk_table_ref_at ( Addressable table,  int row,  int column) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1380.atk_table_ref_at$MH, "atk_table_ref_at");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_index_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.atk_table_get_index_at$MH,"atk_table_get_index_at");
    }
    public static int atk_table_get_index_at ( Addressable table,  int row,  int column) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1380.atk_table_get_index_at$MH, "atk_table_get_index_at");
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.atk_table_get_column_at_index$MH,"atk_table_get_column_at_index");
    }
    public static int atk_table_get_column_at_index ( Addressable table,  int index_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1380.atk_table_get_column_at_index$MH, "atk_table_get_column_at_index");
        try {
            return (int)mh$.invokeExact(table, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.atk_table_get_row_at_index$MH,"atk_table_get_row_at_index");
    }
    public static int atk_table_get_row_at_index ( Addressable table,  int index_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1380.atk_table_get_row_at_index$MH, "atk_table_get_row_at_index");
        try {
            return (int)mh$.invokeExact(table, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_n_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.atk_table_get_n_columns$MH,"atk_table_get_n_columns");
    }
    public static int atk_table_get_n_columns ( Addressable table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1380.atk_table_get_n_columns$MH, "atk_table_get_n_columns");
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_n_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.atk_table_get_n_rows$MH,"atk_table_get_n_rows");
    }
    public static int atk_table_get_n_rows ( Addressable table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1380.atk_table_get_n_rows$MH, "atk_table_get_n_rows");
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_extent_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.atk_table_get_column_extent_at$MH,"atk_table_get_column_extent_at");
    }
    public static int atk_table_get_column_extent_at ( Addressable table,  int row,  int column) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1381.atk_table_get_column_extent_at$MH, "atk_table_get_column_extent_at");
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_extent_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.atk_table_get_row_extent_at$MH,"atk_table_get_row_extent_at");
    }
    public static int atk_table_get_row_extent_at ( Addressable table,  int row,  int column) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1381.atk_table_get_row_extent_at$MH, "atk_table_get_row_extent_at");
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_caption$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.atk_table_get_caption$MH,"atk_table_get_caption");
    }
    public static MemoryAddress atk_table_get_caption ( Addressable table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1381.atk_table_get_caption$MH, "atk_table_get_caption");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.atk_table_get_column_description$MH,"atk_table_get_column_description");
    }
    public static MemoryAddress atk_table_get_column_description ( Addressable table,  int column) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1381.atk_table_get_column_description$MH, "atk_table_get_column_description");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_header$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.atk_table_get_column_header$MH,"atk_table_get_column_header");
    }
    public static MemoryAddress atk_table_get_column_header ( Addressable table,  int column) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1381.atk_table_get_column_header$MH, "atk_table_get_column_header");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.atk_table_get_row_description$MH,"atk_table_get_row_description");
    }
    public static MemoryAddress atk_table_get_row_description ( Addressable table,  int row) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1381.atk_table_get_row_description$MH, "atk_table_get_row_description");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_header$MH() {
        return RuntimeHelper.requireNonNull(constants$1382.atk_table_get_row_header$MH,"atk_table_get_row_header");
    }
    public static MemoryAddress atk_table_get_row_header ( Addressable table,  int row) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1382.atk_table_get_row_header$MH, "atk_table_get_row_header");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$1382.atk_table_get_summary$MH,"atk_table_get_summary");
    }
    public static MemoryAddress atk_table_get_summary ( Addressable table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1382.atk_table_get_summary$MH, "atk_table_get_summary");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


