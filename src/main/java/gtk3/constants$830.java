// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$830 {

    static final FunctionDescriptor g_task_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_new$MH = RuntimeHelper.downcallHandle(
        "g_task_new",
        constants$830.g_task_new$FUNC, false
    );
    static final FunctionDescriptor g_task_report_error$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_report_error$MH = RuntimeHelper.downcallHandle(
        "g_task_report_error",
        constants$830.g_task_report_error$FUNC, false
    );
    static final FunctionDescriptor g_task_report_new_error$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_report_new_error$MH = RuntimeHelper.downcallHandle(
        "g_task_report_new_error",
        constants$830.g_task_report_new_error$FUNC, true
    );
    static final FunctionDescriptor g_task_set_task_data$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_set_task_data$MH = RuntimeHelper.downcallHandle(
        "g_task_set_task_data",
        constants$830.g_task_set_task_data$FUNC, false
    );
    static final FunctionDescriptor g_task_set_priority$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_task_set_priority$MH = RuntimeHelper.downcallHandle(
        "g_task_set_priority",
        constants$830.g_task_set_priority$FUNC, false
    );
    static final FunctionDescriptor g_task_set_check_cancellable$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_task_set_check_cancellable$MH = RuntimeHelper.downcallHandle(
        "g_task_set_check_cancellable",
        constants$830.g_task_set_check_cancellable$FUNC, false
    );
}


