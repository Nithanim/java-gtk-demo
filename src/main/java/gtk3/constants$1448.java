// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1448 {

    static final FunctionDescriptor gtk_window_get_transient_for$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_get_transient_for$MH = RuntimeHelper.downcallHandle(
        "gtk_window_get_transient_for",
        constants$1448.gtk_window_get_transient_for$FUNC, false
    );
    static final FunctionDescriptor gtk_window_set_attached_to$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_set_attached_to$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_attached_to",
        constants$1448.gtk_window_set_attached_to$FUNC, false
    );
    static final FunctionDescriptor gtk_window_get_attached_to$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_get_attached_to$MH = RuntimeHelper.downcallHandle(
        "gtk_window_get_attached_to",
        constants$1448.gtk_window_get_attached_to$FUNC, false
    );
    static final FunctionDescriptor gtk_window_set_opacity$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle gtk_window_set_opacity$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_opacity",
        constants$1448.gtk_window_set_opacity$FUNC, false
    );
    static final FunctionDescriptor gtk_window_get_opacity$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_get_opacity$MH = RuntimeHelper.downcallHandle(
        "gtk_window_get_opacity",
        constants$1448.gtk_window_get_opacity$FUNC, false
    );
    static final FunctionDescriptor gtk_window_set_type_hint$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gtk_window_set_type_hint$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_type_hint",
        constants$1448.gtk_window_set_type_hint$FUNC, false
    );
}


