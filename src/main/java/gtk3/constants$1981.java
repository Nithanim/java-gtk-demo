// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1981 {

    static final FunctionDescriptor gtk_spinner_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle gtk_spinner_get_type$MH = RuntimeHelper.downcallHandle(
        "gtk_spinner_get_type",
        constants$1981.gtk_spinner_get_type$FUNC, false
    );
    static final FunctionDescriptor gtk_spinner_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle gtk_spinner_new$MH = RuntimeHelper.downcallHandle(
        "gtk_spinner_new",
        constants$1981.gtk_spinner_new$FUNC, false
    );
    static final FunctionDescriptor gtk_spinner_start$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_spinner_start$MH = RuntimeHelper.downcallHandle(
        "gtk_spinner_start",
        constants$1981.gtk_spinner_start$FUNC, false
    );
    static final FunctionDescriptor gtk_spinner_stop$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_spinner_stop$MH = RuntimeHelper.downcallHandle(
        "gtk_spinner_stop",
        constants$1981.gtk_spinner_stop$FUNC, false
    );
    static final FunctionDescriptor gtk_stack_switcher_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle gtk_stack_switcher_get_type$MH = RuntimeHelper.downcallHandle(
        "gtk_stack_switcher_get_type",
        constants$1981.gtk_stack_switcher_get_type$FUNC, false
    );
    static final FunctionDescriptor gtk_stack_switcher_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle gtk_stack_switcher_new$MH = RuntimeHelper.downcallHandle(
        "gtk_stack_switcher_new",
        constants$1981.gtk_stack_switcher_new$FUNC, false
    );
}


