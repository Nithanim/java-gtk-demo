// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class test_h_10 extends test_h_9 {

    public static OfAddress GDBusProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_autoptr_clear_GDBusProxy$MH,"glib_autoptr_clear_GDBusProxy");
    }
    public static void glib_autoptr_clear_GDBusProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_autoptr_clear_GDBusProxy$MH, "glib_autoptr_clear_GDBusProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_autoptr_cleanup_GDBusProxy$MH,"glib_autoptr_cleanup_GDBusProxy");
    }
    public static void glib_autoptr_cleanup_GDBusProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_autoptr_cleanup_GDBusProxy$MH, "glib_autoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_listautoptr_cleanup_GDBusProxy$MH,"glib_listautoptr_cleanup_GDBusProxy");
    }
    public static void glib_listautoptr_cleanup_GDBusProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_listautoptr_cleanup_GDBusProxy$MH, "glib_listautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_slistautoptr_cleanup_GDBusProxy$MH,"glib_slistautoptr_cleanup_GDBusProxy");
    }
    public static void glib_slistautoptr_cleanup_GDBusProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_slistautoptr_cleanup_GDBusProxy$MH, "glib_slistautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_queueautoptr_cleanup_GDBusProxy$MH,"glib_queueautoptr_cleanup_GDBusProxy");
    }
    public static void glib_queueautoptr_cleanup_GDBusProxy ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_queueautoptr_cleanup_GDBusProxy$MH, "glib_queueautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_autoptr_clear_GDBusServer$MH,"glib_autoptr_clear_GDBusServer");
    }
    public static void glib_autoptr_clear_GDBusServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_autoptr_clear_GDBusServer$MH, "glib_autoptr_clear_GDBusServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_autoptr_cleanup_GDBusServer$MH,"glib_autoptr_cleanup_GDBusServer");
    }
    public static void glib_autoptr_cleanup_GDBusServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_autoptr_cleanup_GDBusServer$MH, "glib_autoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_listautoptr_cleanup_GDBusServer$MH,"glib_listautoptr_cleanup_GDBusServer");
    }
    public static void glib_listautoptr_cleanup_GDBusServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_listautoptr_cleanup_GDBusServer$MH, "glib_listautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_slistautoptr_cleanup_GDBusServer$MH,"glib_slistautoptr_cleanup_GDBusServer");
    }
    public static void glib_slistautoptr_cleanup_GDBusServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_slistautoptr_cleanup_GDBusServer$MH, "glib_slistautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_queueautoptr_cleanup_GDBusServer$MH,"glib_queueautoptr_cleanup_GDBusServer");
    }
    public static void glib_queueautoptr_cleanup_GDBusServer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_queueautoptr_cleanup_GDBusServer$MH, "glib_queueautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDrive_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_autoptr_clear_GDrive$MH,"glib_autoptr_clear_GDrive");
    }
    public static void glib_autoptr_clear_GDrive ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_autoptr_clear_GDrive$MH, "glib_autoptr_clear_GDrive");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_autoptr_cleanup_GDrive$MH,"glib_autoptr_cleanup_GDrive");
    }
    public static void glib_autoptr_cleanup_GDrive ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_autoptr_cleanup_GDrive$MH, "glib_autoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_listautoptr_cleanup_GDrive$MH,"glib_listautoptr_cleanup_GDrive");
    }
    public static void glib_listautoptr_cleanup_GDrive ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_listautoptr_cleanup_GDrive$MH, "glib_listautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_slistautoptr_cleanup_GDrive$MH,"glib_slistautoptr_cleanup_GDrive");
    }
    public static void glib_slistautoptr_cleanup_GDrive ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_slistautoptr_cleanup_GDrive$MH, "glib_slistautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_queueautoptr_cleanup_GDrive$MH,"glib_queueautoptr_cleanup_GDrive");
    }
    public static void glib_queueautoptr_cleanup_GDrive ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_queueautoptr_cleanup_GDrive$MH, "glib_queueautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEmblemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_autoptr_clear_GEmblemedIcon$MH,"glib_autoptr_clear_GEmblemedIcon");
    }
    public static void glib_autoptr_clear_GEmblemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_autoptr_clear_GEmblemedIcon$MH, "glib_autoptr_clear_GEmblemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_autoptr_cleanup_GEmblemedIcon$MH,"glib_autoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_autoptr_cleanup_GEmblemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_autoptr_cleanup_GEmblemedIcon$MH, "glib_autoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_listautoptr_cleanup_GEmblemedIcon$MH,"glib_listautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_listautoptr_cleanup_GEmblemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_listautoptr_cleanup_GEmblemedIcon$MH, "glib_listautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_slistautoptr_cleanup_GEmblemedIcon$MH,"glib_slistautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_slistautoptr_cleanup_GEmblemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_slistautoptr_cleanup_GEmblemedIcon$MH, "glib_slistautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_queueautoptr_cleanup_GEmblemedIcon$MH,"glib_queueautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_queueautoptr_cleanup_GEmblemedIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_queueautoptr_cleanup_GEmblemedIcon$MH, "glib_queueautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEmblem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_autoptr_clear_GEmblem$MH,"glib_autoptr_clear_GEmblem");
    }
    public static void glib_autoptr_clear_GEmblem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_autoptr_clear_GEmblem$MH, "glib_autoptr_clear_GEmblem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_autoptr_cleanup_GEmblem$MH,"glib_autoptr_cleanup_GEmblem");
    }
    public static void glib_autoptr_cleanup_GEmblem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_autoptr_cleanup_GEmblem$MH, "glib_autoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_listautoptr_cleanup_GEmblem$MH,"glib_listautoptr_cleanup_GEmblem");
    }
    public static void glib_listautoptr_cleanup_GEmblem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_listautoptr_cleanup_GEmblem$MH, "glib_listautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GEmblem$MH,"glib_slistautoptr_cleanup_GEmblem");
    }
    public static void glib_slistautoptr_cleanup_GEmblem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GEmblem$MH, "glib_slistautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GEmblem$MH,"glib_queueautoptr_cleanup_GEmblem");
    }
    public static void glib_queueautoptr_cleanup_GEmblem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GEmblem$MH, "glib_queueautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GFileEnumerator$MH,"glib_autoptr_clear_GFileEnumerator");
    }
    public static void glib_autoptr_clear_GFileEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GFileEnumerator$MH, "glib_autoptr_clear_GFileEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_cleanup_GFileEnumerator$MH,"glib_autoptr_cleanup_GFileEnumerator");
    }
    public static void glib_autoptr_cleanup_GFileEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_autoptr_cleanup_GFileEnumerator$MH, "glib_autoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_listautoptr_cleanup_GFileEnumerator$MH,"glib_listautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_listautoptr_cleanup_GFileEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_listautoptr_cleanup_GFileEnumerator$MH, "glib_listautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GFileEnumerator$MH,"glib_slistautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GFileEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GFileEnumerator$MH, "glib_slistautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GFileEnumerator$MH,"glib_queueautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GFileEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GFileEnumerator$MH, "glib_queueautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GFile$MH,"glib_autoptr_clear_GFile");
    }
    public static void glib_autoptr_clear_GFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GFile$MH, "glib_autoptr_clear_GFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GFile$MH,"glib_autoptr_cleanup_GFile");
    }
    public static void glib_autoptr_cleanup_GFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GFile$MH, "glib_autoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_listautoptr_cleanup_GFile$MH,"glib_listautoptr_cleanup_GFile");
    }
    public static void glib_listautoptr_cleanup_GFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_listautoptr_cleanup_GFile$MH, "glib_listautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_slistautoptr_cleanup_GFile$MH,"glib_slistautoptr_cleanup_GFile");
    }
    public static void glib_slistautoptr_cleanup_GFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_slistautoptr_cleanup_GFile$MH, "glib_slistautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GFile$MH,"glib_queueautoptr_cleanup_GFile");
    }
    public static void glib_queueautoptr_cleanup_GFile ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GFile$MH, "glib_queueautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileAttributeInfoList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GFileAttributeInfoList$MH,"glib_autoptr_clear_GFileAttributeInfoList");
    }
    public static void glib_autoptr_clear_GFileAttributeInfoList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GFileAttributeInfoList$MH, "glib_autoptr_clear_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GFileAttributeInfoList$MH,"glib_autoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_autoptr_cleanup_GFileAttributeInfoList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GFileAttributeInfoList$MH, "glib_autoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GFileAttributeInfoList$MH,"glib_listautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_listautoptr_cleanup_GFileAttributeInfoList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GFileAttributeInfoList$MH, "glib_listautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_slistautoptr_cleanup_GFileAttributeInfoList$MH,"glib_slistautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_slistautoptr_cleanup_GFileAttributeInfoList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_slistautoptr_cleanup_GFileAttributeInfoList$MH, "glib_slistautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_queueautoptr_cleanup_GFileAttributeInfoList$MH,"glib_queueautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_queueautoptr_cleanup_GFileAttributeInfoList ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_queueautoptr_cleanup_GFileAttributeInfoList$MH, "glib_queueautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GFileIcon$MH,"glib_autoptr_clear_GFileIcon");
    }
    public static void glib_autoptr_clear_GFileIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GFileIcon$MH, "glib_autoptr_clear_GFileIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GFileIcon$MH,"glib_autoptr_cleanup_GFileIcon");
    }
    public static void glib_autoptr_cleanup_GFileIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GFileIcon$MH, "glib_autoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GFileIcon$MH,"glib_listautoptr_cleanup_GFileIcon");
    }
    public static void glib_listautoptr_cleanup_GFileIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GFileIcon$MH, "glib_listautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GFileIcon$MH,"glib_slistautoptr_cleanup_GFileIcon");
    }
    public static void glib_slistautoptr_cleanup_GFileIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GFileIcon$MH, "glib_slistautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_queueautoptr_cleanup_GFileIcon$MH,"glib_queueautoptr_cleanup_GFileIcon");
    }
    public static void glib_queueautoptr_cleanup_GFileIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_queueautoptr_cleanup_GFileIcon$MH, "glib_queueautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_clear_GFileInfo$MH,"glib_autoptr_clear_GFileInfo");
    }
    public static void glib_autoptr_clear_GFileInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_autoptr_clear_GFileInfo$MH, "glib_autoptr_clear_GFileInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GFileInfo$MH,"glib_autoptr_cleanup_GFileInfo");
    }
    public static void glib_autoptr_cleanup_GFileInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GFileInfo$MH, "glib_autoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GFileInfo$MH,"glib_listautoptr_cleanup_GFileInfo");
    }
    public static void glib_listautoptr_cleanup_GFileInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GFileInfo$MH, "glib_listautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GFileInfo$MH,"glib_slistautoptr_cleanup_GFileInfo");
    }
    public static void glib_slistautoptr_cleanup_GFileInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GFileInfo$MH, "glib_slistautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GFileInfo$MH,"glib_queueautoptr_cleanup_GFileInfo");
    }
    public static void glib_queueautoptr_cleanup_GFileInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GFileInfo$MH, "glib_queueautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_autoptr_clear_GFileInputStream$MH,"glib_autoptr_clear_GFileInputStream");
    }
    public static void glib_autoptr_clear_GFileInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_autoptr_clear_GFileInputStream$MH, "glib_autoptr_clear_GFileInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_autoptr_cleanup_GFileInputStream$MH,"glib_autoptr_cleanup_GFileInputStream");
    }
    public static void glib_autoptr_cleanup_GFileInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_autoptr_cleanup_GFileInputStream$MH, "glib_autoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GFileInputStream$MH,"glib_listautoptr_cleanup_GFileInputStream");
    }
    public static void glib_listautoptr_cleanup_GFileInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GFileInputStream$MH, "glib_listautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GFileInputStream$MH,"glib_slistautoptr_cleanup_GFileInputStream");
    }
    public static void glib_slistautoptr_cleanup_GFileInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GFileInputStream$MH, "glib_slistautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GFileInputStream$MH,"glib_queueautoptr_cleanup_GFileInputStream");
    }
    public static void glib_queueautoptr_cleanup_GFileInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GFileInputStream$MH, "glib_queueautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GFileIOStream$MH,"glib_autoptr_clear_GFileIOStream");
    }
    public static void glib_autoptr_clear_GFileIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GFileIOStream$MH, "glib_autoptr_clear_GFileIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_cleanup_GFileIOStream$MH,"glib_autoptr_cleanup_GFileIOStream");
    }
    public static void glib_autoptr_cleanup_GFileIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_autoptr_cleanup_GFileIOStream$MH, "glib_autoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_listautoptr_cleanup_GFileIOStream$MH,"glib_listautoptr_cleanup_GFileIOStream");
    }
    public static void glib_listautoptr_cleanup_GFileIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_listautoptr_cleanup_GFileIOStream$MH, "glib_listautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GFileIOStream$MH,"glib_slistautoptr_cleanup_GFileIOStream");
    }
    public static void glib_slistautoptr_cleanup_GFileIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GFileIOStream$MH, "glib_slistautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GFileIOStream$MH,"glib_queueautoptr_cleanup_GFileIOStream");
    }
    public static void glib_queueautoptr_cleanup_GFileIOStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GFileIOStream$MH, "glib_queueautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GFileMonitor$MH,"glib_autoptr_clear_GFileMonitor");
    }
    public static void glib_autoptr_clear_GFileMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GFileMonitor$MH, "glib_autoptr_clear_GFileMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GFileMonitor$MH,"glib_autoptr_cleanup_GFileMonitor");
    }
    public static void glib_autoptr_cleanup_GFileMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GFileMonitor$MH, "glib_autoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_listautoptr_cleanup_GFileMonitor$MH,"glib_listautoptr_cleanup_GFileMonitor");
    }
    public static void glib_listautoptr_cleanup_GFileMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_listautoptr_cleanup_GFileMonitor$MH, "glib_listautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_slistautoptr_cleanup_GFileMonitor$MH,"glib_slistautoptr_cleanup_GFileMonitor");
    }
    public static void glib_slistautoptr_cleanup_GFileMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_slistautoptr_cleanup_GFileMonitor$MH, "glib_slistautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GFileMonitor$MH,"glib_queueautoptr_cleanup_GFileMonitor");
    }
    public static void glib_queueautoptr_cleanup_GFileMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GFileMonitor$MH, "glib_queueautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilenameCompleter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GFilenameCompleter$MH,"glib_autoptr_clear_GFilenameCompleter");
    }
    public static void glib_autoptr_clear_GFilenameCompleter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GFilenameCompleter$MH, "glib_autoptr_clear_GFilenameCompleter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GFilenameCompleter$MH,"glib_autoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_autoptr_cleanup_GFilenameCompleter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GFilenameCompleter$MH, "glib_autoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GFilenameCompleter$MH,"glib_listautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_listautoptr_cleanup_GFilenameCompleter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GFilenameCompleter$MH, "glib_listautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_slistautoptr_cleanup_GFilenameCompleter$MH,"glib_slistautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_slistautoptr_cleanup_GFilenameCompleter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_slistautoptr_cleanup_GFilenameCompleter$MH, "glib_slistautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_queueautoptr_cleanup_GFilenameCompleter$MH,"glib_queueautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_queueautoptr_cleanup_GFilenameCompleter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_queueautoptr_cleanup_GFilenameCompleter$MH, "glib_queueautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GFileOutputStream$MH,"glib_autoptr_clear_GFileOutputStream");
    }
    public static void glib_autoptr_clear_GFileOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GFileOutputStream$MH, "glib_autoptr_clear_GFileOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GFileOutputStream$MH,"glib_autoptr_cleanup_GFileOutputStream");
    }
    public static void glib_autoptr_cleanup_GFileOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GFileOutputStream$MH, "glib_autoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GFileOutputStream$MH,"glib_listautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_listautoptr_cleanup_GFileOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GFileOutputStream$MH, "glib_listautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GFileOutputStream$MH,"glib_slistautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GFileOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GFileOutputStream$MH, "glib_slistautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_queueautoptr_cleanup_GFileOutputStream$MH,"glib_queueautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GFileOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_queueautoptr_cleanup_GFileOutputStream$MH, "glib_queueautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilterInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_clear_GFilterInputStream$MH,"glib_autoptr_clear_GFilterInputStream");
    }
    public static void glib_autoptr_clear_GFilterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_autoptr_clear_GFilterInputStream$MH, "glib_autoptr_clear_GFilterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GFilterInputStream$MH,"glib_autoptr_cleanup_GFilterInputStream");
    }
    public static void glib_autoptr_cleanup_GFilterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GFilterInputStream$MH, "glib_autoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GFilterInputStream$MH,"glib_listautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_listautoptr_cleanup_GFilterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GFilterInputStream$MH, "glib_listautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GFilterInputStream$MH,"glib_slistautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_slistautoptr_cleanup_GFilterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GFilterInputStream$MH, "glib_slistautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GFilterInputStream$MH,"glib_queueautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_queueautoptr_cleanup_GFilterInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GFilterInputStream$MH, "glib_queueautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilterOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_autoptr_clear_GFilterOutputStream$MH,"glib_autoptr_clear_GFilterOutputStream");
    }
    public static void glib_autoptr_clear_GFilterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_autoptr_clear_GFilterOutputStream$MH, "glib_autoptr_clear_GFilterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_autoptr_cleanup_GFilterOutputStream$MH,"glib_autoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_autoptr_cleanup_GFilterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_autoptr_cleanup_GFilterOutputStream$MH, "glib_autoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GFilterOutputStream$MH,"glib_listautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_listautoptr_cleanup_GFilterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GFilterOutputStream$MH, "glib_listautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GFilterOutputStream$MH,"glib_slistautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GFilterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GFilterOutputStream$MH, "glib_slistautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GFilterOutputStream$MH,"glib_queueautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GFilterOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GFilterOutputStream$MH, "glib_queueautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GIcon$MH,"glib_autoptr_clear_GIcon");
    }
    public static void glib_autoptr_clear_GIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GIcon$MH, "glib_autoptr_clear_GIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_cleanup_GIcon$MH,"glib_autoptr_cleanup_GIcon");
    }
    public static void glib_autoptr_cleanup_GIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_autoptr_cleanup_GIcon$MH, "glib_autoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_listautoptr_cleanup_GIcon$MH,"glib_listautoptr_cleanup_GIcon");
    }
    public static void glib_listautoptr_cleanup_GIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_listautoptr_cleanup_GIcon$MH, "glib_listautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GIcon$MH,"glib_slistautoptr_cleanup_GIcon");
    }
    public static void glib_slistautoptr_cleanup_GIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GIcon$MH, "glib_slistautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GIcon$MH,"glib_queueautoptr_cleanup_GIcon");
    }
    public static void glib_queueautoptr_cleanup_GIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GIcon$MH, "glib_queueautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GInetAddress$MH,"glib_autoptr_clear_GInetAddress");
    }
    public static void glib_autoptr_clear_GInetAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GInetAddress$MH, "glib_autoptr_clear_GInetAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GInetAddress$MH,"glib_autoptr_cleanup_GInetAddress");
    }
    public static void glib_autoptr_cleanup_GInetAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GInetAddress$MH, "glib_autoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_listautoptr_cleanup_GInetAddress$MH,"glib_listautoptr_cleanup_GInetAddress");
    }
    public static void glib_listautoptr_cleanup_GInetAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_listautoptr_cleanup_GInetAddress$MH, "glib_listautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_slistautoptr_cleanup_GInetAddress$MH,"glib_slistautoptr_cleanup_GInetAddress");
    }
    public static void glib_slistautoptr_cleanup_GInetAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_slistautoptr_cleanup_GInetAddress$MH, "glib_slistautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GInetAddress$MH,"glib_queueautoptr_cleanup_GInetAddress");
    }
    public static void glib_queueautoptr_cleanup_GInetAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GInetAddress$MH, "glib_queueautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetAddressMask_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GInetAddressMask$MH,"glib_autoptr_clear_GInetAddressMask");
    }
    public static void glib_autoptr_clear_GInetAddressMask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GInetAddressMask$MH, "glib_autoptr_clear_GInetAddressMask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GInetAddressMask$MH,"glib_autoptr_cleanup_GInetAddressMask");
    }
    public static void glib_autoptr_cleanup_GInetAddressMask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GInetAddressMask$MH, "glib_autoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GInetAddressMask$MH,"glib_listautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_listautoptr_cleanup_GInetAddressMask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GInetAddressMask$MH, "glib_listautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_slistautoptr_cleanup_GInetAddressMask$MH,"glib_slistautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_slistautoptr_cleanup_GInetAddressMask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_slistautoptr_cleanup_GInetAddressMask$MH, "glib_slistautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_queueautoptr_cleanup_GInetAddressMask$MH,"glib_queueautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_queueautoptr_cleanup_GInetAddressMask ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_queueautoptr_cleanup_GInetAddressMask$MH, "glib_queueautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GInetSocketAddress$MH,"glib_autoptr_clear_GInetSocketAddress");
    }
    public static void glib_autoptr_clear_GInetSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GInetSocketAddress$MH, "glib_autoptr_clear_GInetSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GInetSocketAddress$MH,"glib_autoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_autoptr_cleanup_GInetSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GInetSocketAddress$MH, "glib_autoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GInetSocketAddress$MH,"glib_listautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GInetSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GInetSocketAddress$MH, "glib_listautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GInetSocketAddress$MH,"glib_slistautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GInetSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GInetSocketAddress$MH, "glib_slistautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_queueautoptr_cleanup_GInetSocketAddress$MH,"glib_queueautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GInetSocketAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_queueautoptr_cleanup_GInetSocketAddress$MH, "glib_queueautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInitable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_clear_GInitable$MH,"glib_autoptr_clear_GInitable");
    }
    public static void glib_autoptr_clear_GInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_autoptr_clear_GInitable$MH, "glib_autoptr_clear_GInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GInitable$MH,"glib_autoptr_cleanup_GInitable");
    }
    public static void glib_autoptr_cleanup_GInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GInitable$MH, "glib_autoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GInitable$MH,"glib_listautoptr_cleanup_GInitable");
    }
    public static void glib_listautoptr_cleanup_GInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GInitable$MH, "glib_listautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GInitable$MH,"glib_slistautoptr_cleanup_GInitable");
    }
    public static void glib_slistautoptr_cleanup_GInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GInitable$MH, "glib_slistautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GInitable$MH,"glib_queueautoptr_cleanup_GInitable");
    }
    public static void glib_queueautoptr_cleanup_GInitable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GInitable$MH, "glib_queueautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_autoptr_clear_GInputStream$MH,"glib_autoptr_clear_GInputStream");
    }
    public static void glib_autoptr_clear_GInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_autoptr_clear_GInputStream$MH, "glib_autoptr_clear_GInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_autoptr_cleanup_GInputStream$MH,"glib_autoptr_cleanup_GInputStream");
    }
    public static void glib_autoptr_cleanup_GInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_autoptr_cleanup_GInputStream$MH, "glib_autoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GInputStream$MH,"glib_listautoptr_cleanup_GInputStream");
    }
    public static void glib_listautoptr_cleanup_GInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GInputStream$MH, "glib_listautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GInputStream$MH,"glib_slistautoptr_cleanup_GInputStream");
    }
    public static void glib_slistautoptr_cleanup_GInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GInputStream$MH, "glib_slistautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GInputStream$MH,"glib_queueautoptr_cleanup_GInputStream");
    }
    public static void glib_queueautoptr_cleanup_GInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GInputStream$MH, "glib_queueautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOModule_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GIOModule$MH,"glib_autoptr_clear_GIOModule");
    }
    public static void glib_autoptr_clear_GIOModule ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GIOModule$MH, "glib_autoptr_clear_GIOModule");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_cleanup_GIOModule$MH,"glib_autoptr_cleanup_GIOModule");
    }
    public static void glib_autoptr_cleanup_GIOModule ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_autoptr_cleanup_GIOModule$MH, "glib_autoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_listautoptr_cleanup_GIOModule$MH,"glib_listautoptr_cleanup_GIOModule");
    }
    public static void glib_listautoptr_cleanup_GIOModule ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_listautoptr_cleanup_GIOModule$MH, "glib_listautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GIOModule$MH,"glib_slistautoptr_cleanup_GIOModule");
    }
    public static void glib_slistautoptr_cleanup_GIOModule ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GIOModule$MH, "glib_slistautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GIOModule$MH,"glib_queueautoptr_cleanup_GIOModule");
    }
    public static void glib_queueautoptr_cleanup_GIOModule ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GIOModule$MH, "glib_queueautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GIOStream$MH,"glib_autoptr_clear_GIOStream");
    }
    public static void glib_autoptr_clear_GIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GIOStream$MH, "glib_autoptr_clear_GIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GIOStream$MH,"glib_autoptr_cleanup_GIOStream");
    }
    public static void glib_autoptr_cleanup_GIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GIOStream$MH, "glib_autoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_listautoptr_cleanup_GIOStream$MH,"glib_listautoptr_cleanup_GIOStream");
    }
    public static void glib_listautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_listautoptr_cleanup_GIOStream$MH, "glib_listautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_slistautoptr_cleanup_GIOStream$MH,"glib_slistautoptr_cleanup_GIOStream");
    }
    public static void glib_slistautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_slistautoptr_cleanup_GIOStream$MH, "glib_slistautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GIOStream$MH,"glib_queueautoptr_cleanup_GIOStream");
    }
    public static void glib_queueautoptr_cleanup_GIOStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GIOStream$MH, "glib_queueautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GLoadableIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GLoadableIcon$MH,"glib_autoptr_clear_GLoadableIcon");
    }
    public static void glib_autoptr_clear_GLoadableIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GLoadableIcon$MH, "glib_autoptr_clear_GLoadableIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GLoadableIcon$MH,"glib_autoptr_cleanup_GLoadableIcon");
    }
    public static void glib_autoptr_cleanup_GLoadableIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GLoadableIcon$MH, "glib_autoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GLoadableIcon$MH,"glib_listautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_listautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GLoadableIcon$MH, "glib_listautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_slistautoptr_cleanup_GLoadableIcon$MH,"glib_slistautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_slistautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_slistautoptr_cleanup_GLoadableIcon$MH, "glib_slistautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_queueautoptr_cleanup_GLoadableIcon$MH,"glib_queueautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_queueautoptr_cleanup_GLoadableIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_queueautoptr_cleanup_GLoadableIcon$MH, "glib_queueautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GMemoryInputStream$MH,"glib_autoptr_clear_GMemoryInputStream");
    }
    public static void glib_autoptr_clear_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GMemoryInputStream$MH, "glib_autoptr_clear_GMemoryInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GMemoryInputStream$MH,"glib_autoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GMemoryInputStream$MH, "glib_autoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GMemoryInputStream$MH,"glib_listautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GMemoryInputStream$MH, "glib_listautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GMemoryInputStream$MH,"glib_slistautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GMemoryInputStream$MH, "glib_slistautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_queueautoptr_cleanup_GMemoryInputStream$MH,"glib_queueautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_queueautoptr_cleanup_GMemoryInputStream$MH, "glib_queueautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_clear_GMemoryOutputStream$MH,"glib_autoptr_clear_GMemoryOutputStream");
    }
    public static void glib_autoptr_clear_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_autoptr_clear_GMemoryOutputStream$MH, "glib_autoptr_clear_GMemoryOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GMemoryOutputStream$MH,"glib_autoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GMemoryOutputStream$MH, "glib_autoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GMemoryOutputStream$MH,"glib_listautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GMemoryOutputStream$MH, "glib_listautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GMemoryOutputStream$MH,"glib_slistautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GMemoryOutputStream$MH, "glib_slistautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GMemoryOutputStream$MH,"glib_queueautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GMemoryOutputStream$MH, "glib_queueautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_autoptr_clear_GMenu$MH,"glib_autoptr_clear_GMenu");
    }
    public static void glib_autoptr_clear_GMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_autoptr_clear_GMenu$MH, "glib_autoptr_clear_GMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_autoptr_cleanup_GMenu$MH,"glib_autoptr_cleanup_GMenu");
    }
    public static void glib_autoptr_cleanup_GMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_autoptr_cleanup_GMenu$MH, "glib_autoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GMenu$MH,"glib_listautoptr_cleanup_GMenu");
    }
    public static void glib_listautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GMenu$MH, "glib_listautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GMenu$MH,"glib_slistautoptr_cleanup_GMenu");
    }
    public static void glib_slistautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GMenu$MH, "glib_slistautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GMenu$MH,"glib_queueautoptr_cleanup_GMenu");
    }
    public static void glib_queueautoptr_cleanup_GMenu ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GMenu$MH, "glib_queueautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GMenuItem$MH,"glib_autoptr_clear_GMenuItem");
    }
    public static void glib_autoptr_clear_GMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GMenuItem$MH, "glib_autoptr_clear_GMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_cleanup_GMenuItem$MH,"glib_autoptr_cleanup_GMenuItem");
    }
    public static void glib_autoptr_cleanup_GMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_autoptr_cleanup_GMenuItem$MH, "glib_autoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_listautoptr_cleanup_GMenuItem$MH,"glib_listautoptr_cleanup_GMenuItem");
    }
    public static void glib_listautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_listautoptr_cleanup_GMenuItem$MH, "glib_listautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GMenuItem$MH,"glib_slistautoptr_cleanup_GMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GMenuItem$MH, "glib_slistautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GMenuItem$MH,"glib_queueautoptr_cleanup_GMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GMenuItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GMenuItem$MH, "glib_queueautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GMenuModel$MH,"glib_autoptr_clear_GMenuModel");
    }
    public static void glib_autoptr_clear_GMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GMenuModel$MH, "glib_autoptr_clear_GMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GMenuModel$MH,"glib_autoptr_cleanup_GMenuModel");
    }
    public static void glib_autoptr_cleanup_GMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GMenuModel$MH, "glib_autoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_listautoptr_cleanup_GMenuModel$MH,"glib_listautoptr_cleanup_GMenuModel");
    }
    public static void glib_listautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_listautoptr_cleanup_GMenuModel$MH, "glib_listautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_slistautoptr_cleanup_GMenuModel$MH,"glib_slistautoptr_cleanup_GMenuModel");
    }
    public static void glib_slistautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_slistautoptr_cleanup_GMenuModel$MH, "glib_slistautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GMenuModel$MH,"glib_queueautoptr_cleanup_GMenuModel");
    }
    public static void glib_queueautoptr_cleanup_GMenuModel ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GMenuModel$MH, "glib_queueautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuAttributeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GMenuAttributeIter$MH,"glib_autoptr_clear_GMenuAttributeIter");
    }
    public static void glib_autoptr_clear_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GMenuAttributeIter$MH, "glib_autoptr_clear_GMenuAttributeIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GMenuAttributeIter$MH,"glib_autoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_autoptr_cleanup_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GMenuAttributeIter$MH, "glib_autoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GMenuAttributeIter$MH,"glib_listautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_listautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GMenuAttributeIter$MH, "glib_listautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_slistautoptr_cleanup_GMenuAttributeIter$MH,"glib_slistautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_slistautoptr_cleanup_GMenuAttributeIter$MH, "glib_slistautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_queueautoptr_cleanup_GMenuAttributeIter$MH,"glib_queueautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuAttributeIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_queueautoptr_cleanup_GMenuAttributeIter$MH, "glib_queueautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuLinkIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GMenuLinkIter$MH,"glib_autoptr_clear_GMenuLinkIter");
    }
    public static void glib_autoptr_clear_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GMenuLinkIter$MH, "glib_autoptr_clear_GMenuLinkIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GMenuLinkIter$MH,"glib_autoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_autoptr_cleanup_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GMenuLinkIter$MH, "glib_autoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GMenuLinkIter$MH,"glib_listautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_listautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GMenuLinkIter$MH, "glib_listautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GMenuLinkIter$MH,"glib_slistautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GMenuLinkIter$MH, "glib_slistautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_queueautoptr_cleanup_GMenuLinkIter$MH,"glib_queueautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuLinkIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_queueautoptr_cleanup_GMenuLinkIter$MH, "glib_queueautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMount_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_clear_GMount$MH,"glib_autoptr_clear_GMount");
    }
    public static void glib_autoptr_clear_GMount ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_autoptr_clear_GMount$MH, "glib_autoptr_clear_GMount");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GMount$MH,"glib_autoptr_cleanup_GMount");
    }
    public static void glib_autoptr_cleanup_GMount ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GMount$MH, "glib_autoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GMount$MH,"glib_listautoptr_cleanup_GMount");
    }
    public static void glib_listautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GMount$MH, "glib_listautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GMount$MH,"glib_slistautoptr_cleanup_GMount");
    }
    public static void glib_slistautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GMount$MH, "glib_slistautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GMount$MH,"glib_queueautoptr_cleanup_GMount");
    }
    public static void glib_queueautoptr_cleanup_GMount ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GMount$MH, "glib_queueautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_autoptr_clear_GMountOperation$MH,"glib_autoptr_clear_GMountOperation");
    }
    public static void glib_autoptr_clear_GMountOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_autoptr_clear_GMountOperation$MH, "glib_autoptr_clear_GMountOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_autoptr_cleanup_GMountOperation$MH,"glib_autoptr_cleanup_GMountOperation");
    }
    public static void glib_autoptr_cleanup_GMountOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_autoptr_cleanup_GMountOperation$MH, "glib_autoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GMountOperation$MH,"glib_listautoptr_cleanup_GMountOperation");
    }
    public static void glib_listautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GMountOperation$MH, "glib_listautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GMountOperation$MH,"glib_slistautoptr_cleanup_GMountOperation");
    }
    public static void glib_slistautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GMountOperation$MH, "glib_slistautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GMountOperation$MH,"glib_queueautoptr_cleanup_GMountOperation");
    }
    public static void glib_queueautoptr_cleanup_GMountOperation ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GMountOperation$MH, "glib_queueautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNativeVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GNativeVolumeMonitor$MH,"glib_autoptr_clear_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_clear_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GNativeVolumeMonitor$MH, "glib_autoptr_clear_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_cleanup_GNativeVolumeMonitor$MH,"glib_autoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_autoptr_cleanup_GNativeVolumeMonitor$MH, "glib_autoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_listautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_listautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_listautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_listautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_slistautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_slistautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_queueautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNativeVolumeMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_queueautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GNetworkAddress$MH,"glib_autoptr_clear_GNetworkAddress");
    }
    public static void glib_autoptr_clear_GNetworkAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GNetworkAddress$MH, "glib_autoptr_clear_GNetworkAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GNetworkAddress$MH,"glib_autoptr_cleanup_GNetworkAddress");
    }
    public static void glib_autoptr_cleanup_GNetworkAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GNetworkAddress$MH, "glib_autoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_listautoptr_cleanup_GNetworkAddress$MH,"glib_listautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_listautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_listautoptr_cleanup_GNetworkAddress$MH, "glib_listautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_slistautoptr_cleanup_GNetworkAddress$MH,"glib_slistautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_slistautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_slistautoptr_cleanup_GNetworkAddress$MH, "glib_slistautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GNetworkAddress$MH,"glib_queueautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_queueautoptr_cleanup_GNetworkAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GNetworkAddress$MH, "glib_queueautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GNetworkMonitor$MH,"glib_autoptr_clear_GNetworkMonitor");
    }
    public static void glib_autoptr_clear_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GNetworkMonitor$MH, "glib_autoptr_clear_GNetworkMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GNetworkMonitor$MH,"glib_autoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_autoptr_cleanup_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GNetworkMonitor$MH, "glib_autoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GNetworkMonitor$MH,"glib_listautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_listautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GNetworkMonitor$MH, "glib_listautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_slistautoptr_cleanup_GNetworkMonitor$MH,"glib_slistautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_slistautoptr_cleanup_GNetworkMonitor$MH, "glib_slistautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_queueautoptr_cleanup_GNetworkMonitor$MH,"glib_queueautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNetworkMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_queueautoptr_cleanup_GNetworkMonitor$MH, "glib_queueautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GNetworkService$MH,"glib_autoptr_clear_GNetworkService");
    }
    public static void glib_autoptr_clear_GNetworkService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GNetworkService$MH, "glib_autoptr_clear_GNetworkService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GNetworkService$MH,"glib_autoptr_cleanup_GNetworkService");
    }
    public static void glib_autoptr_cleanup_GNetworkService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GNetworkService$MH, "glib_autoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GNetworkService$MH,"glib_listautoptr_cleanup_GNetworkService");
    }
    public static void glib_listautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GNetworkService$MH, "glib_listautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GNetworkService$MH,"glib_slistautoptr_cleanup_GNetworkService");
    }
    public static void glib_slistautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GNetworkService$MH, "glib_slistautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_queueautoptr_cleanup_GNetworkService$MH,"glib_queueautoptr_cleanup_GNetworkService");
    }
    public static void glib_queueautoptr_cleanup_GNetworkService ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_queueautoptr_cleanup_GNetworkService$MH, "glib_queueautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNotification_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_clear_GNotification$MH,"glib_autoptr_clear_GNotification");
    }
    public static void glib_autoptr_clear_GNotification ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_autoptr_clear_GNotification$MH, "glib_autoptr_clear_GNotification");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GNotification$MH,"glib_autoptr_cleanup_GNotification");
    }
    public static void glib_autoptr_cleanup_GNotification ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GNotification$MH, "glib_autoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GNotification$MH,"glib_listautoptr_cleanup_GNotification");
    }
    public static void glib_listautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GNotification$MH, "glib_listautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GNotification$MH,"glib_slistautoptr_cleanup_GNotification");
    }
    public static void glib_slistautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GNotification$MH, "glib_slistautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GNotification$MH,"glib_queueautoptr_cleanup_GNotification");
    }
    public static void glib_queueautoptr_cleanup_GNotification ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GNotification$MH, "glib_queueautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_autoptr_clear_GOutputStream$MH,"glib_autoptr_clear_GOutputStream");
    }
    public static void glib_autoptr_clear_GOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_autoptr_clear_GOutputStream$MH, "glib_autoptr_clear_GOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_autoptr_cleanup_GOutputStream$MH,"glib_autoptr_cleanup_GOutputStream");
    }
    public static void glib_autoptr_cleanup_GOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_autoptr_cleanup_GOutputStream$MH, "glib_autoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GOutputStream$MH,"glib_listautoptr_cleanup_GOutputStream");
    }
    public static void glib_listautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GOutputStream$MH, "glib_listautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GOutputStream$MH,"glib_slistautoptr_cleanup_GOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GOutputStream$MH, "glib_slistautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GOutputStream$MH,"glib_queueautoptr_cleanup_GOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GOutputStream$MH, "glib_queueautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GPermission$MH,"glib_autoptr_clear_GPermission");
    }
    public static void glib_autoptr_clear_GPermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GPermission$MH, "glib_autoptr_clear_GPermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_cleanup_GPermission$MH,"glib_autoptr_cleanup_GPermission");
    }
    public static void glib_autoptr_cleanup_GPermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_autoptr_cleanup_GPermission$MH, "glib_autoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_listautoptr_cleanup_GPermission$MH,"glib_listautoptr_cleanup_GPermission");
    }
    public static void glib_listautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_listautoptr_cleanup_GPermission$MH, "glib_listautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GPermission$MH,"glib_slistautoptr_cleanup_GPermission");
    }
    public static void glib_slistautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GPermission$MH, "glib_slistautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GPermission$MH,"glib_queueautoptr_cleanup_GPermission");
    }
    public static void glib_queueautoptr_cleanup_GPermission ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GPermission$MH, "glib_queueautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GPollableInputStream$MH,"glib_autoptr_clear_GPollableInputStream");
    }
    public static void glib_autoptr_clear_GPollableInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GPollableInputStream$MH, "glib_autoptr_clear_GPollableInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GPollableInputStream$MH,"glib_autoptr_cleanup_GPollableInputStream");
    }
    public static void glib_autoptr_cleanup_GPollableInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GPollableInputStream$MH, "glib_autoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_listautoptr_cleanup_GPollableInputStream$MH,"glib_listautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_listautoptr_cleanup_GPollableInputStream$MH, "glib_listautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_slistautoptr_cleanup_GPollableInputStream$MH,"glib_slistautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_slistautoptr_cleanup_GPollableInputStream$MH, "glib_slistautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GPollableInputStream$MH,"glib_queueautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GPollableInputStream$MH, "glib_queueautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GPollableOutputStream$MH,"glib_autoptr_clear_GPollableOutputStream");
    }
    public static void glib_autoptr_clear_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GPollableOutputStream$MH, "glib_autoptr_clear_GPollableOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GPollableOutputStream$MH,"glib_autoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_autoptr_cleanup_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GPollableOutputStream$MH, "glib_autoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GPollableOutputStream$MH,"glib_listautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GPollableOutputStream$MH, "glib_listautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_slistautoptr_cleanup_GPollableOutputStream$MH,"glib_slistautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_slistautoptr_cleanup_GPollableOutputStream$MH, "glib_slistautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_queueautoptr_cleanup_GPollableOutputStream$MH,"glib_queueautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_queueautoptr_cleanup_GPollableOutputStream$MH, "glib_queueautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPropertyAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GPropertyAction$MH,"glib_autoptr_clear_GPropertyAction");
    }
    public static void glib_autoptr_clear_GPropertyAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GPropertyAction$MH, "glib_autoptr_clear_GPropertyAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GPropertyAction$MH,"glib_autoptr_cleanup_GPropertyAction");
    }
    public static void glib_autoptr_cleanup_GPropertyAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GPropertyAction$MH, "glib_autoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GPropertyAction$MH,"glib_listautoptr_cleanup_GPropertyAction");
    }
    public static void glib_listautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GPropertyAction$MH, "glib_listautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GPropertyAction$MH,"glib_slistautoptr_cleanup_GPropertyAction");
    }
    public static void glib_slistautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GPropertyAction$MH, "glib_slistautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_queueautoptr_cleanup_GPropertyAction$MH,"glib_queueautoptr_cleanup_GPropertyAction");
    }
    public static void glib_queueautoptr_cleanup_GPropertyAction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_queueautoptr_cleanup_GPropertyAction$MH, "glib_queueautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_clear_GProxyAddressEnumerator$MH,"glib_autoptr_clear_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_clear_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_autoptr_clear_GProxyAddressEnumerator$MH, "glib_autoptr_clear_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GProxyAddressEnumerator$MH,"glib_autoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GProxyAddressEnumerator$MH, "glib_autoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_listautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_listautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_slistautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_slistautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_queueautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddressEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_queueautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_clear_GProxyAddress$MH,"glib_autoptr_clear_GProxyAddress");
    }
    public static void glib_autoptr_clear_GProxyAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_autoptr_clear_GProxyAddress$MH, "glib_autoptr_clear_GProxyAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_cleanup_GProxyAddress$MH,"glib_autoptr_cleanup_GProxyAddress");
    }
    public static void glib_autoptr_cleanup_GProxyAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_autoptr_cleanup_GProxyAddress$MH, "glib_autoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GProxyAddress$MH,"glib_listautoptr_cleanup_GProxyAddress");
    }
    public static void glib_listautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GProxyAddress$MH, "glib_listautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GProxyAddress$MH,"glib_slistautoptr_cleanup_GProxyAddress");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GProxyAddress$MH, "glib_slistautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GProxyAddress$MH,"glib_queueautoptr_cleanup_GProxyAddress");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GProxyAddress$MH, "glib_queueautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GProxy$MH,"glib_autoptr_clear_GProxy");
    }
    public static void glib_autoptr_clear_GProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GProxy$MH, "glib_autoptr_clear_GProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_cleanup_GProxy$MH,"glib_autoptr_cleanup_GProxy");
    }
    public static void glib_autoptr_cleanup_GProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_autoptr_cleanup_GProxy$MH, "glib_autoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_listautoptr_cleanup_GProxy$MH,"glib_listautoptr_cleanup_GProxy");
    }
    public static void glib_listautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_listautoptr_cleanup_GProxy$MH, "glib_listautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GProxy$MH,"glib_slistautoptr_cleanup_GProxy");
    }
    public static void glib_slistautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GProxy$MH, "glib_slistautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GProxy$MH,"glib_queueautoptr_cleanup_GProxy");
    }
    public static void glib_queueautoptr_cleanup_GProxy ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GProxy$MH, "glib_queueautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GProxyResolver$MH,"glib_autoptr_clear_GProxyResolver");
    }
    public static void glib_autoptr_clear_GProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GProxyResolver$MH, "glib_autoptr_clear_GProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_cleanup_GProxyResolver$MH,"glib_autoptr_cleanup_GProxyResolver");
    }
    public static void glib_autoptr_cleanup_GProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_autoptr_cleanup_GProxyResolver$MH, "glib_autoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_listautoptr_cleanup_GProxyResolver$MH,"glib_listautoptr_cleanup_GProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_listautoptr_cleanup_GProxyResolver$MH, "glib_listautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_slistautoptr_cleanup_GProxyResolver$MH,"glib_slistautoptr_cleanup_GProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_slistautoptr_cleanup_GProxyResolver$MH, "glib_slistautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GProxyResolver$MH,"glib_queueautoptr_cleanup_GProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GProxyResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GProxyResolver$MH, "glib_queueautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRemoteActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GRemoteActionGroup$MH,"glib_autoptr_clear_GRemoteActionGroup");
    }
    public static void glib_autoptr_clear_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GRemoteActionGroup$MH, "glib_autoptr_clear_GRemoteActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_cleanup_GRemoteActionGroup$MH,"glib_autoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_autoptr_cleanup_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_autoptr_cleanup_GRemoteActionGroup$MH, "glib_autoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_listautoptr_cleanup_GRemoteActionGroup$MH,"glib_listautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_listautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_listautoptr_cleanup_GRemoteActionGroup$MH, "glib_listautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_slistautoptr_cleanup_GRemoteActionGroup$MH,"glib_slistautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_slistautoptr_cleanup_GRemoteActionGroup$MH, "glib_slistautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_queueautoptr_cleanup_GRemoteActionGroup$MH,"glib_queueautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GRemoteActionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_queueautoptr_cleanup_GRemoteActionGroup$MH, "glib_queueautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GResolver$MH,"glib_autoptr_clear_GResolver");
    }
    public static void glib_autoptr_clear_GResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GResolver$MH, "glib_autoptr_clear_GResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GResolver$MH,"glib_autoptr_cleanup_GResolver");
    }
    public static void glib_autoptr_cleanup_GResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GResolver$MH, "glib_autoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_listautoptr_cleanup_GResolver$MH,"glib_listautoptr_cleanup_GResolver");
    }
    public static void glib_listautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_listautoptr_cleanup_GResolver$MH, "glib_listautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_slistautoptr_cleanup_GResolver$MH,"glib_slistautoptr_cleanup_GResolver");
    }
    public static void glib_slistautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_slistautoptr_cleanup_GResolver$MH, "glib_slistautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_queueautoptr_cleanup_GResolver$MH,"glib_queueautoptr_cleanup_GResolver");
    }
    public static void glib_queueautoptr_cleanup_GResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_queueautoptr_cleanup_GResolver$MH, "glib_queueautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_clear_GResource$MH,"glib_autoptr_clear_GResource");
    }
    public static void glib_autoptr_clear_GResource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_autoptr_clear_GResource$MH, "glib_autoptr_clear_GResource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GResource$MH,"glib_autoptr_cleanup_GResource");
    }
    public static void glib_autoptr_cleanup_GResource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GResource$MH, "glib_autoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GResource$MH,"glib_listautoptr_cleanup_GResource");
    }
    public static void glib_listautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GResource$MH, "glib_listautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_slistautoptr_cleanup_GResource$MH,"glib_slistautoptr_cleanup_GResource");
    }
    public static void glib_slistautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_slistautoptr_cleanup_GResource$MH, "glib_slistautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_queueautoptr_cleanup_GResource$MH,"glib_queueautoptr_cleanup_GResource");
    }
    public static void glib_queueautoptr_cleanup_GResource ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_queueautoptr_cleanup_GResource$MH, "glib_queueautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSeekable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_autoptr_clear_GSeekable$MH,"glib_autoptr_clear_GSeekable");
    }
    public static void glib_autoptr_clear_GSeekable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_autoptr_clear_GSeekable$MH, "glib_autoptr_clear_GSeekable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_autoptr_cleanup_GSeekable$MH,"glib_autoptr_cleanup_GSeekable");
    }
    public static void glib_autoptr_cleanup_GSeekable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_autoptr_cleanup_GSeekable$MH, "glib_autoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GSeekable$MH,"glib_listautoptr_cleanup_GSeekable");
    }
    public static void glib_listautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GSeekable$MH, "glib_listautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GSeekable$MH,"glib_slistautoptr_cleanup_GSeekable");
    }
    public static void glib_slistautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GSeekable$MH, "glib_slistautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_queueautoptr_cleanup_GSeekable$MH,"glib_queueautoptr_cleanup_GSeekable");
    }
    public static void glib_queueautoptr_cleanup_GSeekable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_queueautoptr_cleanup_GSeekable$MH, "glib_queueautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_autoptr_clear_GSettingsBackend$MH,"glib_autoptr_clear_GSettingsBackend");
    }
    public static void glib_autoptr_clear_GSettingsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_autoptr_clear_GSettingsBackend$MH, "glib_autoptr_clear_GSettingsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_autoptr_cleanup_GSettingsBackend$MH,"glib_autoptr_cleanup_GSettingsBackend");
    }
    public static void glib_autoptr_cleanup_GSettingsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_autoptr_cleanup_GSettingsBackend$MH, "glib_autoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_listautoptr_cleanup_GSettingsBackend$MH,"glib_listautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_listautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_listautoptr_cleanup_GSettingsBackend$MH, "glib_listautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GSettingsBackend$MH,"glib_slistautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_slistautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GSettingsBackend$MH, "glib_slistautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GSettingsBackend$MH,"glib_queueautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_queueautoptr_cleanup_GSettingsBackend ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GSettingsBackend$MH, "glib_queueautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchema_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_clear_GSettingsSchema$MH,"glib_autoptr_clear_GSettingsSchema");
    }
    public static void glib_autoptr_clear_GSettingsSchema ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_autoptr_clear_GSettingsSchema$MH, "glib_autoptr_clear_GSettingsSchema");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_cleanup_GSettingsSchema$MH,"glib_autoptr_cleanup_GSettingsSchema");
    }
    public static void glib_autoptr_cleanup_GSettingsSchema ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_autoptr_cleanup_GSettingsSchema$MH, "glib_autoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_listautoptr_cleanup_GSettingsSchema$MH,"glib_listautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_listautoptr_cleanup_GSettingsSchema$MH, "glib_listautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_slistautoptr_cleanup_GSettingsSchema$MH,"glib_slistautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_slistautoptr_cleanup_GSettingsSchema$MH, "glib_slistautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GSettingsSchema$MH,"glib_queueautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchema ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GSettingsSchema$MH, "glib_queueautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaKey_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GSettingsSchemaKey$MH,"glib_autoptr_clear_GSettingsSchemaKey");
    }
    public static void glib_autoptr_clear_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GSettingsSchemaKey$MH, "glib_autoptr_clear_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_cleanup_GSettingsSchemaKey$MH,"glib_autoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_autoptr_cleanup_GSettingsSchemaKey$MH, "glib_autoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_listautoptr_cleanup_GSettingsSchemaKey$MH,"glib_listautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_listautoptr_cleanup_GSettingsSchemaKey$MH, "glib_listautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_slistautoptr_cleanup_GSettingsSchemaKey$MH,"glib_slistautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_slistautoptr_cleanup_GSettingsSchemaKey$MH, "glib_slistautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_queueautoptr_cleanup_GSettingsSchemaKey$MH,"glib_queueautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaKey ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_queueautoptr_cleanup_GSettingsSchemaKey$MH, "glib_queueautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GSettingsSchemaSource$MH,"glib_autoptr_clear_GSettingsSchemaSource");
    }
    public static void glib_autoptr_clear_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GSettingsSchemaSource$MH, "glib_autoptr_clear_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GSettingsSchemaSource$MH,"glib_autoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GSettingsSchemaSource$MH, "glib_autoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_listautoptr_cleanup_GSettingsSchemaSource$MH,"glib_listautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_listautoptr_cleanup_GSettingsSchemaSource$MH, "glib_listautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_slistautoptr_cleanup_GSettingsSchemaSource$MH,"glib_slistautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_slistautoptr_cleanup_GSettingsSchemaSource$MH, "glib_slistautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_queueautoptr_cleanup_GSettingsSchemaSource$MH,"glib_queueautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaSource ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_queueautoptr_cleanup_GSettingsSchemaSource$MH, "glib_queueautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_clear_GSettings$MH,"glib_autoptr_clear_GSettings");
    }
    public static void glib_autoptr_clear_GSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_autoptr_clear_GSettings$MH, "glib_autoptr_clear_GSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GSettings$MH,"glib_autoptr_cleanup_GSettings");
    }
    public static void glib_autoptr_cleanup_GSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GSettings$MH, "glib_autoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GSettings$MH,"glib_listautoptr_cleanup_GSettings");
    }
    public static void glib_listautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GSettings$MH, "glib_listautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_slistautoptr_cleanup_GSettings$MH,"glib_slistautoptr_cleanup_GSettings");
    }
    public static void glib_slistautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_slistautoptr_cleanup_GSettings$MH, "glib_slistautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_queueautoptr_cleanup_GSettings$MH,"glib_queueautoptr_cleanup_GSettings");
    }
    public static void glib_queueautoptr_cleanup_GSettings ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_queueautoptr_cleanup_GSettings$MH, "glib_queueautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_autoptr_clear_GSimpleActionGroup$MH,"glib_autoptr_clear_GSimpleActionGroup");
    }
    public static void glib_autoptr_clear_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_autoptr_clear_GSimpleActionGroup$MH, "glib_autoptr_clear_GSimpleActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_autoptr_cleanup_GSimpleActionGroup$MH,"glib_autoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_autoptr_cleanup_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_autoptr_cleanup_GSimpleActionGroup$MH, "glib_autoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GSimpleActionGroup$MH,"glib_listautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_listautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GSimpleActionGroup$MH, "glib_listautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GSimpleActionGroup$MH,"glib_slistautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GSimpleActionGroup$MH, "glib_slistautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_queueautoptr_cleanup_GSimpleActionGroup$MH,"glib_queueautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GSimpleActionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_queueautoptr_cleanup_GSimpleActionGroup$MH, "glib_queueautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_autoptr_clear_GSimpleAction$MH,"glib_autoptr_clear_GSimpleAction");
    }
    public static void glib_autoptr_clear_GSimpleAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_autoptr_clear_GSimpleAction$MH, "glib_autoptr_clear_GSimpleAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_autoptr_cleanup_GSimpleAction$MH,"glib_autoptr_cleanup_GSimpleAction");
    }
    public static void glib_autoptr_cleanup_GSimpleAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_autoptr_cleanup_GSimpleAction$MH, "glib_autoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_listautoptr_cleanup_GSimpleAction$MH,"glib_listautoptr_cleanup_GSimpleAction");
    }
    public static void glib_listautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_listautoptr_cleanup_GSimpleAction$MH, "glib_listautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GSimpleAction$MH,"glib_slistautoptr_cleanup_GSimpleAction");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GSimpleAction$MH, "glib_slistautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GSimpleAction$MH,"glib_queueautoptr_cleanup_GSimpleAction");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GSimpleAction$MH, "glib_queueautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAsyncResult_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_clear_GSimpleAsyncResult$MH,"glib_autoptr_clear_GSimpleAsyncResult");
    }
    public static void glib_autoptr_clear_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_autoptr_clear_GSimpleAsyncResult$MH, "glib_autoptr_clear_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_cleanup_GSimpleAsyncResult$MH,"glib_autoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_autoptr_cleanup_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_autoptr_cleanup_GSimpleAsyncResult$MH, "glib_autoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_listautoptr_cleanup_GSimpleAsyncResult$MH,"glib_listautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_listautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_listautoptr_cleanup_GSimpleAsyncResult$MH, "glib_listautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_slistautoptr_cleanup_GSimpleAsyncResult$MH,"glib_slistautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_slistautoptr_cleanup_GSimpleAsyncResult$MH, "glib_slistautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GSimpleAsyncResult$MH,"glib_queueautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAsyncResult ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GSimpleAsyncResult$MH, "glib_queueautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimplePermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GSimplePermission$MH,"glib_autoptr_clear_GSimplePermission");
    }
    public static void glib_autoptr_clear_GSimplePermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GSimplePermission$MH, "glib_autoptr_clear_GSimplePermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_cleanup_GSimplePermission$MH,"glib_autoptr_cleanup_GSimplePermission");
    }
    public static void glib_autoptr_cleanup_GSimplePermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_autoptr_cleanup_GSimplePermission$MH, "glib_autoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_listautoptr_cleanup_GSimplePermission$MH,"glib_listautoptr_cleanup_GSimplePermission");
    }
    public static void glib_listautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_listautoptr_cleanup_GSimplePermission$MH, "glib_listautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_slistautoptr_cleanup_GSimplePermission$MH,"glib_slistautoptr_cleanup_GSimplePermission");
    }
    public static void glib_slistautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_slistautoptr_cleanup_GSimplePermission$MH, "glib_slistautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_queueautoptr_cleanup_GSimplePermission$MH,"glib_queueautoptr_cleanup_GSimplePermission");
    }
    public static void glib_queueautoptr_cleanup_GSimplePermission ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_queueautoptr_cleanup_GSimplePermission$MH, "glib_queueautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GSimpleProxyResolver$MH,"glib_autoptr_clear_GSimpleProxyResolver");
    }
    public static void glib_autoptr_clear_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GSimpleProxyResolver$MH, "glib_autoptr_clear_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GSimpleProxyResolver$MH,"glib_autoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_autoptr_cleanup_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GSimpleProxyResolver$MH, "glib_autoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_listautoptr_cleanup_GSimpleProxyResolver$MH,"glib_listautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_listautoptr_cleanup_GSimpleProxyResolver$MH, "glib_listautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_slistautoptr_cleanup_GSimpleProxyResolver$MH,"glib_slistautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_slistautoptr_cleanup_GSimpleProxyResolver$MH, "glib_slistautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_queueautoptr_cleanup_GSimpleProxyResolver$MH,"glib_queueautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GSimpleProxyResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_queueautoptr_cleanup_GSimpleProxyResolver$MH, "glib_queueautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_clear_GSocketAddressEnumerator$MH,"glib_autoptr_clear_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_clear_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_autoptr_clear_GSocketAddressEnumerator$MH, "glib_autoptr_clear_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GSocketAddressEnumerator$MH,"glib_autoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GSocketAddressEnumerator$MH, "glib_autoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_listautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_listautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_slistautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_slistautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_queueautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddressEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_queueautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_autoptr_clear_GSocketAddress$MH,"glib_autoptr_clear_GSocketAddress");
    }
    public static void glib_autoptr_clear_GSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_autoptr_clear_GSocketAddress$MH, "glib_autoptr_clear_GSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_autoptr_cleanup_GSocketAddress$MH,"glib_autoptr_cleanup_GSocketAddress");
    }
    public static void glib_autoptr_cleanup_GSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_autoptr_cleanup_GSocketAddress$MH, "glib_autoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GSocketAddress$MH,"glib_listautoptr_cleanup_GSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GSocketAddress$MH, "glib_listautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GSocketAddress$MH,"glib_slistautoptr_cleanup_GSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GSocketAddress$MH, "glib_slistautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_queueautoptr_cleanup_GSocketAddress$MH,"glib_queueautoptr_cleanup_GSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_queueautoptr_cleanup_GSocketAddress$MH, "glib_queueautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_autoptr_clear_GSocketClient$MH,"glib_autoptr_clear_GSocketClient");
    }
    public static void glib_autoptr_clear_GSocketClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_autoptr_clear_GSocketClient$MH, "glib_autoptr_clear_GSocketClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_autoptr_cleanup_GSocketClient$MH,"glib_autoptr_cleanup_GSocketClient");
    }
    public static void glib_autoptr_cleanup_GSocketClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_autoptr_cleanup_GSocketClient$MH, "glib_autoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_listautoptr_cleanup_GSocketClient$MH,"glib_listautoptr_cleanup_GSocketClient");
    }
    public static void glib_listautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_listautoptr_cleanup_GSocketClient$MH, "glib_listautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GSocketClient$MH,"glib_slistautoptr_cleanup_GSocketClient");
    }
    public static void glib_slistautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GSocketClient$MH, "glib_slistautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GSocketClient$MH,"glib_queueautoptr_cleanup_GSocketClient");
    }
    public static void glib_queueautoptr_cleanup_GSocketClient ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GSocketClient$MH, "glib_queueautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnectable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_clear_GSocketConnectable$MH,"glib_autoptr_clear_GSocketConnectable");
    }
    public static void glib_autoptr_clear_GSocketConnectable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_autoptr_clear_GSocketConnectable$MH, "glib_autoptr_clear_GSocketConnectable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_cleanup_GSocketConnectable$MH,"glib_autoptr_cleanup_GSocketConnectable");
    }
    public static void glib_autoptr_cleanup_GSocketConnectable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_autoptr_cleanup_GSocketConnectable$MH, "glib_autoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_listautoptr_cleanup_GSocketConnectable$MH,"glib_listautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_listautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_listautoptr_cleanup_GSocketConnectable$MH, "glib_listautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_slistautoptr_cleanup_GSocketConnectable$MH,"glib_slistautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_slistautoptr_cleanup_GSocketConnectable$MH, "glib_slistautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GSocketConnectable$MH,"glib_queueautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnectable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GSocketConnectable$MH, "glib_queueautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GSocketConnection$MH,"glib_autoptr_clear_GSocketConnection");
    }
    public static void glib_autoptr_clear_GSocketConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GSocketConnection$MH, "glib_autoptr_clear_GSocketConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_cleanup_GSocketConnection$MH,"glib_autoptr_cleanup_GSocketConnection");
    }
    public static void glib_autoptr_cleanup_GSocketConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_autoptr_cleanup_GSocketConnection$MH, "glib_autoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_listautoptr_cleanup_GSocketConnection$MH,"glib_listautoptr_cleanup_GSocketConnection");
    }
    public static void glib_listautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_listautoptr_cleanup_GSocketConnection$MH, "glib_listautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_slistautoptr_cleanup_GSocketConnection$MH,"glib_slistautoptr_cleanup_GSocketConnection");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_slistautoptr_cleanup_GSocketConnection$MH, "glib_slistautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_queueautoptr_cleanup_GSocketConnection$MH,"glib_queueautoptr_cleanup_GSocketConnection");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_queueautoptr_cleanup_GSocketConnection$MH, "glib_queueautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketControlMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GSocketControlMessage$MH,"glib_autoptr_clear_GSocketControlMessage");
    }
    public static void glib_autoptr_clear_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GSocketControlMessage$MH, "glib_autoptr_clear_GSocketControlMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GSocketControlMessage$MH,"glib_autoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_autoptr_cleanup_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GSocketControlMessage$MH, "glib_autoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_listautoptr_cleanup_GSocketControlMessage$MH,"glib_listautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_listautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_listautoptr_cleanup_GSocketControlMessage$MH, "glib_listautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_slistautoptr_cleanup_GSocketControlMessage$MH,"glib_slistautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_slistautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_slistautoptr_cleanup_GSocketControlMessage$MH, "glib_slistautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_queueautoptr_cleanup_GSocketControlMessage$MH,"glib_queueautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_queueautoptr_cleanup_GSocketControlMessage ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_queueautoptr_cleanup_GSocketControlMessage$MH, "glib_queueautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocket_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_clear_GSocket$MH,"glib_autoptr_clear_GSocket");
    }
    public static void glib_autoptr_clear_GSocket ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_autoptr_clear_GSocket$MH, "glib_autoptr_clear_GSocket");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GSocket$MH,"glib_autoptr_cleanup_GSocket");
    }
    public static void glib_autoptr_cleanup_GSocket ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GSocket$MH, "glib_autoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GSocket$MH,"glib_listautoptr_cleanup_GSocket");
    }
    public static void glib_listautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GSocket$MH, "glib_listautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_slistautoptr_cleanup_GSocket$MH,"glib_slistautoptr_cleanup_GSocket");
    }
    public static void glib_slistautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_slistautoptr_cleanup_GSocket$MH, "glib_slistautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_queueautoptr_cleanup_GSocket$MH,"glib_queueautoptr_cleanup_GSocket");
    }
    public static void glib_queueautoptr_cleanup_GSocket ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_queueautoptr_cleanup_GSocket$MH, "glib_queueautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketListener_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_autoptr_clear_GSocketListener$MH,"glib_autoptr_clear_GSocketListener");
    }
    public static void glib_autoptr_clear_GSocketListener ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_autoptr_clear_GSocketListener$MH, "glib_autoptr_clear_GSocketListener");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_autoptr_cleanup_GSocketListener$MH,"glib_autoptr_cleanup_GSocketListener");
    }
    public static void glib_autoptr_cleanup_GSocketListener ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_autoptr_cleanup_GSocketListener$MH, "glib_autoptr_cleanup_GSocketListener");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GSocketListener$MH,"glib_listautoptr_cleanup_GSocketListener");
    }
    public static void glib_listautoptr_cleanup_GSocketListener ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GSocketListener$MH, "glib_listautoptr_cleanup_GSocketListener");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GSocketListener$MH,"glib_slistautoptr_cleanup_GSocketListener");
    }
    public static void glib_slistautoptr_cleanup_GSocketListener ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GSocketListener$MH, "glib_slistautoptr_cleanup_GSocketListener");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_queueautoptr_cleanup_GSocketListener$MH,"glib_queueautoptr_cleanup_GSocketListener");
    }
    public static void glib_queueautoptr_cleanup_GSocketListener ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_queueautoptr_cleanup_GSocketListener$MH, "glib_queueautoptr_cleanup_GSocketListener");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_autoptr_clear_GSocketService$MH,"glib_autoptr_clear_GSocketService");
    }
    public static void glib_autoptr_clear_GSocketService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_autoptr_clear_GSocketService$MH, "glib_autoptr_clear_GSocketService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_autoptr_cleanup_GSocketService$MH,"glib_autoptr_cleanup_GSocketService");
    }
    public static void glib_autoptr_cleanup_GSocketService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_autoptr_cleanup_GSocketService$MH, "glib_autoptr_cleanup_GSocketService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_listautoptr_cleanup_GSocketService$MH,"glib_listautoptr_cleanup_GSocketService");
    }
    public static void glib_listautoptr_cleanup_GSocketService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_listautoptr_cleanup_GSocketService$MH, "glib_listautoptr_cleanup_GSocketService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GSocketService$MH,"glib_slistautoptr_cleanup_GSocketService");
    }
    public static void glib_slistautoptr_cleanup_GSocketService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GSocketService$MH, "glib_slistautoptr_cleanup_GSocketService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GSocketService$MH,"glib_queueautoptr_cleanup_GSocketService");
    }
    public static void glib_queueautoptr_cleanup_GSocketService ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GSocketService$MH, "glib_queueautoptr_cleanup_GSocketService");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSubprocess_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_clear_GSubprocess$MH,"glib_autoptr_clear_GSubprocess");
    }
    public static void glib_autoptr_clear_GSubprocess ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_autoptr_clear_GSubprocess$MH, "glib_autoptr_clear_GSubprocess");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_cleanup_GSubprocess$MH,"glib_autoptr_cleanup_GSubprocess");
    }
    public static void glib_autoptr_cleanup_GSubprocess ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_autoptr_cleanup_GSubprocess$MH, "glib_autoptr_cleanup_GSubprocess");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_listautoptr_cleanup_GSubprocess$MH,"glib_listautoptr_cleanup_GSubprocess");
    }
    public static void glib_listautoptr_cleanup_GSubprocess ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_listautoptr_cleanup_GSubprocess$MH, "glib_listautoptr_cleanup_GSubprocess");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_slistautoptr_cleanup_GSubprocess$MH,"glib_slistautoptr_cleanup_GSubprocess");
    }
    public static void glib_slistautoptr_cleanup_GSubprocess ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_slistautoptr_cleanup_GSubprocess$MH, "glib_slistautoptr_cleanup_GSubprocess");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GSubprocess$MH,"glib_queueautoptr_cleanup_GSubprocess");
    }
    public static void glib_queueautoptr_cleanup_GSubprocess ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GSubprocess$MH, "glib_queueautoptr_cleanup_GSubprocess");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSubprocessLauncher_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GSubprocessLauncher$MH,"glib_autoptr_clear_GSubprocessLauncher");
    }
    public static void glib_autoptr_clear_GSubprocessLauncher ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GSubprocessLauncher$MH, "glib_autoptr_clear_GSubprocessLauncher");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_cleanup_GSubprocessLauncher$MH,"glib_autoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_autoptr_cleanup_GSubprocessLauncher ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_autoptr_cleanup_GSubprocessLauncher$MH, "glib_autoptr_cleanup_GSubprocessLauncher");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_listautoptr_cleanup_GSubprocessLauncher$MH,"glib_listautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_listautoptr_cleanup_GSubprocessLauncher ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_listautoptr_cleanup_GSubprocessLauncher$MH, "glib_listautoptr_cleanup_GSubprocessLauncher");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_slistautoptr_cleanup_GSubprocessLauncher$MH,"glib_slistautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_slistautoptr_cleanup_GSubprocessLauncher ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_slistautoptr_cleanup_GSubprocessLauncher$MH, "glib_slistautoptr_cleanup_GSubprocessLauncher");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_queueautoptr_cleanup_GSubprocessLauncher$MH,"glib_queueautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_queueautoptr_cleanup_GSubprocessLauncher ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_queueautoptr_cleanup_GSubprocessLauncher$MH, "glib_queueautoptr_cleanup_GSubprocessLauncher");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTask_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GTask$MH,"glib_autoptr_clear_GTask");
    }
    public static void glib_autoptr_clear_GTask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GTask$MH, "glib_autoptr_clear_GTask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GTask$MH,"glib_autoptr_cleanup_GTask");
    }
    public static void glib_autoptr_cleanup_GTask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GTask$MH, "glib_autoptr_cleanup_GTask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_listautoptr_cleanup_GTask$MH,"glib_listautoptr_cleanup_GTask");
    }
    public static void glib_listautoptr_cleanup_GTask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_listautoptr_cleanup_GTask$MH, "glib_listautoptr_cleanup_GTask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_slistautoptr_cleanup_GTask$MH,"glib_slistautoptr_cleanup_GTask");
    }
    public static void glib_slistautoptr_cleanup_GTask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_slistautoptr_cleanup_GTask$MH, "glib_slistautoptr_cleanup_GTask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_queueautoptr_cleanup_GTask$MH,"glib_queueautoptr_cleanup_GTask");
    }
    public static void glib_queueautoptr_cleanup_GTask ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_queueautoptr_cleanup_GTask$MH, "glib_queueautoptr_cleanup_GTask");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTcpConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_clear_GTcpConnection$MH,"glib_autoptr_clear_GTcpConnection");
    }
    public static void glib_autoptr_clear_GTcpConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_autoptr_clear_GTcpConnection$MH, "glib_autoptr_clear_GTcpConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GTcpConnection$MH,"glib_autoptr_cleanup_GTcpConnection");
    }
    public static void glib_autoptr_cleanup_GTcpConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GTcpConnection$MH, "glib_autoptr_cleanup_GTcpConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GTcpConnection$MH,"glib_listautoptr_cleanup_GTcpConnection");
    }
    public static void glib_listautoptr_cleanup_GTcpConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GTcpConnection$MH, "glib_listautoptr_cleanup_GTcpConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_slistautoptr_cleanup_GTcpConnection$MH,"glib_slistautoptr_cleanup_GTcpConnection");
    }
    public static void glib_slistautoptr_cleanup_GTcpConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_slistautoptr_cleanup_GTcpConnection$MH, "glib_slistautoptr_cleanup_GTcpConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_queueautoptr_cleanup_GTcpConnection$MH,"glib_queueautoptr_cleanup_GTcpConnection");
    }
    public static void glib_queueautoptr_cleanup_GTcpConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_queueautoptr_cleanup_GTcpConnection$MH, "glib_queueautoptr_cleanup_GTcpConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTcpWrapperConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_autoptr_clear_GTcpWrapperConnection$MH,"glib_autoptr_clear_GTcpWrapperConnection");
    }
    public static void glib_autoptr_clear_GTcpWrapperConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_autoptr_clear_GTcpWrapperConnection$MH, "glib_autoptr_clear_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_autoptr_cleanup_GTcpWrapperConnection$MH,"glib_autoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_autoptr_cleanup_GTcpWrapperConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_autoptr_cleanup_GTcpWrapperConnection$MH, "glib_autoptr_cleanup_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GTcpWrapperConnection$MH,"glib_listautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_listautoptr_cleanup_GTcpWrapperConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GTcpWrapperConnection$MH, "glib_listautoptr_cleanup_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GTcpWrapperConnection$MH,"glib_slistautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_slistautoptr_cleanup_GTcpWrapperConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GTcpWrapperConnection$MH, "glib_slistautoptr_cleanup_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_queueautoptr_cleanup_GTcpWrapperConnection$MH,"glib_queueautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_queueautoptr_cleanup_GTcpWrapperConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_queueautoptr_cleanup_GTcpWrapperConnection$MH, "glib_queueautoptr_cleanup_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTestDBus_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_autoptr_clear_GTestDBus$MH,"glib_autoptr_clear_GTestDBus");
    }
    public static void glib_autoptr_clear_GTestDBus ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_autoptr_clear_GTestDBus$MH, "glib_autoptr_clear_GTestDBus");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_autoptr_cleanup_GTestDBus$MH,"glib_autoptr_cleanup_GTestDBus");
    }
    public static void glib_autoptr_cleanup_GTestDBus ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_autoptr_cleanup_GTestDBus$MH, "glib_autoptr_cleanup_GTestDBus");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_listautoptr_cleanup_GTestDBus$MH,"glib_listautoptr_cleanup_GTestDBus");
    }
    public static void glib_listautoptr_cleanup_GTestDBus ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_listautoptr_cleanup_GTestDBus$MH, "glib_listautoptr_cleanup_GTestDBus");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GTestDBus$MH,"glib_slistautoptr_cleanup_GTestDBus");
    }
    public static void glib_slistautoptr_cleanup_GTestDBus ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GTestDBus$MH, "glib_slistautoptr_cleanup_GTestDBus");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GTestDBus$MH,"glib_queueautoptr_cleanup_GTestDBus");
    }
    public static void glib_queueautoptr_cleanup_GTestDBus ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GTestDBus$MH, "glib_queueautoptr_cleanup_GTestDBus");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_clear_GThemedIcon$MH,"glib_autoptr_clear_GThemedIcon");
    }
    public static void glib_autoptr_clear_GThemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_autoptr_clear_GThemedIcon$MH, "glib_autoptr_clear_GThemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_cleanup_GThemedIcon$MH,"glib_autoptr_cleanup_GThemedIcon");
    }
    public static void glib_autoptr_cleanup_GThemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_autoptr_cleanup_GThemedIcon$MH, "glib_autoptr_cleanup_GThemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_listautoptr_cleanup_GThemedIcon$MH,"glib_listautoptr_cleanup_GThemedIcon");
    }
    public static void glib_listautoptr_cleanup_GThemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_listautoptr_cleanup_GThemedIcon$MH, "glib_listautoptr_cleanup_GThemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_slistautoptr_cleanup_GThemedIcon$MH,"glib_slistautoptr_cleanup_GThemedIcon");
    }
    public static void glib_slistautoptr_cleanup_GThemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_slistautoptr_cleanup_GThemedIcon$MH, "glib_slistautoptr_cleanup_GThemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GThemedIcon$MH,"glib_queueautoptr_cleanup_GThemedIcon");
    }
    public static void glib_queueautoptr_cleanup_GThemedIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GThemedIcon$MH, "glib_queueautoptr_cleanup_GThemedIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThreadedSocketService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GThreadedSocketService$MH,"glib_autoptr_clear_GThreadedSocketService");
    }
    public static void glib_autoptr_clear_GThreadedSocketService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GThreadedSocketService$MH, "glib_autoptr_clear_GThreadedSocketService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_cleanup_GThreadedSocketService$MH,"glib_autoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_autoptr_cleanup_GThreadedSocketService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_autoptr_cleanup_GThreadedSocketService$MH, "glib_autoptr_cleanup_GThreadedSocketService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_listautoptr_cleanup_GThreadedSocketService$MH,"glib_listautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_listautoptr_cleanup_GThreadedSocketService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_listautoptr_cleanup_GThreadedSocketService$MH, "glib_listautoptr_cleanup_GThreadedSocketService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_slistautoptr_cleanup_GThreadedSocketService$MH,"glib_slistautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_slistautoptr_cleanup_GThreadedSocketService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_slistautoptr_cleanup_GThreadedSocketService$MH, "glib_slistautoptr_cleanup_GThreadedSocketService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_queueautoptr_cleanup_GThreadedSocketService$MH,"glib_queueautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_queueautoptr_cleanup_GThreadedSocketService ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_queueautoptr_cleanup_GThreadedSocketService$MH, "glib_queueautoptr_cleanup_GThreadedSocketService");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GTlsBackend$MH,"glib_autoptr_clear_GTlsBackend");
    }
    public static void glib_autoptr_clear_GTlsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GTlsBackend$MH, "glib_autoptr_clear_GTlsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GTlsBackend$MH,"glib_autoptr_cleanup_GTlsBackend");
    }
    public static void glib_autoptr_cleanup_GTlsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GTlsBackend$MH, "glib_autoptr_cleanup_GTlsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_listautoptr_cleanup_GTlsBackend$MH,"glib_listautoptr_cleanup_GTlsBackend");
    }
    public static void glib_listautoptr_cleanup_GTlsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_listautoptr_cleanup_GTlsBackend$MH, "glib_listautoptr_cleanup_GTlsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_slistautoptr_cleanup_GTlsBackend$MH,"glib_slistautoptr_cleanup_GTlsBackend");
    }
    public static void glib_slistautoptr_cleanup_GTlsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_slistautoptr_cleanup_GTlsBackend$MH, "glib_slistautoptr_cleanup_GTlsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_queueautoptr_cleanup_GTlsBackend$MH,"glib_queueautoptr_cleanup_GTlsBackend");
    }
    public static void glib_queueautoptr_cleanup_GTlsBackend ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_queueautoptr_cleanup_GTlsBackend$MH, "glib_queueautoptr_cleanup_GTlsBackend");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsCertificate_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_clear_GTlsCertificate$MH,"glib_autoptr_clear_GTlsCertificate");
    }
    public static void glib_autoptr_clear_GTlsCertificate ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_autoptr_clear_GTlsCertificate$MH, "glib_autoptr_clear_GTlsCertificate");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GTlsCertificate$MH,"glib_autoptr_cleanup_GTlsCertificate");
    }
    public static void glib_autoptr_cleanup_GTlsCertificate ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GTlsCertificate$MH, "glib_autoptr_cleanup_GTlsCertificate");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GTlsCertificate$MH,"glib_listautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_listautoptr_cleanup_GTlsCertificate ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GTlsCertificate$MH, "glib_listautoptr_cleanup_GTlsCertificate");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_slistautoptr_cleanup_GTlsCertificate$MH,"glib_slistautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_slistautoptr_cleanup_GTlsCertificate ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_slistautoptr_cleanup_GTlsCertificate$MH, "glib_slistautoptr_cleanup_GTlsCertificate");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_queueautoptr_cleanup_GTlsCertificate$MH,"glib_queueautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_queueautoptr_cleanup_GTlsCertificate ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_queueautoptr_cleanup_GTlsCertificate$MH, "glib_queueautoptr_cleanup_GTlsCertificate");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsClientConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_autoptr_clear_GTlsClientConnection$MH,"glib_autoptr_clear_GTlsClientConnection");
    }
    public static void glib_autoptr_clear_GTlsClientConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_autoptr_clear_GTlsClientConnection$MH, "glib_autoptr_clear_GTlsClientConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_autoptr_cleanup_GTlsClientConnection$MH,"glib_autoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_autoptr_cleanup_GTlsClientConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_autoptr_cleanup_GTlsClientConnection$MH, "glib_autoptr_cleanup_GTlsClientConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GTlsClientConnection$MH,"glib_listautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsClientConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GTlsClientConnection$MH, "glib_listautoptr_cleanup_GTlsClientConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GTlsClientConnection$MH,"glib_slistautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsClientConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GTlsClientConnection$MH, "glib_slistautoptr_cleanup_GTlsClientConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_queueautoptr_cleanup_GTlsClientConnection$MH,"glib_queueautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsClientConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_queueautoptr_cleanup_GTlsClientConnection$MH, "glib_queueautoptr_cleanup_GTlsClientConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_autoptr_clear_GTlsConnection$MH,"glib_autoptr_clear_GTlsConnection");
    }
    public static void glib_autoptr_clear_GTlsConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_autoptr_clear_GTlsConnection$MH, "glib_autoptr_clear_GTlsConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_autoptr_cleanup_GTlsConnection$MH,"glib_autoptr_cleanup_GTlsConnection");
    }
    public static void glib_autoptr_cleanup_GTlsConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_autoptr_cleanup_GTlsConnection$MH, "glib_autoptr_cleanup_GTlsConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_listautoptr_cleanup_GTlsConnection$MH,"glib_listautoptr_cleanup_GTlsConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_listautoptr_cleanup_GTlsConnection$MH, "glib_listautoptr_cleanup_GTlsConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GTlsConnection$MH,"glib_slistautoptr_cleanup_GTlsConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GTlsConnection$MH, "glib_slistautoptr_cleanup_GTlsConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GTlsConnection$MH,"glib_queueautoptr_cleanup_GTlsConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GTlsConnection$MH, "glib_queueautoptr_cleanup_GTlsConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsDatabase_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_clear_GTlsDatabase$MH,"glib_autoptr_clear_GTlsDatabase");
    }
    public static void glib_autoptr_clear_GTlsDatabase ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_autoptr_clear_GTlsDatabase$MH, "glib_autoptr_clear_GTlsDatabase");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_cleanup_GTlsDatabase$MH,"glib_autoptr_cleanup_GTlsDatabase");
    }
    public static void glib_autoptr_cleanup_GTlsDatabase ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_autoptr_cleanup_GTlsDatabase$MH, "glib_autoptr_cleanup_GTlsDatabase");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_listautoptr_cleanup_GTlsDatabase$MH,"glib_listautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_listautoptr_cleanup_GTlsDatabase ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_listautoptr_cleanup_GTlsDatabase$MH, "glib_listautoptr_cleanup_GTlsDatabase");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_slistautoptr_cleanup_GTlsDatabase$MH,"glib_slistautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_slistautoptr_cleanup_GTlsDatabase ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_slistautoptr_cleanup_GTlsDatabase$MH, "glib_slistautoptr_cleanup_GTlsDatabase");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GTlsDatabase$MH,"glib_queueautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_queueautoptr_cleanup_GTlsDatabase ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GTlsDatabase$MH, "glib_queueautoptr_cleanup_GTlsDatabase");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsFileDatabase_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GTlsFileDatabase$MH,"glib_autoptr_clear_GTlsFileDatabase");
    }
    public static void glib_autoptr_clear_GTlsFileDatabase ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GTlsFileDatabase$MH, "glib_autoptr_clear_GTlsFileDatabase");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_cleanup_GTlsFileDatabase$MH,"glib_autoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_autoptr_cleanup_GTlsFileDatabase ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_autoptr_cleanup_GTlsFileDatabase$MH, "glib_autoptr_cleanup_GTlsFileDatabase");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_listautoptr_cleanup_GTlsFileDatabase$MH,"glib_listautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_listautoptr_cleanup_GTlsFileDatabase ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_listautoptr_cleanup_GTlsFileDatabase$MH, "glib_listautoptr_cleanup_GTlsFileDatabase");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_slistautoptr_cleanup_GTlsFileDatabase$MH,"glib_slistautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_slistautoptr_cleanup_GTlsFileDatabase ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_slistautoptr_cleanup_GTlsFileDatabase$MH, "glib_slistautoptr_cleanup_GTlsFileDatabase");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_queueautoptr_cleanup_GTlsFileDatabase$MH,"glib_queueautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_queueautoptr_cleanup_GTlsFileDatabase ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_queueautoptr_cleanup_GTlsFileDatabase$MH, "glib_queueautoptr_cleanup_GTlsFileDatabase");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsInteraction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GTlsInteraction$MH,"glib_autoptr_clear_GTlsInteraction");
    }
    public static void glib_autoptr_clear_GTlsInteraction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GTlsInteraction$MH, "glib_autoptr_clear_GTlsInteraction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GTlsInteraction$MH,"glib_autoptr_cleanup_GTlsInteraction");
    }
    public static void glib_autoptr_cleanup_GTlsInteraction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GTlsInteraction$MH, "glib_autoptr_cleanup_GTlsInteraction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_listautoptr_cleanup_GTlsInteraction$MH,"glib_listautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_listautoptr_cleanup_GTlsInteraction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_listautoptr_cleanup_GTlsInteraction$MH, "glib_listautoptr_cleanup_GTlsInteraction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_slistautoptr_cleanup_GTlsInteraction$MH,"glib_slistautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_slistautoptr_cleanup_GTlsInteraction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_slistautoptr_cleanup_GTlsInteraction$MH, "glib_slistautoptr_cleanup_GTlsInteraction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_queueautoptr_cleanup_GTlsInteraction$MH,"glib_queueautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_queueautoptr_cleanup_GTlsInteraction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_queueautoptr_cleanup_GTlsInteraction$MH, "glib_queueautoptr_cleanup_GTlsInteraction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsPassword_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_clear_GTlsPassword$MH,"glib_autoptr_clear_GTlsPassword");
    }
    public static void glib_autoptr_clear_GTlsPassword ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_autoptr_clear_GTlsPassword$MH, "glib_autoptr_clear_GTlsPassword");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GTlsPassword$MH,"glib_autoptr_cleanup_GTlsPassword");
    }
    public static void glib_autoptr_cleanup_GTlsPassword ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GTlsPassword$MH, "glib_autoptr_cleanup_GTlsPassword");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GTlsPassword$MH,"glib_listautoptr_cleanup_GTlsPassword");
    }
    public static void glib_listautoptr_cleanup_GTlsPassword ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GTlsPassword$MH, "glib_listautoptr_cleanup_GTlsPassword");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_slistautoptr_cleanup_GTlsPassword$MH,"glib_slistautoptr_cleanup_GTlsPassword");
    }
    public static void glib_slistautoptr_cleanup_GTlsPassword ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_slistautoptr_cleanup_GTlsPassword$MH, "glib_slistautoptr_cleanup_GTlsPassword");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_queueautoptr_cleanup_GTlsPassword$MH,"glib_queueautoptr_cleanup_GTlsPassword");
    }
    public static void glib_queueautoptr_cleanup_GTlsPassword ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_queueautoptr_cleanup_GTlsPassword$MH, "glib_queueautoptr_cleanup_GTlsPassword");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsServerConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_autoptr_clear_GTlsServerConnection$MH,"glib_autoptr_clear_GTlsServerConnection");
    }
    public static void glib_autoptr_clear_GTlsServerConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_autoptr_clear_GTlsServerConnection$MH, "glib_autoptr_clear_GTlsServerConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_autoptr_cleanup_GTlsServerConnection$MH,"glib_autoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_autoptr_cleanup_GTlsServerConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_autoptr_cleanup_GTlsServerConnection$MH, "glib_autoptr_cleanup_GTlsServerConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GTlsServerConnection$MH,"glib_listautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsServerConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GTlsServerConnection$MH, "glib_listautoptr_cleanup_GTlsServerConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GTlsServerConnection$MH,"glib_slistautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsServerConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GTlsServerConnection$MH, "glib_slistautoptr_cleanup_GTlsServerConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_queueautoptr_cleanup_GTlsServerConnection$MH,"glib_queueautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsServerConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_queueautoptr_cleanup_GTlsServerConnection$MH, "glib_queueautoptr_cleanup_GTlsServerConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVfs_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_autoptr_clear_GVfs$MH,"glib_autoptr_clear_GVfs");
    }
    public static void glib_autoptr_clear_GVfs ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_autoptr_clear_GVfs$MH, "glib_autoptr_clear_GVfs");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_autoptr_cleanup_GVfs$MH,"glib_autoptr_cleanup_GVfs");
    }
    public static void glib_autoptr_cleanup_GVfs ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_autoptr_cleanup_GVfs$MH, "glib_autoptr_cleanup_GVfs");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_listautoptr_cleanup_GVfs$MH,"glib_listautoptr_cleanup_GVfs");
    }
    public static void glib_listautoptr_cleanup_GVfs ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_listautoptr_cleanup_GVfs$MH, "glib_listautoptr_cleanup_GVfs");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GVfs$MH,"glib_slistautoptr_cleanup_GVfs");
    }
    public static void glib_slistautoptr_cleanup_GVfs ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GVfs$MH, "glib_slistautoptr_cleanup_GVfs");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GVfs$MH,"glib_queueautoptr_cleanup_GVfs");
    }
    public static void glib_queueautoptr_cleanup_GVfs ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GVfs$MH, "glib_queueautoptr_cleanup_GVfs");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVolume_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_clear_GVolume$MH,"glib_autoptr_clear_GVolume");
    }
    public static void glib_autoptr_clear_GVolume ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_autoptr_clear_GVolume$MH, "glib_autoptr_clear_GVolume");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_cleanup_GVolume$MH,"glib_autoptr_cleanup_GVolume");
    }
    public static void glib_autoptr_cleanup_GVolume ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_autoptr_cleanup_GVolume$MH, "glib_autoptr_cleanup_GVolume");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_listautoptr_cleanup_GVolume$MH,"glib_listautoptr_cleanup_GVolume");
    }
    public static void glib_listautoptr_cleanup_GVolume ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_listautoptr_cleanup_GVolume$MH, "glib_listautoptr_cleanup_GVolume");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_slistautoptr_cleanup_GVolume$MH,"glib_slistautoptr_cleanup_GVolume");
    }
    public static void glib_slistautoptr_cleanup_GVolume ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_slistautoptr_cleanup_GVolume$MH, "glib_slistautoptr_cleanup_GVolume");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GVolume$MH,"glib_queueautoptr_cleanup_GVolume");
    }
    public static void glib_queueautoptr_cleanup_GVolume ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GVolume$MH, "glib_queueautoptr_cleanup_GVolume");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GVolumeMonitor$MH,"glib_autoptr_clear_GVolumeMonitor");
    }
    public static void glib_autoptr_clear_GVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GVolumeMonitor$MH, "glib_autoptr_clear_GVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_cleanup_GVolumeMonitor$MH,"glib_autoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_autoptr_cleanup_GVolumeMonitor$MH, "glib_autoptr_cleanup_GVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_listautoptr_cleanup_GVolumeMonitor$MH,"glib_listautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_listautoptr_cleanup_GVolumeMonitor$MH, "glib_listautoptr_cleanup_GVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_slistautoptr_cleanup_GVolumeMonitor$MH,"glib_slistautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_slistautoptr_cleanup_GVolumeMonitor$MH, "glib_slistautoptr_cleanup_GVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_queueautoptr_cleanup_GVolumeMonitor$MH,"glib_queueautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GVolumeMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_queueautoptr_cleanup_GVolumeMonitor$MH, "glib_queueautoptr_cleanup_GVolumeMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GZlibCompressor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GZlibCompressor$MH,"glib_autoptr_clear_GZlibCompressor");
    }
    public static void glib_autoptr_clear_GZlibCompressor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GZlibCompressor$MH, "glib_autoptr_clear_GZlibCompressor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GZlibCompressor$MH,"glib_autoptr_cleanup_GZlibCompressor");
    }
    public static void glib_autoptr_cleanup_GZlibCompressor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GZlibCompressor$MH, "glib_autoptr_cleanup_GZlibCompressor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_listautoptr_cleanup_GZlibCompressor$MH,"glib_listautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_listautoptr_cleanup_GZlibCompressor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_listautoptr_cleanup_GZlibCompressor$MH, "glib_listautoptr_cleanup_GZlibCompressor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_slistautoptr_cleanup_GZlibCompressor$MH,"glib_slistautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_slistautoptr_cleanup_GZlibCompressor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_slistautoptr_cleanup_GZlibCompressor$MH, "glib_slistautoptr_cleanup_GZlibCompressor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_queueautoptr_cleanup_GZlibCompressor$MH,"glib_queueautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_queueautoptr_cleanup_GZlibCompressor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_queueautoptr_cleanup_GZlibCompressor$MH, "glib_queueautoptr_cleanup_GZlibCompressor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GZlibDecompressor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_clear_GZlibDecompressor$MH,"glib_autoptr_clear_GZlibDecompressor");
    }
    public static void glib_autoptr_clear_GZlibDecompressor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_autoptr_clear_GZlibDecompressor$MH, "glib_autoptr_clear_GZlibDecompressor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GZlibDecompressor$MH,"glib_autoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_autoptr_cleanup_GZlibDecompressor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GZlibDecompressor$MH, "glib_autoptr_cleanup_GZlibDecompressor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_listautoptr_cleanup_GZlibDecompressor$MH,"glib_listautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_listautoptr_cleanup_GZlibDecompressor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_listautoptr_cleanup_GZlibDecompressor$MH, "glib_listautoptr_cleanup_GZlibDecompressor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_slistautoptr_cleanup_GZlibDecompressor$MH,"glib_slistautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_slistautoptr_cleanup_GZlibDecompressor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_slistautoptr_cleanup_GZlibDecompressor$MH, "glib_slistautoptr_cleanup_GZlibDecompressor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_queueautoptr_cleanup_GZlibDecompressor$MH,"glib_queueautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_queueautoptr_cleanup_GZlibDecompressor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_queueautoptr_cleanup_GZlibDecompressor$MH, "glib_queueautoptr_cleanup_GZlibDecompressor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfShort int_least16_t = Constants$root.C_SHORT$LAYOUT;
    public static OfInt int_least32_t = Constants$root.C_INT$LAYOUT;
    public static OfLong int_least64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast16_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast32_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong intmax_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt hb_bool_t = Constants$root.C_INT$LAYOUT;
    public static OfInt hb_position_t = Constants$root.C_INT$LAYOUT;
    public static MethodHandle hb_tag_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$970.hb_tag_from_string$MH,"hb_tag_from_string");
    }
    public static int hb_tag_from_string ( Addressable str,  int len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.hb_tag_from_string$MH, "hb_tag_from_string");
        try {
            return (int)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_tag_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$970.hb_tag_to_string$MH,"hb_tag_to_string");
    }
    public static void hb_tag_to_string ( int tag,  Addressable buf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.hb_tag_to_string$MH, "hb_tag_to_string");
        try {
            mh$.invokeExact(tag, buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int HB_DIRECTION_INVALID() {
        return (int)0L;
    }
    public static int HB_DIRECTION_LTR() {
        return (int)4L;
    }
    public static int HB_DIRECTION_RTL() {
        return (int)5L;
    }
    public static int HB_DIRECTION_TTB() {
        return (int)6L;
    }
    public static int HB_DIRECTION_BTT() {
        return (int)7L;
    }
    public static MethodHandle hb_direction_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$970.hb_direction_from_string$MH,"hb_direction_from_string");
    }
    public static int hb_direction_from_string ( Addressable str,  int len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.hb_direction_from_string$MH, "hb_direction_from_string");
        try {
            return (int)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_direction_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$971.hb_direction_to_string$MH,"hb_direction_to_string");
    }
    public static MemoryAddress hb_direction_to_string ( int direction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.hb_direction_to_string$MH, "hb_direction_to_string");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress hb_language_t = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle hb_language_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$971.hb_language_from_string$MH,"hb_language_from_string");
    }
    public static MemoryAddress hb_language_from_string ( Addressable str,  int len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.hb_language_from_string$MH, "hb_language_from_string");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_language_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$971.hb_language_to_string$MH,"hb_language_to_string");
    }
    public static MemoryAddress hb_language_to_string ( Addressable language) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.hb_language_to_string$MH, "hb_language_to_string");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_language_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$971.hb_language_get_default$MH,"hb_language_get_default");
    }
    public static MemoryAddress hb_language_get_default () {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.hb_language_get_default$MH, "hb_language_get_default");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int HB_SCRIPT_COMMON() {
        return (int)1517910393L;
    }
    public static int HB_SCRIPT_INHERITED() {
        return (int)1516858984L;
    }
    public static int HB_SCRIPT_UNKNOWN() {
        return (int)1517976186L;
    }
    public static int HB_SCRIPT_ARABIC() {
        return (int)1098015074L;
    }
    public static int HB_SCRIPT_ARMENIAN() {
        return (int)1098018158L;
    }
    public static int HB_SCRIPT_BENGALI() {
        return (int)1113943655L;
    }
    public static int HB_SCRIPT_CYRILLIC() {
        return (int)1132032620L;
    }
    public static int HB_SCRIPT_DEVANAGARI() {
        return (int)1147500129L;
    }
    public static int HB_SCRIPT_GEORGIAN() {
        return (int)1197830002L;
    }
    public static int HB_SCRIPT_GREEK() {
        return (int)1198679403L;
    }
    public static int HB_SCRIPT_GUJARATI() {
        return (int)1198877298L;
    }
    public static int HB_SCRIPT_GURMUKHI() {
        return (int)1198879349L;
    }
    public static int HB_SCRIPT_HANGUL() {
        return (int)1214344807L;
    }
    public static int HB_SCRIPT_HAN() {
        return (int)1214344809L;
    }
    public static int HB_SCRIPT_HEBREW() {
        return (int)1214603890L;
    }
    public static int HB_SCRIPT_HIRAGANA() {
        return (int)1214870113L;
    }
    public static int HB_SCRIPT_KANNADA() {
        return (int)1265525857L;
    }
    public static int HB_SCRIPT_KATAKANA() {
        return (int)1264676449L;
    }
    public static int HB_SCRIPT_LAO() {
        return (int)1281453935L;
    }
    public static int HB_SCRIPT_LATIN() {
        return (int)1281455214L;
    }
    public static int HB_SCRIPT_MALAYALAM() {
        return (int)1298954605L;
    }
    public static int HB_SCRIPT_ORIYA() {
        return (int)1332902241L;
    }
    public static int HB_SCRIPT_TAMIL() {
        return (int)1415671148L;
    }
    public static int HB_SCRIPT_TELUGU() {
        return (int)1415933045L;
    }
    public static int HB_SCRIPT_THAI() {
        return (int)1416126825L;
    }
    public static int HB_SCRIPT_TIBETAN() {
        return (int)1416192628L;
    }
    public static int HB_SCRIPT_BOPOMOFO() {
        return (int)1114599535L;
    }
    public static int HB_SCRIPT_BRAILLE() {
        return (int)1114792297L;
    }
    public static int HB_SCRIPT_CANADIAN_SYLLABICS() {
        return (int)1130458739L;
    }
    public static int HB_SCRIPT_CHEROKEE() {
        return (int)1130915186L;
    }
    public static int HB_SCRIPT_ETHIOPIC() {
        return (int)1165256809L;
    }
    public static int HB_SCRIPT_KHMER() {
        return (int)1265134962L;
    }
    public static int HB_SCRIPT_MONGOLIAN() {
        return (int)1299148391L;
    }
    public static int HB_SCRIPT_MYANMAR() {
        return (int)1299803506L;
    }
    public static int HB_SCRIPT_OGHAM() {
        return (int)1332175213L;
    }
    public static int HB_SCRIPT_RUNIC() {
        return (int)1383427698L;
    }
    public static int HB_SCRIPT_SINHALA() {
        return (int)1399418472L;
    }
    public static int HB_SCRIPT_SYRIAC() {
        return (int)1400468067L;
    }
    public static int HB_SCRIPT_THAANA() {
        return (int)1416126817L;
    }
    public static int HB_SCRIPT_YI() {
        return (int)1500080489L;
    }
    public static int HB_SCRIPT_DESERET() {
        return (int)1148416628L;
    }
    public static int HB_SCRIPT_GOTHIC() {
        return (int)1198486632L;
    }
    public static int HB_SCRIPT_OLD_ITALIC() {
        return (int)1232363884L;
    }
    public static int HB_SCRIPT_BUHID() {
        return (int)1114990692L;
    }
    public static int HB_SCRIPT_HANUNOO() {
        return (int)1214344815L;
    }
    public static int HB_SCRIPT_TAGALOG() {
        return (int)1416064103L;
    }
    public static int HB_SCRIPT_TAGBANWA() {
        return (int)1415669602L;
    }
    public static int HB_SCRIPT_CYPRIOT() {
        return (int)1131442804L;
    }
    public static int HB_SCRIPT_LIMBU() {
        return (int)1281977698L;
    }
    public static int HB_SCRIPT_LINEAR_B() {
        return (int)1281977954L;
    }
    public static int HB_SCRIPT_OSMANYA() {
        return (int)1332964705L;
    }
    public static int HB_SCRIPT_SHAVIAN() {
        return (int)1399349623L;
    }
    public static int HB_SCRIPT_TAI_LE() {
        return (int)1415670885L;
    }
    public static int HB_SCRIPT_UGARITIC() {
        return (int)1432838514L;
    }
    public static int HB_SCRIPT_BUGINESE() {
        return (int)1114990441L;
    }
    public static int HB_SCRIPT_COPTIC() {
        return (int)1131376756L;
    }
    public static int HB_SCRIPT_GLAGOLITIC() {
        return (int)1198285159L;
    }
    public static int HB_SCRIPT_KHAROSHTHI() {
        return (int)1265131890L;
    }
    public static int HB_SCRIPT_NEW_TAI_LUE() {
        return (int)1415670901L;
    }
    public static int HB_SCRIPT_OLD_PERSIAN() {
        return (int)1483761007L;
    }
    public static int HB_SCRIPT_SYLOTI_NAGRI() {
        return (int)1400466543L;
    }
    public static int HB_SCRIPT_TIFINAGH() {
        return (int)1415999079L;
    }
    public static int HB_SCRIPT_BALINESE() {
        return (int)1113681001L;
    }
    public static int HB_SCRIPT_CUNEIFORM() {
        return (int)1483961720L;
    }
    public static int HB_SCRIPT_NKO() {
        return (int)1315663727L;
    }
    public static int HB_SCRIPT_PHAGS_PA() {
        return (int)1349017959L;
    }
    public static int HB_SCRIPT_PHOENICIAN() {
        return (int)1349021304L;
    }
    public static int HB_SCRIPT_CARIAN() {
        return (int)1130459753L;
    }
    public static int HB_SCRIPT_CHAM() {
        return (int)1130914157L;
    }
    public static int HB_SCRIPT_KAYAH_LI() {
        return (int)1264675945L;
    }
    public static int HB_SCRIPT_LEPCHA() {
        return (int)1281716323L;
    }
    public static int HB_SCRIPT_LYCIAN() {
        return (int)1283023721L;
    }
    public static int HB_SCRIPT_LYDIAN() {
        return (int)1283023977L;
    }
    public static int HB_SCRIPT_OL_CHIKI() {
        return (int)1332503403L;
    }
    public static int HB_SCRIPT_REJANG() {
        return (int)1382706791L;
    }
    public static int HB_SCRIPT_SAURASHTRA() {
        return (int)1398895986L;
    }
    public static int HB_SCRIPT_SUNDANESE() {
        return (int)1400204900L;
    }
    public static int HB_SCRIPT_VAI() {
        return (int)1449224553L;
    }
    public static int HB_SCRIPT_AVESTAN() {
        return (int)1098281844L;
    }
    public static int HB_SCRIPT_BAMUM() {
        return (int)1113681269L;
    }
    public static int HB_SCRIPT_EGYPTIAN_HIEROGLYPHS() {
        return (int)1164409200L;
    }
    public static int HB_SCRIPT_IMPERIAL_ARAMAIC() {
        return (int)1098018153L;
    }
    public static int HB_SCRIPT_INSCRIPTIONAL_PAHLAVI() {
        return (int)1349020777L;
    }
    public static int HB_SCRIPT_INSCRIPTIONAL_PARTHIAN() {
        return (int)1349678185L;
    }
    public static int HB_SCRIPT_JAVANESE() {
        return (int)1247901281L;
    }
    public static int HB_SCRIPT_KAITHI() {
        return (int)1265920105L;
    }
    public static int HB_SCRIPT_LISU() {
        return (int)1281979253L;
    }
    public static int HB_SCRIPT_MEETEI_MAYEK() {
        return (int)1299473769L;
    }
    public static int HB_SCRIPT_OLD_SOUTH_ARABIAN() {
        return (int)1398895202L;
    }
    public static int HB_SCRIPT_OLD_TURKIC() {
        return (int)1332898664L;
    }
    public static int HB_SCRIPT_SAMARITAN() {
        return (int)1398893938L;
    }
    public static int HB_SCRIPT_TAI_THAM() {
        return (int)1281453665L;
    }
    public static int HB_SCRIPT_TAI_VIET() {
        return (int)1415673460L;
    }
    public static int HB_SCRIPT_BATAK() {
        return (int)1113683051L;
    }
    public static int HB_SCRIPT_BRAHMI() {
        return (int)1114792296L;
    }
    public static int HB_SCRIPT_MANDAIC() {
        return (int)1298230884L;
    }
    public static int HB_SCRIPT_CHAKMA() {
        return (int)1130457965L;
    }
    public static int HB_SCRIPT_MEROITIC_CURSIVE() {
        return (int)1298494051L;
    }
    public static int HB_SCRIPT_MEROITIC_HIEROGLYPHS() {
        return (int)1298494063L;
    }
    public static int HB_SCRIPT_MIAO() {
        return (int)1349284452L;
    }
    public static int HB_SCRIPT_SHARADA() {
        return (int)1399353956L;
    }
    public static int HB_SCRIPT_SORA_SOMPENG() {
        return (int)1399812705L;
    }
    public static int HB_SCRIPT_TAKRI() {
        return (int)1415670642L;
    }
    public static int HB_SCRIPT_BASSA_VAH() {
        return (int)1113682803L;
    }
    public static int HB_SCRIPT_CAUCASIAN_ALBANIAN() {
        return (int)1097295970L;
    }
    public static int HB_SCRIPT_DUPLOYAN() {
        return (int)1148547180L;
    }
    public static int HB_SCRIPT_ELBASAN() {
        return (int)1164730977L;
    }
    public static int HB_SCRIPT_GRANTHA() {
        return (int)1198678382L;
    }
    public static int HB_SCRIPT_KHOJKI() {
        return (int)1265135466L;
    }
    public static int HB_SCRIPT_KHUDAWADI() {
        return (int)1399418468L;
    }
    public static int HB_SCRIPT_LINEAR_A() {
        return (int)1281977953L;
    }
    public static int HB_SCRIPT_MAHAJANI() {
        return (int)1298229354L;
    }
    public static int HB_SCRIPT_MANICHAEAN() {
        return (int)1298230889L;
    }
    public static int HB_SCRIPT_MENDE_KIKAKUI() {
        return (int)1298493028L;
    }
    public static int HB_SCRIPT_MODI() {
        return (int)1299145833L;
    }
    public static int HB_SCRIPT_MRO() {
        return (int)1299345263L;
    }
    public static int HB_SCRIPT_NABATAEAN() {
        return (int)1315070324L;
    }
    public static int HB_SCRIPT_OLD_NORTH_ARABIAN() {
        return (int)1315009122L;
    }
    public static int HB_SCRIPT_OLD_PERMIC() {
        return (int)1348825709L;
    }
    public static int HB_SCRIPT_PAHAWH_HMONG() {
        return (int)1215131239L;
    }
    public static int HB_SCRIPT_PALMYRENE() {
        return (int)1348562029L;
    }
    public static int HB_SCRIPT_PAU_CIN_HAU() {
        return (int)1348564323L;
    }
    public static int HB_SCRIPT_PSALTER_PAHLAVI() {
        return (int)1349020784L;
    }
    public static int HB_SCRIPT_SIDDHAM() {
        return (int)1399415908L;
    }
    public static int HB_SCRIPT_TIRHUTA() {
        return (int)1416196712L;
    }
    public static int HB_SCRIPT_WARANG_CITI() {
        return (int)1466004065L;
    }
    public static int HB_SCRIPT_AHOM() {
        return (int)1097363309L;
    }
    public static int HB_SCRIPT_ANATOLIAN_HIEROGLYPHS() {
        return (int)1215067511L;
    }
    public static int HB_SCRIPT_HATRAN() {
        return (int)1214346354L;
    }
    public static int HB_SCRIPT_MULTANI() {
        return (int)1299541108L;
    }
    public static int HB_SCRIPT_OLD_HUNGARIAN() {
        return (int)1215655527L;
    }
    public static int HB_SCRIPT_SIGNWRITING() {
        return (int)1399287415L;
    }
    public static int HB_SCRIPT_ADLAM() {
        return (int)1097100397L;
    }
    public static int HB_SCRIPT_BHAIKSUKI() {
        return (int)1114139507L;
    }
}


