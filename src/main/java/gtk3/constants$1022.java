// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1022 {

    static final FunctionDescriptor hb_unicode_eastasian_width_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_unicode_eastasian_width_func_t$MH = RuntimeHelper.downcallHandle(
        constants$1022.hb_unicode_eastasian_width_func_t$FUNC, false
    );
    static final FunctionDescriptor hb_unicode_funcs_set_eastasian_width_func$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_unicode_funcs_set_eastasian_width_func$MH = RuntimeHelper.downcallHandle(
        "hb_unicode_funcs_set_eastasian_width_func",
        constants$1022.hb_unicode_funcs_set_eastasian_width_func$FUNC, false
    );
    static final FunctionDescriptor hb_unicode_eastasian_width$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle hb_unicode_eastasian_width$MH = RuntimeHelper.downcallHandle(
        "hb_unicode_eastasian_width",
        constants$1022.hb_unicode_eastasian_width$FUNC, false
    );
    static final FunctionDescriptor hb_unicode_decompose_compatibility_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_unicode_decompose_compatibility_func_t$MH = RuntimeHelper.downcallHandle(
        constants$1022.hb_unicode_decompose_compatibility_func_t$FUNC, false
    );
}


