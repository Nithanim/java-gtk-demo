// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class test_h_21 extends test_h_20 {

    public static MethodHandle glib_autoptr_cleanup_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.glib_autoptr_cleanup_GtkRecentFilter$MH,"glib_autoptr_cleanup_GtkRecentFilter");
    }
    public static void glib_autoptr_cleanup_GtkRecentFilter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2238.glib_autoptr_cleanup_GtkRecentFilter$MH, "glib_autoptr_cleanup_GtkRecentFilter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.glib_listautoptr_cleanup_GtkRecentFilter$MH,"glib_listautoptr_cleanup_GtkRecentFilter");
    }
    public static void glib_listautoptr_cleanup_GtkRecentFilter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2238.glib_listautoptr_cleanup_GtkRecentFilter$MH, "glib_listautoptr_cleanup_GtkRecentFilter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.glib_slistautoptr_cleanup_GtkRecentFilter$MH,"glib_slistautoptr_cleanup_GtkRecentFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentFilter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2239.glib_slistautoptr_cleanup_GtkRecentFilter$MH, "glib_slistautoptr_cleanup_GtkRecentFilter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.glib_queueautoptr_cleanup_GtkRecentFilter$MH,"glib_queueautoptr_cleanup_GtkRecentFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentFilter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2239.glib_queueautoptr_cleanup_GtkRecentFilter$MH, "glib_queueautoptr_cleanup_GtkRecentFilter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.glib_autoptr_clear_GtkRecentManager$MH,"glib_autoptr_clear_GtkRecentManager");
    }
    public static void glib_autoptr_clear_GtkRecentManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2239.glib_autoptr_clear_GtkRecentManager$MH, "glib_autoptr_clear_GtkRecentManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.glib_autoptr_cleanup_GtkRecentManager$MH,"glib_autoptr_cleanup_GtkRecentManager");
    }
    public static void glib_autoptr_cleanup_GtkRecentManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2239.glib_autoptr_cleanup_GtkRecentManager$MH, "glib_autoptr_cleanup_GtkRecentManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.glib_listautoptr_cleanup_GtkRecentManager$MH,"glib_listautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_listautoptr_cleanup_GtkRecentManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2239.glib_listautoptr_cleanup_GtkRecentManager$MH, "glib_listautoptr_cleanup_GtkRecentManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.glib_slistautoptr_cleanup_GtkRecentManager$MH,"glib_slistautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2239.glib_slistautoptr_cleanup_GtkRecentManager$MH, "glib_slistautoptr_cleanup_GtkRecentManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.glib_queueautoptr_cleanup_GtkRecentManager$MH,"glib_queueautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentManager ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2240.glib_queueautoptr_cleanup_GtkRecentManager$MH, "glib_queueautoptr_cleanup_GtkRecentManager");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRevealer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.glib_autoptr_clear_GtkRevealer$MH,"glib_autoptr_clear_GtkRevealer");
    }
    public static void glib_autoptr_clear_GtkRevealer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2240.glib_autoptr_clear_GtkRevealer$MH, "glib_autoptr_clear_GtkRevealer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.glib_autoptr_cleanup_GtkRevealer$MH,"glib_autoptr_cleanup_GtkRevealer");
    }
    public static void glib_autoptr_cleanup_GtkRevealer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2240.glib_autoptr_cleanup_GtkRevealer$MH, "glib_autoptr_cleanup_GtkRevealer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.glib_listautoptr_cleanup_GtkRevealer$MH,"glib_listautoptr_cleanup_GtkRevealer");
    }
    public static void glib_listautoptr_cleanup_GtkRevealer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2240.glib_listautoptr_cleanup_GtkRevealer$MH, "glib_listautoptr_cleanup_GtkRevealer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.glib_slistautoptr_cleanup_GtkRevealer$MH,"glib_slistautoptr_cleanup_GtkRevealer");
    }
    public static void glib_slistautoptr_cleanup_GtkRevealer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2240.glib_slistautoptr_cleanup_GtkRevealer$MH, "glib_slistautoptr_cleanup_GtkRevealer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.glib_queueautoptr_cleanup_GtkRevealer$MH,"glib_queueautoptr_cleanup_GtkRevealer");
    }
    public static void glib_queueautoptr_cleanup_GtkRevealer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2240.glib_queueautoptr_cleanup_GtkRevealer$MH, "glib_queueautoptr_cleanup_GtkRevealer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScale_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.glib_autoptr_clear_GtkScale$MH,"glib_autoptr_clear_GtkScale");
    }
    public static void glib_autoptr_clear_GtkScale ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2241.glib_autoptr_clear_GtkScale$MH, "glib_autoptr_clear_GtkScale");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.glib_autoptr_cleanup_GtkScale$MH,"glib_autoptr_cleanup_GtkScale");
    }
    public static void glib_autoptr_cleanup_GtkScale ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2241.glib_autoptr_cleanup_GtkScale$MH, "glib_autoptr_cleanup_GtkScale");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.glib_listautoptr_cleanup_GtkScale$MH,"glib_listautoptr_cleanup_GtkScale");
    }
    public static void glib_listautoptr_cleanup_GtkScale ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2241.glib_listautoptr_cleanup_GtkScale$MH, "glib_listautoptr_cleanup_GtkScale");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.glib_slistautoptr_cleanup_GtkScale$MH,"glib_slistautoptr_cleanup_GtkScale");
    }
    public static void glib_slistautoptr_cleanup_GtkScale ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2241.glib_slistautoptr_cleanup_GtkScale$MH, "glib_slistautoptr_cleanup_GtkScale");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.glib_queueautoptr_cleanup_GtkScale$MH,"glib_queueautoptr_cleanup_GtkScale");
    }
    public static void glib_queueautoptr_cleanup_GtkScale ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2241.glib_queueautoptr_cleanup_GtkScale$MH, "glib_queueautoptr_cleanup_GtkScale");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScaleButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.glib_autoptr_clear_GtkScaleButton$MH,"glib_autoptr_clear_GtkScaleButton");
    }
    public static void glib_autoptr_clear_GtkScaleButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2241.glib_autoptr_clear_GtkScaleButton$MH, "glib_autoptr_clear_GtkScaleButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2242.glib_autoptr_cleanup_GtkScaleButton$MH,"glib_autoptr_cleanup_GtkScaleButton");
    }
    public static void glib_autoptr_cleanup_GtkScaleButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2242.glib_autoptr_cleanup_GtkScaleButton$MH, "glib_autoptr_cleanup_GtkScaleButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2242.glib_listautoptr_cleanup_GtkScaleButton$MH,"glib_listautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_listautoptr_cleanup_GtkScaleButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2242.glib_listautoptr_cleanup_GtkScaleButton$MH, "glib_listautoptr_cleanup_GtkScaleButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2242.glib_slistautoptr_cleanup_GtkScaleButton$MH,"glib_slistautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_slistautoptr_cleanup_GtkScaleButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2242.glib_slistautoptr_cleanup_GtkScaleButton$MH, "glib_slistautoptr_cleanup_GtkScaleButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2242.glib_queueautoptr_cleanup_GtkScaleButton$MH,"glib_queueautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_queueautoptr_cleanup_GtkScaleButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2242.glib_queueautoptr_cleanup_GtkScaleButton$MH, "glib_queueautoptr_cleanup_GtkScaleButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrollable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2242.glib_autoptr_clear_GtkScrollable$MH,"glib_autoptr_clear_GtkScrollable");
    }
    public static void glib_autoptr_clear_GtkScrollable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2242.glib_autoptr_clear_GtkScrollable$MH, "glib_autoptr_clear_GtkScrollable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2242.glib_autoptr_cleanup_GtkScrollable$MH,"glib_autoptr_cleanup_GtkScrollable");
    }
    public static void glib_autoptr_cleanup_GtkScrollable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2242.glib_autoptr_cleanup_GtkScrollable$MH, "glib_autoptr_cleanup_GtkScrollable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_listautoptr_cleanup_GtkScrollable$MH,"glib_listautoptr_cleanup_GtkScrollable");
    }
    public static void glib_listautoptr_cleanup_GtkScrollable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2243.glib_listautoptr_cleanup_GtkScrollable$MH, "glib_listautoptr_cleanup_GtkScrollable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_slistautoptr_cleanup_GtkScrollable$MH,"glib_slistautoptr_cleanup_GtkScrollable");
    }
    public static void glib_slistautoptr_cleanup_GtkScrollable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2243.glib_slistautoptr_cleanup_GtkScrollable$MH, "glib_slistautoptr_cleanup_GtkScrollable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_queueautoptr_cleanup_GtkScrollable$MH,"glib_queueautoptr_cleanup_GtkScrollable");
    }
    public static void glib_queueautoptr_cleanup_GtkScrollable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2243.glib_queueautoptr_cleanup_GtkScrollable$MH, "glib_queueautoptr_cleanup_GtkScrollable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrollbar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_autoptr_clear_GtkScrollbar$MH,"glib_autoptr_clear_GtkScrollbar");
    }
    public static void glib_autoptr_clear_GtkScrollbar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2243.glib_autoptr_clear_GtkScrollbar$MH, "glib_autoptr_clear_GtkScrollbar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_autoptr_cleanup_GtkScrollbar$MH,"glib_autoptr_cleanup_GtkScrollbar");
    }
    public static void glib_autoptr_cleanup_GtkScrollbar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2243.glib_autoptr_cleanup_GtkScrollbar$MH, "glib_autoptr_cleanup_GtkScrollbar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_listautoptr_cleanup_GtkScrollbar$MH,"glib_listautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_listautoptr_cleanup_GtkScrollbar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2243.glib_listautoptr_cleanup_GtkScrollbar$MH, "glib_listautoptr_cleanup_GtkScrollbar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_slistautoptr_cleanup_GtkScrollbar$MH,"glib_slistautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_slistautoptr_cleanup_GtkScrollbar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2244.glib_slistautoptr_cleanup_GtkScrollbar$MH, "glib_slistautoptr_cleanup_GtkScrollbar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_queueautoptr_cleanup_GtkScrollbar$MH,"glib_queueautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_queueautoptr_cleanup_GtkScrollbar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2244.glib_queueautoptr_cleanup_GtkScrollbar$MH, "glib_queueautoptr_cleanup_GtkScrollbar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrolledWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_autoptr_clear_GtkScrolledWindow$MH,"glib_autoptr_clear_GtkScrolledWindow");
    }
    public static void glib_autoptr_clear_GtkScrolledWindow ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2244.glib_autoptr_clear_GtkScrolledWindow$MH, "glib_autoptr_clear_GtkScrolledWindow");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_autoptr_cleanup_GtkScrolledWindow$MH,"glib_autoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_autoptr_cleanup_GtkScrolledWindow ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2244.glib_autoptr_cleanup_GtkScrolledWindow$MH, "glib_autoptr_cleanup_GtkScrolledWindow");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_listautoptr_cleanup_GtkScrolledWindow$MH,"glib_listautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_listautoptr_cleanup_GtkScrolledWindow ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2244.glib_listautoptr_cleanup_GtkScrolledWindow$MH, "glib_listautoptr_cleanup_GtkScrolledWindow");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_slistautoptr_cleanup_GtkScrolledWindow$MH,"glib_slistautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_slistautoptr_cleanup_GtkScrolledWindow ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2244.glib_slistautoptr_cleanup_GtkScrolledWindow$MH, "glib_slistautoptr_cleanup_GtkScrolledWindow");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_queueautoptr_cleanup_GtkScrolledWindow$MH,"glib_queueautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_queueautoptr_cleanup_GtkScrolledWindow ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2245.glib_queueautoptr_cleanup_GtkScrolledWindow$MH, "glib_queueautoptr_cleanup_GtkScrolledWindow");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSearchBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_autoptr_clear_GtkSearchBar$MH,"glib_autoptr_clear_GtkSearchBar");
    }
    public static void glib_autoptr_clear_GtkSearchBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2245.glib_autoptr_clear_GtkSearchBar$MH, "glib_autoptr_clear_GtkSearchBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_autoptr_cleanup_GtkSearchBar$MH,"glib_autoptr_cleanup_GtkSearchBar");
    }
    public static void glib_autoptr_cleanup_GtkSearchBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2245.glib_autoptr_cleanup_GtkSearchBar$MH, "glib_autoptr_cleanup_GtkSearchBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_listautoptr_cleanup_GtkSearchBar$MH,"glib_listautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_listautoptr_cleanup_GtkSearchBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2245.glib_listautoptr_cleanup_GtkSearchBar$MH, "glib_listautoptr_cleanup_GtkSearchBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_slistautoptr_cleanup_GtkSearchBar$MH,"glib_slistautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_slistautoptr_cleanup_GtkSearchBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2245.glib_slistautoptr_cleanup_GtkSearchBar$MH, "glib_slistautoptr_cleanup_GtkSearchBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_queueautoptr_cleanup_GtkSearchBar$MH,"glib_queueautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_queueautoptr_cleanup_GtkSearchBar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2245.glib_queueautoptr_cleanup_GtkSearchBar$MH, "glib_queueautoptr_cleanup_GtkSearchBar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSearchEntry_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_clear_GtkSearchEntry$MH,"glib_autoptr_clear_GtkSearchEntry");
    }
    public static void glib_autoptr_clear_GtkSearchEntry ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_clear_GtkSearchEntry$MH, "glib_autoptr_clear_GtkSearchEntry");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_cleanup_GtkSearchEntry$MH,"glib_autoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_autoptr_cleanup_GtkSearchEntry ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_cleanup_GtkSearchEntry$MH, "glib_autoptr_cleanup_GtkSearchEntry");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_listautoptr_cleanup_GtkSearchEntry$MH,"glib_listautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_listautoptr_cleanup_GtkSearchEntry ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2246.glib_listautoptr_cleanup_GtkSearchEntry$MH, "glib_listautoptr_cleanup_GtkSearchEntry");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_slistautoptr_cleanup_GtkSearchEntry$MH,"glib_slistautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_slistautoptr_cleanup_GtkSearchEntry ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2246.glib_slistautoptr_cleanup_GtkSearchEntry$MH, "glib_slistautoptr_cleanup_GtkSearchEntry");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_queueautoptr_cleanup_GtkSearchEntry$MH,"glib_queueautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_queueautoptr_cleanup_GtkSearchEntry ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2246.glib_queueautoptr_cleanup_GtkSearchEntry$MH, "glib_queueautoptr_cleanup_GtkSearchEntry");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSeparator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_clear_GtkSeparator$MH,"glib_autoptr_clear_GtkSeparator");
    }
    public static void glib_autoptr_clear_GtkSeparator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_clear_GtkSeparator$MH, "glib_autoptr_clear_GtkSeparator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_autoptr_cleanup_GtkSeparator$MH,"glib_autoptr_cleanup_GtkSeparator");
    }
    public static void glib_autoptr_cleanup_GtkSeparator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2247.glib_autoptr_cleanup_GtkSeparator$MH, "glib_autoptr_cleanup_GtkSeparator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_listautoptr_cleanup_GtkSeparator$MH,"glib_listautoptr_cleanup_GtkSeparator");
    }
    public static void glib_listautoptr_cleanup_GtkSeparator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2247.glib_listautoptr_cleanup_GtkSeparator$MH, "glib_listautoptr_cleanup_GtkSeparator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_slistautoptr_cleanup_GtkSeparator$MH,"glib_slistautoptr_cleanup_GtkSeparator");
    }
    public static void glib_slistautoptr_cleanup_GtkSeparator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2247.glib_slistautoptr_cleanup_GtkSeparator$MH, "glib_slistautoptr_cleanup_GtkSeparator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_queueautoptr_cleanup_GtkSeparator$MH,"glib_queueautoptr_cleanup_GtkSeparator");
    }
    public static void glib_queueautoptr_cleanup_GtkSeparator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2247.glib_queueautoptr_cleanup_GtkSeparator$MH, "glib_queueautoptr_cleanup_GtkSeparator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSeparatorMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_autoptr_clear_GtkSeparatorMenuItem$MH,"glib_autoptr_clear_GtkSeparatorMenuItem");
    }
    public static void glib_autoptr_clear_GtkSeparatorMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2247.glib_autoptr_clear_GtkSeparatorMenuItem$MH, "glib_autoptr_clear_GtkSeparatorMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_autoptr_cleanup_GtkSeparatorMenuItem$MH,"glib_autoptr_cleanup_GtkSeparatorMenuItem");
    }
    public static void glib_autoptr_cleanup_GtkSeparatorMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2247.glib_autoptr_cleanup_GtkSeparatorMenuItem$MH, "glib_autoptr_cleanup_GtkSeparatorMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_listautoptr_cleanup_GtkSeparatorMenuItem$MH,"glib_listautoptr_cleanup_GtkSeparatorMenuItem");
    }
    public static void glib_listautoptr_cleanup_GtkSeparatorMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2248.glib_listautoptr_cleanup_GtkSeparatorMenuItem$MH, "glib_listautoptr_cleanup_GtkSeparatorMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_slistautoptr_cleanup_GtkSeparatorMenuItem$MH,"glib_slistautoptr_cleanup_GtkSeparatorMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GtkSeparatorMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2248.glib_slistautoptr_cleanup_GtkSeparatorMenuItem$MH, "glib_slistautoptr_cleanup_GtkSeparatorMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_queueautoptr_cleanup_GtkSeparatorMenuItem$MH,"glib_queueautoptr_cleanup_GtkSeparatorMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GtkSeparatorMenuItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2248.glib_queueautoptr_cleanup_GtkSeparatorMenuItem$MH, "glib_queueautoptr_cleanup_GtkSeparatorMenuItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSeparatorToolItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorToolItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorToolItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorToolItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_autoptr_clear_GtkSeparatorToolItem$MH,"glib_autoptr_clear_GtkSeparatorToolItem");
    }
    public static void glib_autoptr_clear_GtkSeparatorToolItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2248.glib_autoptr_clear_GtkSeparatorToolItem$MH, "glib_autoptr_clear_GtkSeparatorToolItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_autoptr_cleanup_GtkSeparatorToolItem$MH,"glib_autoptr_cleanup_GtkSeparatorToolItem");
    }
    public static void glib_autoptr_cleanup_GtkSeparatorToolItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2248.glib_autoptr_cleanup_GtkSeparatorToolItem$MH, "glib_autoptr_cleanup_GtkSeparatorToolItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_listautoptr_cleanup_GtkSeparatorToolItem$MH,"glib_listautoptr_cleanup_GtkSeparatorToolItem");
    }
    public static void glib_listautoptr_cleanup_GtkSeparatorToolItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2248.glib_listautoptr_cleanup_GtkSeparatorToolItem$MH, "glib_listautoptr_cleanup_GtkSeparatorToolItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_slistautoptr_cleanup_GtkSeparatorToolItem$MH,"glib_slistautoptr_cleanup_GtkSeparatorToolItem");
    }
    public static void glib_slistautoptr_cleanup_GtkSeparatorToolItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2249.glib_slistautoptr_cleanup_GtkSeparatorToolItem$MH, "glib_slistautoptr_cleanup_GtkSeparatorToolItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_queueautoptr_cleanup_GtkSeparatorToolItem$MH,"glib_queueautoptr_cleanup_GtkSeparatorToolItem");
    }
    public static void glib_queueautoptr_cleanup_GtkSeparatorToolItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2249.glib_queueautoptr_cleanup_GtkSeparatorToolItem$MH, "glib_queueautoptr_cleanup_GtkSeparatorToolItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_autoptr_clear_GtkSettings$MH,"glib_autoptr_clear_GtkSettings");
    }
    public static void glib_autoptr_clear_GtkSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2249.glib_autoptr_clear_GtkSettings$MH, "glib_autoptr_clear_GtkSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_autoptr_cleanup_GtkSettings$MH,"glib_autoptr_cleanup_GtkSettings");
    }
    public static void glib_autoptr_cleanup_GtkSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2249.glib_autoptr_cleanup_GtkSettings$MH, "glib_autoptr_cleanup_GtkSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_listautoptr_cleanup_GtkSettings$MH,"glib_listautoptr_cleanup_GtkSettings");
    }
    public static void glib_listautoptr_cleanup_GtkSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2249.glib_listautoptr_cleanup_GtkSettings$MH, "glib_listautoptr_cleanup_GtkSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_slistautoptr_cleanup_GtkSettings$MH,"glib_slistautoptr_cleanup_GtkSettings");
    }
    public static void glib_slistautoptr_cleanup_GtkSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2249.glib_slistautoptr_cleanup_GtkSettings$MH, "glib_slistautoptr_cleanup_GtkSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_queueautoptr_cleanup_GtkSettings$MH,"glib_queueautoptr_cleanup_GtkSettings");
    }
    public static void glib_queueautoptr_cleanup_GtkSettings ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2250.glib_queueautoptr_cleanup_GtkSettings$MH, "glib_queueautoptr_cleanup_GtkSettings");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStackSidebar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_autoptr_clear_GtkStackSidebar$MH,"glib_autoptr_clear_GtkStackSidebar");
    }
    public static void glib_autoptr_clear_GtkStackSidebar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2250.glib_autoptr_clear_GtkStackSidebar$MH, "glib_autoptr_clear_GtkStackSidebar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_autoptr_cleanup_GtkStackSidebar$MH,"glib_autoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_autoptr_cleanup_GtkStackSidebar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2250.glib_autoptr_cleanup_GtkStackSidebar$MH, "glib_autoptr_cleanup_GtkStackSidebar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_listautoptr_cleanup_GtkStackSidebar$MH,"glib_listautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_listautoptr_cleanup_GtkStackSidebar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2250.glib_listautoptr_cleanup_GtkStackSidebar$MH, "glib_listautoptr_cleanup_GtkStackSidebar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_slistautoptr_cleanup_GtkStackSidebar$MH,"glib_slistautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_slistautoptr_cleanup_GtkStackSidebar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2250.glib_slistautoptr_cleanup_GtkStackSidebar$MH, "glib_slistautoptr_cleanup_GtkStackSidebar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_queueautoptr_cleanup_GtkStackSidebar$MH,"glib_queueautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_queueautoptr_cleanup_GtkStackSidebar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2250.glib_queueautoptr_cleanup_GtkStackSidebar$MH, "glib_queueautoptr_cleanup_GtkStackSidebar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSizeGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_clear_GtkSizeGroup$MH,"glib_autoptr_clear_GtkSizeGroup");
    }
    public static void glib_autoptr_clear_GtkSizeGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_clear_GtkSizeGroup$MH, "glib_autoptr_clear_GtkSizeGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_cleanup_GtkSizeGroup$MH,"glib_autoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_autoptr_cleanup_GtkSizeGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_cleanup_GtkSizeGroup$MH, "glib_autoptr_cleanup_GtkSizeGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_listautoptr_cleanup_GtkSizeGroup$MH,"glib_listautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_listautoptr_cleanup_GtkSizeGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2251.glib_listautoptr_cleanup_GtkSizeGroup$MH, "glib_listautoptr_cleanup_GtkSizeGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_slistautoptr_cleanup_GtkSizeGroup$MH,"glib_slistautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_slistautoptr_cleanup_GtkSizeGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2251.glib_slistautoptr_cleanup_GtkSizeGroup$MH, "glib_slistautoptr_cleanup_GtkSizeGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_queueautoptr_cleanup_GtkSizeGroup$MH,"glib_queueautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_queueautoptr_cleanup_GtkSizeGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2251.glib_queueautoptr_cleanup_GtkSizeGroup$MH, "glib_queueautoptr_cleanup_GtkSizeGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSpinButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_clear_GtkSpinButton$MH,"glib_autoptr_clear_GtkSpinButton");
    }
    public static void glib_autoptr_clear_GtkSpinButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_clear_GtkSpinButton$MH, "glib_autoptr_clear_GtkSpinButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_autoptr_cleanup_GtkSpinButton$MH,"glib_autoptr_cleanup_GtkSpinButton");
    }
    public static void glib_autoptr_cleanup_GtkSpinButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2252.glib_autoptr_cleanup_GtkSpinButton$MH, "glib_autoptr_cleanup_GtkSpinButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_listautoptr_cleanup_GtkSpinButton$MH,"glib_listautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_listautoptr_cleanup_GtkSpinButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2252.glib_listautoptr_cleanup_GtkSpinButton$MH, "glib_listautoptr_cleanup_GtkSpinButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_slistautoptr_cleanup_GtkSpinButton$MH,"glib_slistautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_slistautoptr_cleanup_GtkSpinButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2252.glib_slistautoptr_cleanup_GtkSpinButton$MH, "glib_slistautoptr_cleanup_GtkSpinButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_queueautoptr_cleanup_GtkSpinButton$MH,"glib_queueautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_queueautoptr_cleanup_GtkSpinButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2252.glib_queueautoptr_cleanup_GtkSpinButton$MH, "glib_queueautoptr_cleanup_GtkSpinButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSpinner_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_autoptr_clear_GtkSpinner$MH,"glib_autoptr_clear_GtkSpinner");
    }
    public static void glib_autoptr_clear_GtkSpinner ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2252.glib_autoptr_clear_GtkSpinner$MH, "glib_autoptr_clear_GtkSpinner");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_autoptr_cleanup_GtkSpinner$MH,"glib_autoptr_cleanup_GtkSpinner");
    }
    public static void glib_autoptr_cleanup_GtkSpinner ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2252.glib_autoptr_cleanup_GtkSpinner$MH, "glib_autoptr_cleanup_GtkSpinner");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_listautoptr_cleanup_GtkSpinner$MH,"glib_listautoptr_cleanup_GtkSpinner");
    }
    public static void glib_listautoptr_cleanup_GtkSpinner ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2253.glib_listautoptr_cleanup_GtkSpinner$MH, "glib_listautoptr_cleanup_GtkSpinner");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_slistautoptr_cleanup_GtkSpinner$MH,"glib_slistautoptr_cleanup_GtkSpinner");
    }
    public static void glib_slistautoptr_cleanup_GtkSpinner ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2253.glib_slistautoptr_cleanup_GtkSpinner$MH, "glib_slistautoptr_cleanup_GtkSpinner");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_queueautoptr_cleanup_GtkSpinner$MH,"glib_queueautoptr_cleanup_GtkSpinner");
    }
    public static void glib_queueautoptr_cleanup_GtkSpinner ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2253.glib_queueautoptr_cleanup_GtkSpinner$MH, "glib_queueautoptr_cleanup_GtkSpinner");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStack_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_autoptr_clear_GtkStack$MH,"glib_autoptr_clear_GtkStack");
    }
    public static void glib_autoptr_clear_GtkStack ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2253.glib_autoptr_clear_GtkStack$MH, "glib_autoptr_clear_GtkStack");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_autoptr_cleanup_GtkStack$MH,"glib_autoptr_cleanup_GtkStack");
    }
    public static void glib_autoptr_cleanup_GtkStack ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2253.glib_autoptr_cleanup_GtkStack$MH, "glib_autoptr_cleanup_GtkStack");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_listautoptr_cleanup_GtkStack$MH,"glib_listautoptr_cleanup_GtkStack");
    }
    public static void glib_listautoptr_cleanup_GtkStack ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2253.glib_listautoptr_cleanup_GtkStack$MH, "glib_listautoptr_cleanup_GtkStack");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_slistautoptr_cleanup_GtkStack$MH,"glib_slistautoptr_cleanup_GtkStack");
    }
    public static void glib_slistautoptr_cleanup_GtkStack ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2254.glib_slistautoptr_cleanup_GtkStack$MH, "glib_slistautoptr_cleanup_GtkStack");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_queueautoptr_cleanup_GtkStack$MH,"glib_queueautoptr_cleanup_GtkStack");
    }
    public static void glib_queueautoptr_cleanup_GtkStack ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2254.glib_queueautoptr_cleanup_GtkStack$MH, "glib_queueautoptr_cleanup_GtkStack");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStackSwitcher_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_autoptr_clear_GtkStackSwitcher$MH,"glib_autoptr_clear_GtkStackSwitcher");
    }
    public static void glib_autoptr_clear_GtkStackSwitcher ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2254.glib_autoptr_clear_GtkStackSwitcher$MH, "glib_autoptr_clear_GtkStackSwitcher");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_autoptr_cleanup_GtkStackSwitcher$MH,"glib_autoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_autoptr_cleanup_GtkStackSwitcher ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2254.glib_autoptr_cleanup_GtkStackSwitcher$MH, "glib_autoptr_cleanup_GtkStackSwitcher");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_listautoptr_cleanup_GtkStackSwitcher$MH,"glib_listautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_listautoptr_cleanup_GtkStackSwitcher ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2254.glib_listautoptr_cleanup_GtkStackSwitcher$MH, "glib_listautoptr_cleanup_GtkStackSwitcher");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_slistautoptr_cleanup_GtkStackSwitcher$MH,"glib_slistautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_slistautoptr_cleanup_GtkStackSwitcher ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2254.glib_slistautoptr_cleanup_GtkStackSwitcher$MH, "glib_slistautoptr_cleanup_GtkStackSwitcher");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_queueautoptr_cleanup_GtkStackSwitcher$MH,"glib_queueautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_queueautoptr_cleanup_GtkStackSwitcher ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2255.glib_queueautoptr_cleanup_GtkStackSwitcher$MH, "glib_queueautoptr_cleanup_GtkStackSwitcher");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStatusbar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_autoptr_clear_GtkStatusbar$MH,"glib_autoptr_clear_GtkStatusbar");
    }
    public static void glib_autoptr_clear_GtkStatusbar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2255.glib_autoptr_clear_GtkStatusbar$MH, "glib_autoptr_clear_GtkStatusbar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_autoptr_cleanup_GtkStatusbar$MH,"glib_autoptr_cleanup_GtkStatusbar");
    }
    public static void glib_autoptr_cleanup_GtkStatusbar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2255.glib_autoptr_cleanup_GtkStatusbar$MH, "glib_autoptr_cleanup_GtkStatusbar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_listautoptr_cleanup_GtkStatusbar$MH,"glib_listautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_listautoptr_cleanup_GtkStatusbar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2255.glib_listautoptr_cleanup_GtkStatusbar$MH, "glib_listautoptr_cleanup_GtkStatusbar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_slistautoptr_cleanup_GtkStatusbar$MH,"glib_slistautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_slistautoptr_cleanup_GtkStatusbar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2255.glib_slistautoptr_cleanup_GtkStatusbar$MH, "glib_slistautoptr_cleanup_GtkStatusbar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_queueautoptr_cleanup_GtkStatusbar$MH,"glib_queueautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_queueautoptr_cleanup_GtkStatusbar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2255.glib_queueautoptr_cleanup_GtkStatusbar$MH, "glib_queueautoptr_cleanup_GtkStatusbar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_clear_GtkStyle$MH,"glib_autoptr_clear_GtkStyle");
    }
    public static void glib_autoptr_clear_GtkStyle ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_clear_GtkStyle$MH, "glib_autoptr_clear_GtkStyle");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_cleanup_GtkStyle$MH,"glib_autoptr_cleanup_GtkStyle");
    }
    public static void glib_autoptr_cleanup_GtkStyle ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_cleanup_GtkStyle$MH, "glib_autoptr_cleanup_GtkStyle");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_listautoptr_cleanup_GtkStyle$MH,"glib_listautoptr_cleanup_GtkStyle");
    }
    public static void glib_listautoptr_cleanup_GtkStyle ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2256.glib_listautoptr_cleanup_GtkStyle$MH, "glib_listautoptr_cleanup_GtkStyle");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_slistautoptr_cleanup_GtkStyle$MH,"glib_slistautoptr_cleanup_GtkStyle");
    }
    public static void glib_slistautoptr_cleanup_GtkStyle ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2256.glib_slistautoptr_cleanup_GtkStyle$MH, "glib_slistautoptr_cleanup_GtkStyle");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_queueautoptr_cleanup_GtkStyle$MH,"glib_queueautoptr_cleanup_GtkStyle");
    }
    public static void glib_queueautoptr_cleanup_GtkStyle ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2256.glib_queueautoptr_cleanup_GtkStyle$MH, "glib_queueautoptr_cleanup_GtkStyle");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyleContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_clear_GtkStyleContext$MH,"glib_autoptr_clear_GtkStyleContext");
    }
    public static void glib_autoptr_clear_GtkStyleContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_clear_GtkStyleContext$MH, "glib_autoptr_clear_GtkStyleContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_autoptr_cleanup_GtkStyleContext$MH,"glib_autoptr_cleanup_GtkStyleContext");
    }
    public static void glib_autoptr_cleanup_GtkStyleContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2257.glib_autoptr_cleanup_GtkStyleContext$MH, "glib_autoptr_cleanup_GtkStyleContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_listautoptr_cleanup_GtkStyleContext$MH,"glib_listautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_listautoptr_cleanup_GtkStyleContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2257.glib_listautoptr_cleanup_GtkStyleContext$MH, "glib_listautoptr_cleanup_GtkStyleContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_slistautoptr_cleanup_GtkStyleContext$MH,"glib_slistautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_slistautoptr_cleanup_GtkStyleContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2257.glib_slistautoptr_cleanup_GtkStyleContext$MH, "glib_slistautoptr_cleanup_GtkStyleContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_queueautoptr_cleanup_GtkStyleContext$MH,"glib_queueautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_queueautoptr_cleanup_GtkStyleContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2257.glib_queueautoptr_cleanup_GtkStyleContext$MH, "glib_queueautoptr_cleanup_GtkStyleContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyleProperties_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProperties_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProperties_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProperties_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_autoptr_clear_GtkStyleProperties$MH,"glib_autoptr_clear_GtkStyleProperties");
    }
    public static void glib_autoptr_clear_GtkStyleProperties ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2257.glib_autoptr_clear_GtkStyleProperties$MH, "glib_autoptr_clear_GtkStyleProperties");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_autoptr_cleanup_GtkStyleProperties$MH,"glib_autoptr_cleanup_GtkStyleProperties");
    }
    public static void glib_autoptr_cleanup_GtkStyleProperties ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2257.glib_autoptr_cleanup_GtkStyleProperties$MH, "glib_autoptr_cleanup_GtkStyleProperties");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_listautoptr_cleanup_GtkStyleProperties$MH,"glib_listautoptr_cleanup_GtkStyleProperties");
    }
    public static void glib_listautoptr_cleanup_GtkStyleProperties ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2258.glib_listautoptr_cleanup_GtkStyleProperties$MH, "glib_listautoptr_cleanup_GtkStyleProperties");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_slistautoptr_cleanup_GtkStyleProperties$MH,"glib_slistautoptr_cleanup_GtkStyleProperties");
    }
    public static void glib_slistautoptr_cleanup_GtkStyleProperties ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2258.glib_slistautoptr_cleanup_GtkStyleProperties$MH, "glib_slistautoptr_cleanup_GtkStyleProperties");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_queueautoptr_cleanup_GtkStyleProperties$MH,"glib_queueautoptr_cleanup_GtkStyleProperties");
    }
    public static void glib_queueautoptr_cleanup_GtkStyleProperties ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2258.glib_queueautoptr_cleanup_GtkStyleProperties$MH, "glib_queueautoptr_cleanup_GtkStyleProperties");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyleProvider_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_autoptr_clear_GtkStyleProvider$MH,"glib_autoptr_clear_GtkStyleProvider");
    }
    public static void glib_autoptr_clear_GtkStyleProvider ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2258.glib_autoptr_clear_GtkStyleProvider$MH, "glib_autoptr_clear_GtkStyleProvider");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_autoptr_cleanup_GtkStyleProvider$MH,"glib_autoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_autoptr_cleanup_GtkStyleProvider ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2258.glib_autoptr_cleanup_GtkStyleProvider$MH, "glib_autoptr_cleanup_GtkStyleProvider");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_listautoptr_cleanup_GtkStyleProvider$MH,"glib_listautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_listautoptr_cleanup_GtkStyleProvider ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2258.glib_listautoptr_cleanup_GtkStyleProvider$MH, "glib_listautoptr_cleanup_GtkStyleProvider");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_slistautoptr_cleanup_GtkStyleProvider$MH,"glib_slistautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_slistautoptr_cleanup_GtkStyleProvider ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2259.glib_slistautoptr_cleanup_GtkStyleProvider$MH, "glib_slistautoptr_cleanup_GtkStyleProvider");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_queueautoptr_cleanup_GtkStyleProvider$MH,"glib_queueautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_queueautoptr_cleanup_GtkStyleProvider ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2259.glib_queueautoptr_cleanup_GtkStyleProvider$MH, "glib_queueautoptr_cleanup_GtkStyleProvider");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSwitch_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_autoptr_clear_GtkSwitch$MH,"glib_autoptr_clear_GtkSwitch");
    }
    public static void glib_autoptr_clear_GtkSwitch ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2259.glib_autoptr_clear_GtkSwitch$MH, "glib_autoptr_clear_GtkSwitch");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_autoptr_cleanup_GtkSwitch$MH,"glib_autoptr_cleanup_GtkSwitch");
    }
    public static void glib_autoptr_cleanup_GtkSwitch ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2259.glib_autoptr_cleanup_GtkSwitch$MH, "glib_autoptr_cleanup_GtkSwitch");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_listautoptr_cleanup_GtkSwitch$MH,"glib_listautoptr_cleanup_GtkSwitch");
    }
    public static void glib_listautoptr_cleanup_GtkSwitch ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2259.glib_listautoptr_cleanup_GtkSwitch$MH, "glib_listautoptr_cleanup_GtkSwitch");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_slistautoptr_cleanup_GtkSwitch$MH,"glib_slistautoptr_cleanup_GtkSwitch");
    }
    public static void glib_slistautoptr_cleanup_GtkSwitch ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2259.glib_slistautoptr_cleanup_GtkSwitch$MH, "glib_slistautoptr_cleanup_GtkSwitch");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_queueautoptr_cleanup_GtkSwitch$MH,"glib_queueautoptr_cleanup_GtkSwitch");
    }
    public static void glib_queueautoptr_cleanup_GtkSwitch ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2260.glib_queueautoptr_cleanup_GtkSwitch$MH, "glib_queueautoptr_cleanup_GtkSwitch");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextBuffer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_autoptr_clear_GtkTextBuffer$MH,"glib_autoptr_clear_GtkTextBuffer");
    }
    public static void glib_autoptr_clear_GtkTextBuffer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2260.glib_autoptr_clear_GtkTextBuffer$MH, "glib_autoptr_clear_GtkTextBuffer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_autoptr_cleanup_GtkTextBuffer$MH,"glib_autoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_autoptr_cleanup_GtkTextBuffer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2260.glib_autoptr_cleanup_GtkTextBuffer$MH, "glib_autoptr_cleanup_GtkTextBuffer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_listautoptr_cleanup_GtkTextBuffer$MH,"glib_listautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_listautoptr_cleanup_GtkTextBuffer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2260.glib_listautoptr_cleanup_GtkTextBuffer$MH, "glib_listautoptr_cleanup_GtkTextBuffer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_slistautoptr_cleanup_GtkTextBuffer$MH,"glib_slistautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_slistautoptr_cleanup_GtkTextBuffer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2260.glib_slistautoptr_cleanup_GtkTextBuffer$MH, "glib_slistautoptr_cleanup_GtkTextBuffer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_queueautoptr_cleanup_GtkTextBuffer$MH,"glib_queueautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_queueautoptr_cleanup_GtkTextBuffer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2260.glib_queueautoptr_cleanup_GtkTextBuffer$MH, "glib_queueautoptr_cleanup_GtkTextBuffer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextChildAnchor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_clear_GtkTextChildAnchor$MH,"glib_autoptr_clear_GtkTextChildAnchor");
    }
    public static void glib_autoptr_clear_GtkTextChildAnchor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_clear_GtkTextChildAnchor$MH, "glib_autoptr_clear_GtkTextChildAnchor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_cleanup_GtkTextChildAnchor$MH,"glib_autoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_autoptr_cleanup_GtkTextChildAnchor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_cleanup_GtkTextChildAnchor$MH, "glib_autoptr_cleanup_GtkTextChildAnchor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_listautoptr_cleanup_GtkTextChildAnchor$MH,"glib_listautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_listautoptr_cleanup_GtkTextChildAnchor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2261.glib_listautoptr_cleanup_GtkTextChildAnchor$MH, "glib_listautoptr_cleanup_GtkTextChildAnchor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_slistautoptr_cleanup_GtkTextChildAnchor$MH,"glib_slistautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_slistautoptr_cleanup_GtkTextChildAnchor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2261.glib_slistautoptr_cleanup_GtkTextChildAnchor$MH, "glib_slistautoptr_cleanup_GtkTextChildAnchor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_queueautoptr_cleanup_GtkTextChildAnchor$MH,"glib_queueautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_queueautoptr_cleanup_GtkTextChildAnchor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2261.glib_queueautoptr_cleanup_GtkTextChildAnchor$MH, "glib_queueautoptr_cleanup_GtkTextChildAnchor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextMark_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_clear_GtkTextMark$MH,"glib_autoptr_clear_GtkTextMark");
    }
    public static void glib_autoptr_clear_GtkTextMark ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_clear_GtkTextMark$MH, "glib_autoptr_clear_GtkTextMark");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_autoptr_cleanup_GtkTextMark$MH,"glib_autoptr_cleanup_GtkTextMark");
    }
    public static void glib_autoptr_cleanup_GtkTextMark ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2262.glib_autoptr_cleanup_GtkTextMark$MH, "glib_autoptr_cleanup_GtkTextMark");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_listautoptr_cleanup_GtkTextMark$MH,"glib_listautoptr_cleanup_GtkTextMark");
    }
    public static void glib_listautoptr_cleanup_GtkTextMark ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2262.glib_listautoptr_cleanup_GtkTextMark$MH, "glib_listautoptr_cleanup_GtkTextMark");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_slistautoptr_cleanup_GtkTextMark$MH,"glib_slistautoptr_cleanup_GtkTextMark");
    }
    public static void glib_slistautoptr_cleanup_GtkTextMark ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2262.glib_slistautoptr_cleanup_GtkTextMark$MH, "glib_slistautoptr_cleanup_GtkTextMark");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_queueautoptr_cleanup_GtkTextMark$MH,"glib_queueautoptr_cleanup_GtkTextMark");
    }
    public static void glib_queueautoptr_cleanup_GtkTextMark ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2262.glib_queueautoptr_cleanup_GtkTextMark$MH, "glib_queueautoptr_cleanup_GtkTextMark");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextTag_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_autoptr_clear_GtkTextTag$MH,"glib_autoptr_clear_GtkTextTag");
    }
    public static void glib_autoptr_clear_GtkTextTag ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2262.glib_autoptr_clear_GtkTextTag$MH, "glib_autoptr_clear_GtkTextTag");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_autoptr_cleanup_GtkTextTag$MH,"glib_autoptr_cleanup_GtkTextTag");
    }
    public static void glib_autoptr_cleanup_GtkTextTag ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2262.glib_autoptr_cleanup_GtkTextTag$MH, "glib_autoptr_cleanup_GtkTextTag");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_listautoptr_cleanup_GtkTextTag$MH,"glib_listautoptr_cleanup_GtkTextTag");
    }
    public static void glib_listautoptr_cleanup_GtkTextTag ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2263.glib_listautoptr_cleanup_GtkTextTag$MH, "glib_listautoptr_cleanup_GtkTextTag");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_slistautoptr_cleanup_GtkTextTag$MH,"glib_slistautoptr_cleanup_GtkTextTag");
    }
    public static void glib_slistautoptr_cleanup_GtkTextTag ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2263.glib_slistautoptr_cleanup_GtkTextTag$MH, "glib_slistautoptr_cleanup_GtkTextTag");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_queueautoptr_cleanup_GtkTextTag$MH,"glib_queueautoptr_cleanup_GtkTextTag");
    }
    public static void glib_queueautoptr_cleanup_GtkTextTag ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2263.glib_queueautoptr_cleanup_GtkTextTag$MH, "glib_queueautoptr_cleanup_GtkTextTag");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextTagTable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_autoptr_clear_GtkTextTagTable$MH,"glib_autoptr_clear_GtkTextTagTable");
    }
    public static void glib_autoptr_clear_GtkTextTagTable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2263.glib_autoptr_clear_GtkTextTagTable$MH, "glib_autoptr_clear_GtkTextTagTable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_autoptr_cleanup_GtkTextTagTable$MH,"glib_autoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_autoptr_cleanup_GtkTextTagTable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2263.glib_autoptr_cleanup_GtkTextTagTable$MH, "glib_autoptr_cleanup_GtkTextTagTable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_listautoptr_cleanup_GtkTextTagTable$MH,"glib_listautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_listautoptr_cleanup_GtkTextTagTable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2263.glib_listautoptr_cleanup_GtkTextTagTable$MH, "glib_listautoptr_cleanup_GtkTextTagTable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_slistautoptr_cleanup_GtkTextTagTable$MH,"glib_slistautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_slistautoptr_cleanup_GtkTextTagTable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2264.glib_slistautoptr_cleanup_GtkTextTagTable$MH, "glib_slistautoptr_cleanup_GtkTextTagTable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_queueautoptr_cleanup_GtkTextTagTable$MH,"glib_queueautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_queueautoptr_cleanup_GtkTextTagTable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2264.glib_queueautoptr_cleanup_GtkTextTagTable$MH, "glib_queueautoptr_cleanup_GtkTextTagTable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_autoptr_clear_GtkTextView$MH,"glib_autoptr_clear_GtkTextView");
    }
    public static void glib_autoptr_clear_GtkTextView ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2264.glib_autoptr_clear_GtkTextView$MH, "glib_autoptr_clear_GtkTextView");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_autoptr_cleanup_GtkTextView$MH,"glib_autoptr_cleanup_GtkTextView");
    }
    public static void glib_autoptr_cleanup_GtkTextView ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2264.glib_autoptr_cleanup_GtkTextView$MH, "glib_autoptr_cleanup_GtkTextView");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_listautoptr_cleanup_GtkTextView$MH,"glib_listautoptr_cleanup_GtkTextView");
    }
    public static void glib_listautoptr_cleanup_GtkTextView ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2264.glib_listautoptr_cleanup_GtkTextView$MH, "glib_listautoptr_cleanup_GtkTextView");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_slistautoptr_cleanup_GtkTextView$MH,"glib_slistautoptr_cleanup_GtkTextView");
    }
    public static void glib_slistautoptr_cleanup_GtkTextView ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2264.glib_slistautoptr_cleanup_GtkTextView$MH, "glib_slistautoptr_cleanup_GtkTextView");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_queueautoptr_cleanup_GtkTextView$MH,"glib_queueautoptr_cleanup_GtkTextView");
    }
    public static void glib_queueautoptr_cleanup_GtkTextView ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2265.glib_queueautoptr_cleanup_GtkTextView$MH, "glib_queueautoptr_cleanup_GtkTextView");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToggleButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_autoptr_clear_GtkToggleButton$MH,"glib_autoptr_clear_GtkToggleButton");
    }
    public static void glib_autoptr_clear_GtkToggleButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2265.glib_autoptr_clear_GtkToggleButton$MH, "glib_autoptr_clear_GtkToggleButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_autoptr_cleanup_GtkToggleButton$MH,"glib_autoptr_cleanup_GtkToggleButton");
    }
    public static void glib_autoptr_cleanup_GtkToggleButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2265.glib_autoptr_cleanup_GtkToggleButton$MH, "glib_autoptr_cleanup_GtkToggleButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_listautoptr_cleanup_GtkToggleButton$MH,"glib_listautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_listautoptr_cleanup_GtkToggleButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2265.glib_listautoptr_cleanup_GtkToggleButton$MH, "glib_listautoptr_cleanup_GtkToggleButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_slistautoptr_cleanup_GtkToggleButton$MH,"glib_slistautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_slistautoptr_cleanup_GtkToggleButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2265.glib_slistautoptr_cleanup_GtkToggleButton$MH, "glib_slistautoptr_cleanup_GtkToggleButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_queueautoptr_cleanup_GtkToggleButton$MH,"glib_queueautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_queueautoptr_cleanup_GtkToggleButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2265.glib_queueautoptr_cleanup_GtkToggleButton$MH, "glib_queueautoptr_cleanup_GtkToggleButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToggleToolButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleToolButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleToolButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleToolButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_clear_GtkToggleToolButton$MH,"glib_autoptr_clear_GtkToggleToolButton");
    }
    public static void glib_autoptr_clear_GtkToggleToolButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_clear_GtkToggleToolButton$MH, "glib_autoptr_clear_GtkToggleToolButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_cleanup_GtkToggleToolButton$MH,"glib_autoptr_cleanup_GtkToggleToolButton");
    }
    public static void glib_autoptr_cleanup_GtkToggleToolButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_cleanup_GtkToggleToolButton$MH, "glib_autoptr_cleanup_GtkToggleToolButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_listautoptr_cleanup_GtkToggleToolButton$MH,"glib_listautoptr_cleanup_GtkToggleToolButton");
    }
    public static void glib_listautoptr_cleanup_GtkToggleToolButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2266.glib_listautoptr_cleanup_GtkToggleToolButton$MH, "glib_listautoptr_cleanup_GtkToggleToolButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_slistautoptr_cleanup_GtkToggleToolButton$MH,"glib_slistautoptr_cleanup_GtkToggleToolButton");
    }
    public static void glib_slistautoptr_cleanup_GtkToggleToolButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2266.glib_slistautoptr_cleanup_GtkToggleToolButton$MH, "glib_slistautoptr_cleanup_GtkToggleToolButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_queueautoptr_cleanup_GtkToggleToolButton$MH,"glib_queueautoptr_cleanup_GtkToggleToolButton");
    }
    public static void glib_queueautoptr_cleanup_GtkToggleToolButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2266.glib_queueautoptr_cleanup_GtkToggleToolButton$MH, "glib_queueautoptr_cleanup_GtkToggleToolButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_clear_GtkToolButton$MH,"glib_autoptr_clear_GtkToolButton");
    }
    public static void glib_autoptr_clear_GtkToolButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_clear_GtkToolButton$MH, "glib_autoptr_clear_GtkToolButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_autoptr_cleanup_GtkToolButton$MH,"glib_autoptr_cleanup_GtkToolButton");
    }
    public static void glib_autoptr_cleanup_GtkToolButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2267.glib_autoptr_cleanup_GtkToolButton$MH, "glib_autoptr_cleanup_GtkToolButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_listautoptr_cleanup_GtkToolButton$MH,"glib_listautoptr_cleanup_GtkToolButton");
    }
    public static void glib_listautoptr_cleanup_GtkToolButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2267.glib_listautoptr_cleanup_GtkToolButton$MH, "glib_listautoptr_cleanup_GtkToolButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_slistautoptr_cleanup_GtkToolButton$MH,"glib_slistautoptr_cleanup_GtkToolButton");
    }
    public static void glib_slistautoptr_cleanup_GtkToolButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2267.glib_slistautoptr_cleanup_GtkToolButton$MH, "glib_slistautoptr_cleanup_GtkToolButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_queueautoptr_cleanup_GtkToolButton$MH,"glib_queueautoptr_cleanup_GtkToolButton");
    }
    public static void glib_queueautoptr_cleanup_GtkToolButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2267.glib_queueautoptr_cleanup_GtkToolButton$MH, "glib_queueautoptr_cleanup_GtkToolButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_autoptr_clear_GtkToolItem$MH,"glib_autoptr_clear_GtkToolItem");
    }
    public static void glib_autoptr_clear_GtkToolItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2267.glib_autoptr_clear_GtkToolItem$MH, "glib_autoptr_clear_GtkToolItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_autoptr_cleanup_GtkToolItem$MH,"glib_autoptr_cleanup_GtkToolItem");
    }
    public static void glib_autoptr_cleanup_GtkToolItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2267.glib_autoptr_cleanup_GtkToolItem$MH, "glib_autoptr_cleanup_GtkToolItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_listautoptr_cleanup_GtkToolItem$MH,"glib_listautoptr_cleanup_GtkToolItem");
    }
    public static void glib_listautoptr_cleanup_GtkToolItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2268.glib_listautoptr_cleanup_GtkToolItem$MH, "glib_listautoptr_cleanup_GtkToolItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_slistautoptr_cleanup_GtkToolItem$MH,"glib_slistautoptr_cleanup_GtkToolItem");
    }
    public static void glib_slistautoptr_cleanup_GtkToolItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2268.glib_slistautoptr_cleanup_GtkToolItem$MH, "glib_slistautoptr_cleanup_GtkToolItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_queueautoptr_cleanup_GtkToolItem$MH,"glib_queueautoptr_cleanup_GtkToolItem");
    }
    public static void glib_queueautoptr_cleanup_GtkToolItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2268.glib_queueautoptr_cleanup_GtkToolItem$MH, "glib_queueautoptr_cleanup_GtkToolItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolItemGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItemGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItemGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItemGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_autoptr_clear_GtkToolItemGroup$MH,"glib_autoptr_clear_GtkToolItemGroup");
    }
    public static void glib_autoptr_clear_GtkToolItemGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2268.glib_autoptr_clear_GtkToolItemGroup$MH, "glib_autoptr_clear_GtkToolItemGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_autoptr_cleanup_GtkToolItemGroup$MH,"glib_autoptr_cleanup_GtkToolItemGroup");
    }
    public static void glib_autoptr_cleanup_GtkToolItemGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2268.glib_autoptr_cleanup_GtkToolItemGroup$MH, "glib_autoptr_cleanup_GtkToolItemGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_listautoptr_cleanup_GtkToolItemGroup$MH,"glib_listautoptr_cleanup_GtkToolItemGroup");
    }
    public static void glib_listautoptr_cleanup_GtkToolItemGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2268.glib_listautoptr_cleanup_GtkToolItemGroup$MH, "glib_listautoptr_cleanup_GtkToolItemGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_slistautoptr_cleanup_GtkToolItemGroup$MH,"glib_slistautoptr_cleanup_GtkToolItemGroup");
    }
    public static void glib_slistautoptr_cleanup_GtkToolItemGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2269.glib_slistautoptr_cleanup_GtkToolItemGroup$MH, "glib_slistautoptr_cleanup_GtkToolItemGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_queueautoptr_cleanup_GtkToolItemGroup$MH,"glib_queueautoptr_cleanup_GtkToolItemGroup");
    }
    public static void glib_queueautoptr_cleanup_GtkToolItemGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2269.glib_queueautoptr_cleanup_GtkToolItemGroup$MH, "glib_queueautoptr_cleanup_GtkToolItemGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolPalette_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolPalette_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolPalette_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolPalette_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_autoptr_clear_GtkToolPalette$MH,"glib_autoptr_clear_GtkToolPalette");
    }
    public static void glib_autoptr_clear_GtkToolPalette ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2269.glib_autoptr_clear_GtkToolPalette$MH, "glib_autoptr_clear_GtkToolPalette");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_autoptr_cleanup_GtkToolPalette$MH,"glib_autoptr_cleanup_GtkToolPalette");
    }
    public static void glib_autoptr_cleanup_GtkToolPalette ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2269.glib_autoptr_cleanup_GtkToolPalette$MH, "glib_autoptr_cleanup_GtkToolPalette");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_listautoptr_cleanup_GtkToolPalette$MH,"glib_listautoptr_cleanup_GtkToolPalette");
    }
    public static void glib_listautoptr_cleanup_GtkToolPalette ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2269.glib_listautoptr_cleanup_GtkToolPalette$MH, "glib_listautoptr_cleanup_GtkToolPalette");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_slistautoptr_cleanup_GtkToolPalette$MH,"glib_slistautoptr_cleanup_GtkToolPalette");
    }
    public static void glib_slistautoptr_cleanup_GtkToolPalette ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2269.glib_slistautoptr_cleanup_GtkToolPalette$MH, "glib_slistautoptr_cleanup_GtkToolPalette");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_queueautoptr_cleanup_GtkToolPalette$MH,"glib_queueautoptr_cleanup_GtkToolPalette");
    }
    public static void glib_queueautoptr_cleanup_GtkToolPalette ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2270.glib_queueautoptr_cleanup_GtkToolPalette$MH, "glib_queueautoptr_cleanup_GtkToolPalette");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolShell_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolShell_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolShell_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolShell_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_autoptr_clear_GtkToolShell$MH,"glib_autoptr_clear_GtkToolShell");
    }
    public static void glib_autoptr_clear_GtkToolShell ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2270.glib_autoptr_clear_GtkToolShell$MH, "glib_autoptr_clear_GtkToolShell");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_autoptr_cleanup_GtkToolShell$MH,"glib_autoptr_cleanup_GtkToolShell");
    }
    public static void glib_autoptr_cleanup_GtkToolShell ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2270.glib_autoptr_cleanup_GtkToolShell$MH, "glib_autoptr_cleanup_GtkToolShell");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_listautoptr_cleanup_GtkToolShell$MH,"glib_listautoptr_cleanup_GtkToolShell");
    }
    public static void glib_listautoptr_cleanup_GtkToolShell ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2270.glib_listautoptr_cleanup_GtkToolShell$MH, "glib_listautoptr_cleanup_GtkToolShell");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_slistautoptr_cleanup_GtkToolShell$MH,"glib_slistautoptr_cleanup_GtkToolShell");
    }
    public static void glib_slistautoptr_cleanup_GtkToolShell ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2270.glib_slistautoptr_cleanup_GtkToolShell$MH, "glib_slistautoptr_cleanup_GtkToolShell");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_queueautoptr_cleanup_GtkToolShell$MH,"glib_queueautoptr_cleanup_GtkToolShell");
    }
    public static void glib_queueautoptr_cleanup_GtkToolShell ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2270.glib_queueautoptr_cleanup_GtkToolShell$MH, "glib_queueautoptr_cleanup_GtkToolShell");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolbar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolbar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolbar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolbar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_clear_GtkToolbar$MH,"glib_autoptr_clear_GtkToolbar");
    }
    public static void glib_autoptr_clear_GtkToolbar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_clear_GtkToolbar$MH, "glib_autoptr_clear_GtkToolbar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_cleanup_GtkToolbar$MH,"glib_autoptr_cleanup_GtkToolbar");
    }
    public static void glib_autoptr_cleanup_GtkToolbar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_cleanup_GtkToolbar$MH, "glib_autoptr_cleanup_GtkToolbar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_listautoptr_cleanup_GtkToolbar$MH,"glib_listautoptr_cleanup_GtkToolbar");
    }
    public static void glib_listautoptr_cleanup_GtkToolbar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2271.glib_listautoptr_cleanup_GtkToolbar$MH, "glib_listautoptr_cleanup_GtkToolbar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_slistautoptr_cleanup_GtkToolbar$MH,"glib_slistautoptr_cleanup_GtkToolbar");
    }
    public static void glib_slistautoptr_cleanup_GtkToolbar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2271.glib_slistautoptr_cleanup_GtkToolbar$MH, "glib_slistautoptr_cleanup_GtkToolbar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_queueautoptr_cleanup_GtkToolbar$MH,"glib_queueautoptr_cleanup_GtkToolbar");
    }
    public static void glib_queueautoptr_cleanup_GtkToolbar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2271.glib_queueautoptr_cleanup_GtkToolbar$MH, "glib_queueautoptr_cleanup_GtkToolbar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTooltip_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_clear_GtkTooltip$MH,"glib_autoptr_clear_GtkTooltip");
    }
    public static void glib_autoptr_clear_GtkTooltip ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_clear_GtkTooltip$MH, "glib_autoptr_clear_GtkTooltip");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_autoptr_cleanup_GtkTooltip$MH,"glib_autoptr_cleanup_GtkTooltip");
    }
    public static void glib_autoptr_cleanup_GtkTooltip ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2272.glib_autoptr_cleanup_GtkTooltip$MH, "glib_autoptr_cleanup_GtkTooltip");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_listautoptr_cleanup_GtkTooltip$MH,"glib_listautoptr_cleanup_GtkTooltip");
    }
    public static void glib_listautoptr_cleanup_GtkTooltip ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2272.glib_listautoptr_cleanup_GtkTooltip$MH, "glib_listautoptr_cleanup_GtkTooltip");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_slistautoptr_cleanup_GtkTooltip$MH,"glib_slistautoptr_cleanup_GtkTooltip");
    }
    public static void glib_slistautoptr_cleanup_GtkTooltip ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2272.glib_slistautoptr_cleanup_GtkTooltip$MH, "glib_slistautoptr_cleanup_GtkTooltip");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_queueautoptr_cleanup_GtkTooltip$MH,"glib_queueautoptr_cleanup_GtkTooltip");
    }
    public static void glib_queueautoptr_cleanup_GtkTooltip ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2272.glib_queueautoptr_cleanup_GtkTooltip$MH, "glib_queueautoptr_cleanup_GtkTooltip");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeDragDest_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_autoptr_clear_GtkTreeDragDest$MH,"glib_autoptr_clear_GtkTreeDragDest");
    }
    public static void glib_autoptr_clear_GtkTreeDragDest ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2272.glib_autoptr_clear_GtkTreeDragDest$MH, "glib_autoptr_clear_GtkTreeDragDest");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_autoptr_cleanup_GtkTreeDragDest$MH,"glib_autoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_autoptr_cleanup_GtkTreeDragDest ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2272.glib_autoptr_cleanup_GtkTreeDragDest$MH, "glib_autoptr_cleanup_GtkTreeDragDest");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_listautoptr_cleanup_GtkTreeDragDest$MH,"glib_listautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_listautoptr_cleanup_GtkTreeDragDest ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2273.glib_listautoptr_cleanup_GtkTreeDragDest$MH, "glib_listautoptr_cleanup_GtkTreeDragDest");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_slistautoptr_cleanup_GtkTreeDragDest$MH,"glib_slistautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeDragDest ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2273.glib_slistautoptr_cleanup_GtkTreeDragDest$MH, "glib_slistautoptr_cleanup_GtkTreeDragDest");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_queueautoptr_cleanup_GtkTreeDragDest$MH,"glib_queueautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeDragDest ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2273.glib_queueautoptr_cleanup_GtkTreeDragDest$MH, "glib_queueautoptr_cleanup_GtkTreeDragDest");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeDragSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_autoptr_clear_GtkTreeDragSource$MH,"glib_autoptr_clear_GtkTreeDragSource");
    }
    public static void glib_autoptr_clear_GtkTreeDragSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2273.glib_autoptr_clear_GtkTreeDragSource$MH, "glib_autoptr_clear_GtkTreeDragSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_autoptr_cleanup_GtkTreeDragSource$MH,"glib_autoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_autoptr_cleanup_GtkTreeDragSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2273.glib_autoptr_cleanup_GtkTreeDragSource$MH, "glib_autoptr_cleanup_GtkTreeDragSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_listautoptr_cleanup_GtkTreeDragSource$MH,"glib_listautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_listautoptr_cleanup_GtkTreeDragSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2273.glib_listautoptr_cleanup_GtkTreeDragSource$MH, "glib_listautoptr_cleanup_GtkTreeDragSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_slistautoptr_cleanup_GtkTreeDragSource$MH,"glib_slistautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeDragSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2274.glib_slistautoptr_cleanup_GtkTreeDragSource$MH, "glib_slistautoptr_cleanup_GtkTreeDragSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_queueautoptr_cleanup_GtkTreeDragSource$MH,"glib_queueautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeDragSource ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2274.glib_queueautoptr_cleanup_GtkTreeDragSource$MH, "glib_queueautoptr_cleanup_GtkTreeDragSource");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_autoptr_clear_GtkTreeModel$MH,"glib_autoptr_clear_GtkTreeModel");
    }
    public static void glib_autoptr_clear_GtkTreeModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2274.glib_autoptr_clear_GtkTreeModel$MH, "glib_autoptr_clear_GtkTreeModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_autoptr_cleanup_GtkTreeModel$MH,"glib_autoptr_cleanup_GtkTreeModel");
    }
    public static void glib_autoptr_cleanup_GtkTreeModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2274.glib_autoptr_cleanup_GtkTreeModel$MH, "glib_autoptr_cleanup_GtkTreeModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_listautoptr_cleanup_GtkTreeModel$MH,"glib_listautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2274.glib_listautoptr_cleanup_GtkTreeModel$MH, "glib_listautoptr_cleanup_GtkTreeModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_slistautoptr_cleanup_GtkTreeModel$MH,"glib_slistautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2274.glib_slistautoptr_cleanup_GtkTreeModel$MH, "glib_slistautoptr_cleanup_GtkTreeModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_queueautoptr_cleanup_GtkTreeModel$MH,"glib_queueautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModel ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2275.glib_queueautoptr_cleanup_GtkTreeModel$MH, "glib_queueautoptr_cleanup_GtkTreeModel");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModelFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_autoptr_clear_GtkTreeModelFilter$MH,"glib_autoptr_clear_GtkTreeModelFilter");
    }
    public static void glib_autoptr_clear_GtkTreeModelFilter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2275.glib_autoptr_clear_GtkTreeModelFilter$MH, "glib_autoptr_clear_GtkTreeModelFilter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_autoptr_cleanup_GtkTreeModelFilter$MH,"glib_autoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_autoptr_cleanup_GtkTreeModelFilter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2275.glib_autoptr_cleanup_GtkTreeModelFilter$MH, "glib_autoptr_cleanup_GtkTreeModelFilter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_listautoptr_cleanup_GtkTreeModelFilter$MH,"glib_listautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModelFilter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2275.glib_listautoptr_cleanup_GtkTreeModelFilter$MH, "glib_listautoptr_cleanup_GtkTreeModelFilter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_slistautoptr_cleanup_GtkTreeModelFilter$MH,"glib_slistautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModelFilter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2275.glib_slistautoptr_cleanup_GtkTreeModelFilter$MH, "glib_slistautoptr_cleanup_GtkTreeModelFilter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_queueautoptr_cleanup_GtkTreeModelFilter$MH,"glib_queueautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModelFilter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2275.glib_queueautoptr_cleanup_GtkTreeModelFilter$MH, "glib_queueautoptr_cleanup_GtkTreeModelFilter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModelSort_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_clear_GtkTreeModelSort$MH,"glib_autoptr_clear_GtkTreeModelSort");
    }
    public static void glib_autoptr_clear_GtkTreeModelSort ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_clear_GtkTreeModelSort$MH, "glib_autoptr_clear_GtkTreeModelSort");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_cleanup_GtkTreeModelSort$MH,"glib_autoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_autoptr_cleanup_GtkTreeModelSort ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_cleanup_GtkTreeModelSort$MH, "glib_autoptr_cleanup_GtkTreeModelSort");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_listautoptr_cleanup_GtkTreeModelSort$MH,"glib_listautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModelSort ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2276.glib_listautoptr_cleanup_GtkTreeModelSort$MH, "glib_listautoptr_cleanup_GtkTreeModelSort");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_slistautoptr_cleanup_GtkTreeModelSort$MH,"glib_slistautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModelSort ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2276.glib_slistautoptr_cleanup_GtkTreeModelSort$MH, "glib_slistautoptr_cleanup_GtkTreeModelSort");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_queueautoptr_cleanup_GtkTreeModelSort$MH,"glib_queueautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModelSort ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2276.glib_queueautoptr_cleanup_GtkTreeModelSort$MH, "glib_queueautoptr_cleanup_GtkTreeModelSort");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeSelection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_clear_GtkTreeSelection$MH,"glib_autoptr_clear_GtkTreeSelection");
    }
    public static void glib_autoptr_clear_GtkTreeSelection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_clear_GtkTreeSelection$MH, "glib_autoptr_clear_GtkTreeSelection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_autoptr_cleanup_GtkTreeSelection$MH,"glib_autoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_autoptr_cleanup_GtkTreeSelection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2277.glib_autoptr_cleanup_GtkTreeSelection$MH, "glib_autoptr_cleanup_GtkTreeSelection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_listautoptr_cleanup_GtkTreeSelection$MH,"glib_listautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_listautoptr_cleanup_GtkTreeSelection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2277.glib_listautoptr_cleanup_GtkTreeSelection$MH, "glib_listautoptr_cleanup_GtkTreeSelection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_slistautoptr_cleanup_GtkTreeSelection$MH,"glib_slistautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeSelection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2277.glib_slistautoptr_cleanup_GtkTreeSelection$MH, "glib_slistautoptr_cleanup_GtkTreeSelection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_queueautoptr_cleanup_GtkTreeSelection$MH,"glib_queueautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeSelection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2277.glib_queueautoptr_cleanup_GtkTreeSelection$MH, "glib_queueautoptr_cleanup_GtkTreeSelection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeSortable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_autoptr_clear_GtkTreeSortable$MH,"glib_autoptr_clear_GtkTreeSortable");
    }
    public static void glib_autoptr_clear_GtkTreeSortable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2277.glib_autoptr_clear_GtkTreeSortable$MH, "glib_autoptr_clear_GtkTreeSortable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_autoptr_cleanup_GtkTreeSortable$MH,"glib_autoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_autoptr_cleanup_GtkTreeSortable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2277.glib_autoptr_cleanup_GtkTreeSortable$MH, "glib_autoptr_cleanup_GtkTreeSortable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_listautoptr_cleanup_GtkTreeSortable$MH,"glib_listautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_listautoptr_cleanup_GtkTreeSortable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2278.glib_listautoptr_cleanup_GtkTreeSortable$MH, "glib_listautoptr_cleanup_GtkTreeSortable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_slistautoptr_cleanup_GtkTreeSortable$MH,"glib_slistautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeSortable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2278.glib_slistautoptr_cleanup_GtkTreeSortable$MH, "glib_slistautoptr_cleanup_GtkTreeSortable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_queueautoptr_cleanup_GtkTreeSortable$MH,"glib_queueautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeSortable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2278.glib_queueautoptr_cleanup_GtkTreeSortable$MH, "glib_queueautoptr_cleanup_GtkTreeSortable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeStore_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_autoptr_clear_GtkTreeStore$MH,"glib_autoptr_clear_GtkTreeStore");
    }
    public static void glib_autoptr_clear_GtkTreeStore ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2278.glib_autoptr_clear_GtkTreeStore$MH, "glib_autoptr_clear_GtkTreeStore");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_autoptr_cleanup_GtkTreeStore$MH,"glib_autoptr_cleanup_GtkTreeStore");
    }
    public static void glib_autoptr_cleanup_GtkTreeStore ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2278.glib_autoptr_cleanup_GtkTreeStore$MH, "glib_autoptr_cleanup_GtkTreeStore");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_listautoptr_cleanup_GtkTreeStore$MH,"glib_listautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_listautoptr_cleanup_GtkTreeStore ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2278.glib_listautoptr_cleanup_GtkTreeStore$MH, "glib_listautoptr_cleanup_GtkTreeStore");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_slistautoptr_cleanup_GtkTreeStore$MH,"glib_slistautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeStore ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2279.glib_slistautoptr_cleanup_GtkTreeStore$MH, "glib_slistautoptr_cleanup_GtkTreeStore");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_queueautoptr_cleanup_GtkTreeStore$MH,"glib_queueautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeStore ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2279.glib_queueautoptr_cleanup_GtkTreeStore$MH, "glib_queueautoptr_cleanup_GtkTreeStore");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_autoptr_clear_GtkTreeView$MH,"glib_autoptr_clear_GtkTreeView");
    }
    public static void glib_autoptr_clear_GtkTreeView ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2279.glib_autoptr_clear_GtkTreeView$MH, "glib_autoptr_clear_GtkTreeView");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_autoptr_cleanup_GtkTreeView$MH,"glib_autoptr_cleanup_GtkTreeView");
    }
    public static void glib_autoptr_cleanup_GtkTreeView ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2279.glib_autoptr_cleanup_GtkTreeView$MH, "glib_autoptr_cleanup_GtkTreeView");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_listautoptr_cleanup_GtkTreeView$MH,"glib_listautoptr_cleanup_GtkTreeView");
    }
    public static void glib_listautoptr_cleanup_GtkTreeView ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2279.glib_listautoptr_cleanup_GtkTreeView$MH, "glib_listautoptr_cleanup_GtkTreeView");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_slistautoptr_cleanup_GtkTreeView$MH,"glib_slistautoptr_cleanup_GtkTreeView");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeView ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2279.glib_slistautoptr_cleanup_GtkTreeView$MH, "glib_slistautoptr_cleanup_GtkTreeView");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_queueautoptr_cleanup_GtkTreeView$MH,"glib_queueautoptr_cleanup_GtkTreeView");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeView ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2280.glib_queueautoptr_cleanup_GtkTreeView$MH, "glib_queueautoptr_cleanup_GtkTreeView");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeViewColumn_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_autoptr_clear_GtkTreeViewColumn$MH,"glib_autoptr_clear_GtkTreeViewColumn");
    }
    public static void glib_autoptr_clear_GtkTreeViewColumn ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2280.glib_autoptr_clear_GtkTreeViewColumn$MH, "glib_autoptr_clear_GtkTreeViewColumn");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_autoptr_cleanup_GtkTreeViewColumn$MH,"glib_autoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_autoptr_cleanup_GtkTreeViewColumn ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2280.glib_autoptr_cleanup_GtkTreeViewColumn$MH, "glib_autoptr_cleanup_GtkTreeViewColumn");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_listautoptr_cleanup_GtkTreeViewColumn$MH,"glib_listautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_listautoptr_cleanup_GtkTreeViewColumn ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2280.glib_listautoptr_cleanup_GtkTreeViewColumn$MH, "glib_listautoptr_cleanup_GtkTreeViewColumn");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_slistautoptr_cleanup_GtkTreeViewColumn$MH,"glib_slistautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeViewColumn ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2280.glib_slistautoptr_cleanup_GtkTreeViewColumn$MH, "glib_slistautoptr_cleanup_GtkTreeViewColumn");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_queueautoptr_cleanup_GtkTreeViewColumn$MH,"glib_queueautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeViewColumn ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2280.glib_queueautoptr_cleanup_GtkTreeViewColumn$MH, "glib_queueautoptr_cleanup_GtkTreeViewColumn");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkViewport_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_clear_GtkViewport$MH,"glib_autoptr_clear_GtkViewport");
    }
    public static void glib_autoptr_clear_GtkViewport ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_clear_GtkViewport$MH, "glib_autoptr_clear_GtkViewport");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_cleanup_GtkViewport$MH,"glib_autoptr_cleanup_GtkViewport");
    }
    public static void glib_autoptr_cleanup_GtkViewport ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_cleanup_GtkViewport$MH, "glib_autoptr_cleanup_GtkViewport");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_listautoptr_cleanup_GtkViewport$MH,"glib_listautoptr_cleanup_GtkViewport");
    }
    public static void glib_listautoptr_cleanup_GtkViewport ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2281.glib_listautoptr_cleanup_GtkViewport$MH, "glib_listautoptr_cleanup_GtkViewport");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_slistautoptr_cleanup_GtkViewport$MH,"glib_slistautoptr_cleanup_GtkViewport");
    }
    public static void glib_slistautoptr_cleanup_GtkViewport ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2281.glib_slistautoptr_cleanup_GtkViewport$MH, "glib_slistautoptr_cleanup_GtkViewport");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_queueautoptr_cleanup_GtkViewport$MH,"glib_queueautoptr_cleanup_GtkViewport");
    }
    public static void glib_queueautoptr_cleanup_GtkViewport ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2281.glib_queueautoptr_cleanup_GtkViewport$MH, "glib_queueautoptr_cleanup_GtkViewport");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkVolumeButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_clear_GtkVolumeButton$MH,"glib_autoptr_clear_GtkVolumeButton");
    }
    public static void glib_autoptr_clear_GtkVolumeButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_clear_GtkVolumeButton$MH, "glib_autoptr_clear_GtkVolumeButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_autoptr_cleanup_GtkVolumeButton$MH,"glib_autoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_autoptr_cleanup_GtkVolumeButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2282.glib_autoptr_cleanup_GtkVolumeButton$MH, "glib_autoptr_cleanup_GtkVolumeButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_listautoptr_cleanup_GtkVolumeButton$MH,"glib_listautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_listautoptr_cleanup_GtkVolumeButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2282.glib_listautoptr_cleanup_GtkVolumeButton$MH, "glib_listautoptr_cleanup_GtkVolumeButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_slistautoptr_cleanup_GtkVolumeButton$MH,"glib_slistautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_slistautoptr_cleanup_GtkVolumeButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2282.glib_slistautoptr_cleanup_GtkVolumeButton$MH, "glib_slistautoptr_cleanup_GtkVolumeButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_queueautoptr_cleanup_GtkVolumeButton$MH,"glib_queueautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_queueautoptr_cleanup_GtkVolumeButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2282.glib_queueautoptr_cleanup_GtkVolumeButton$MH, "glib_queueautoptr_cleanup_GtkVolumeButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPaperSize_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_autoptr_clear_GtkPaperSize$MH,"glib_autoptr_clear_GtkPaperSize");
    }
    public static void glib_autoptr_clear_GtkPaperSize ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2282.glib_autoptr_clear_GtkPaperSize$MH, "glib_autoptr_clear_GtkPaperSize");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_autoptr_cleanup_GtkPaperSize$MH,"glib_autoptr_cleanup_GtkPaperSize");
    }
    public static void glib_autoptr_cleanup_GtkPaperSize ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2282.glib_autoptr_cleanup_GtkPaperSize$MH, "glib_autoptr_cleanup_GtkPaperSize");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_listautoptr_cleanup_GtkPaperSize$MH,"glib_listautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_listautoptr_cleanup_GtkPaperSize ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2283.glib_listautoptr_cleanup_GtkPaperSize$MH, "glib_listautoptr_cleanup_GtkPaperSize");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_slistautoptr_cleanup_GtkPaperSize$MH,"glib_slistautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_slistautoptr_cleanup_GtkPaperSize ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2283.glib_slistautoptr_cleanup_GtkPaperSize$MH, "glib_slistautoptr_cleanup_GtkPaperSize");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_queueautoptr_cleanup_GtkPaperSize$MH,"glib_queueautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_queueautoptr_cleanup_GtkPaperSize ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2283.glib_queueautoptr_cleanup_GtkPaperSize$MH, "glib_queueautoptr_cleanup_GtkPaperSize");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_autoptr_clear_GtkRecentInfo$MH,"glib_autoptr_clear_GtkRecentInfo");
    }
    public static void glib_autoptr_clear_GtkRecentInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2283.glib_autoptr_clear_GtkRecentInfo$MH, "glib_autoptr_clear_GtkRecentInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_autoptr_cleanup_GtkRecentInfo$MH,"glib_autoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_autoptr_cleanup_GtkRecentInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2283.glib_autoptr_cleanup_GtkRecentInfo$MH, "glib_autoptr_cleanup_GtkRecentInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_listautoptr_cleanup_GtkRecentInfo$MH,"glib_listautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_listautoptr_cleanup_GtkRecentInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2283.glib_listautoptr_cleanup_GtkRecentInfo$MH, "glib_listautoptr_cleanup_GtkRecentInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_slistautoptr_cleanup_GtkRecentInfo$MH,"glib_slistautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2284.glib_slistautoptr_cleanup_GtkRecentInfo$MH, "glib_slistautoptr_cleanup_GtkRecentInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_queueautoptr_cleanup_GtkRecentInfo$MH,"glib_queueautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2284.glib_queueautoptr_cleanup_GtkRecentInfo$MH, "glib_queueautoptr_cleanup_GtkRecentInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSelectionData_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionData_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionData_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionData_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_autoptr_clear_GtkSelectionData$MH,"glib_autoptr_clear_GtkSelectionData");
    }
    public static void glib_autoptr_clear_GtkSelectionData ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2284.glib_autoptr_clear_GtkSelectionData$MH, "glib_autoptr_clear_GtkSelectionData");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_autoptr_cleanup_GtkSelectionData$MH,"glib_autoptr_cleanup_GtkSelectionData");
    }
    public static void glib_autoptr_cleanup_GtkSelectionData ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2284.glib_autoptr_cleanup_GtkSelectionData$MH, "glib_autoptr_cleanup_GtkSelectionData");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_listautoptr_cleanup_GtkSelectionData$MH,"glib_listautoptr_cleanup_GtkSelectionData");
    }
    public static void glib_listautoptr_cleanup_GtkSelectionData ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2284.glib_listautoptr_cleanup_GtkSelectionData$MH, "glib_listautoptr_cleanup_GtkSelectionData");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_slistautoptr_cleanup_GtkSelectionData$MH,"glib_slistautoptr_cleanup_GtkSelectionData");
    }
    public static void glib_slistautoptr_cleanup_GtkSelectionData ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2284.glib_slistautoptr_cleanup_GtkSelectionData$MH, "glib_slistautoptr_cleanup_GtkSelectionData");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_queueautoptr_cleanup_GtkSelectionData$MH,"glib_queueautoptr_cleanup_GtkSelectionData");
    }
    public static void glib_queueautoptr_cleanup_GtkSelectionData ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2285.glib_queueautoptr_cleanup_GtkSelectionData$MH, "glib_queueautoptr_cleanup_GtkSelectionData");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTargetList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTargetList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTargetList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTargetList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_autoptr_clear_GtkTargetList$MH,"glib_autoptr_clear_GtkTargetList");
    }
    public static void glib_autoptr_clear_GtkTargetList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2285.glib_autoptr_clear_GtkTargetList$MH, "glib_autoptr_clear_GtkTargetList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_autoptr_cleanup_GtkTargetList$MH,"glib_autoptr_cleanup_GtkTargetList");
    }
    public static void glib_autoptr_cleanup_GtkTargetList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2285.glib_autoptr_cleanup_GtkTargetList$MH, "glib_autoptr_cleanup_GtkTargetList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_listautoptr_cleanup_GtkTargetList$MH,"glib_listautoptr_cleanup_GtkTargetList");
    }
    public static void glib_listautoptr_cleanup_GtkTargetList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2285.glib_listautoptr_cleanup_GtkTargetList$MH, "glib_listautoptr_cleanup_GtkTargetList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_slistautoptr_cleanup_GtkTargetList$MH,"glib_slistautoptr_cleanup_GtkTargetList");
    }
    public static void glib_slistautoptr_cleanup_GtkTargetList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2285.glib_slistautoptr_cleanup_GtkTargetList$MH, "glib_slistautoptr_cleanup_GtkTargetList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_queueautoptr_cleanup_GtkTargetList$MH,"glib_queueautoptr_cleanup_GtkTargetList");
    }
    public static void glib_queueautoptr_cleanup_GtkTargetList ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2285.glib_queueautoptr_cleanup_GtkTargetList$MH, "glib_queueautoptr_cleanup_GtkTargetList");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextAttributes_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextAttributes_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextAttributes_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextAttributes_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_clear_GtkTextAttributes$MH,"glib_autoptr_clear_GtkTextAttributes");
    }
    public static void glib_autoptr_clear_GtkTextAttributes ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_clear_GtkTextAttributes$MH, "glib_autoptr_clear_GtkTextAttributes");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_cleanup_GtkTextAttributes$MH,"glib_autoptr_cleanup_GtkTextAttributes");
    }
    public static void glib_autoptr_cleanup_GtkTextAttributes ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_cleanup_GtkTextAttributes$MH, "glib_autoptr_cleanup_GtkTextAttributes");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_listautoptr_cleanup_GtkTextAttributes$MH,"glib_listautoptr_cleanup_GtkTextAttributes");
    }
    public static void glib_listautoptr_cleanup_GtkTextAttributes ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2286.glib_listautoptr_cleanup_GtkTextAttributes$MH, "glib_listautoptr_cleanup_GtkTextAttributes");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_slistautoptr_cleanup_GtkTextAttributes$MH,"glib_slistautoptr_cleanup_GtkTextAttributes");
    }
    public static void glib_slistautoptr_cleanup_GtkTextAttributes ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2286.glib_slistautoptr_cleanup_GtkTextAttributes$MH, "glib_slistautoptr_cleanup_GtkTextAttributes");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_queueautoptr_cleanup_GtkTextAttributes$MH,"glib_queueautoptr_cleanup_GtkTextAttributes");
    }
    public static void glib_queueautoptr_cleanup_GtkTextAttributes ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2286.glib_queueautoptr_cleanup_GtkTextAttributes$MH, "glib_queueautoptr_cleanup_GtkTextAttributes");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_clear_GtkTextIter$MH,"glib_autoptr_clear_GtkTextIter");
    }
    public static void glib_autoptr_clear_GtkTextIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_clear_GtkTextIter$MH, "glib_autoptr_clear_GtkTextIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_autoptr_cleanup_GtkTextIter$MH,"glib_autoptr_cleanup_GtkTextIter");
    }
    public static void glib_autoptr_cleanup_GtkTextIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2287.glib_autoptr_cleanup_GtkTextIter$MH, "glib_autoptr_cleanup_GtkTextIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_listautoptr_cleanup_GtkTextIter$MH,"glib_listautoptr_cleanup_GtkTextIter");
    }
    public static void glib_listautoptr_cleanup_GtkTextIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2287.glib_listautoptr_cleanup_GtkTextIter$MH, "glib_listautoptr_cleanup_GtkTextIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_slistautoptr_cleanup_GtkTextIter$MH,"glib_slistautoptr_cleanup_GtkTextIter");
    }
    public static void glib_slistautoptr_cleanup_GtkTextIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2287.glib_slistautoptr_cleanup_GtkTextIter$MH, "glib_slistautoptr_cleanup_GtkTextIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_queueautoptr_cleanup_GtkTextIter$MH,"glib_queueautoptr_cleanup_GtkTextIter");
    }
    public static void glib_queueautoptr_cleanup_GtkTextIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2287.glib_queueautoptr_cleanup_GtkTextIter$MH, "glib_queueautoptr_cleanup_GtkTextIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_autoptr_clear_GtkTreeIter$MH,"glib_autoptr_clear_GtkTreeIter");
    }
    public static void glib_autoptr_clear_GtkTreeIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2287.glib_autoptr_clear_GtkTreeIter$MH, "glib_autoptr_clear_GtkTreeIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_autoptr_cleanup_GtkTreeIter$MH,"glib_autoptr_cleanup_GtkTreeIter");
    }
    public static void glib_autoptr_cleanup_GtkTreeIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2287.glib_autoptr_cleanup_GtkTreeIter$MH, "glib_autoptr_cleanup_GtkTreeIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_listautoptr_cleanup_GtkTreeIter$MH,"glib_listautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_listautoptr_cleanup_GtkTreeIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2288.glib_listautoptr_cleanup_GtkTreeIter$MH, "glib_listautoptr_cleanup_GtkTreeIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_slistautoptr_cleanup_GtkTreeIter$MH,"glib_slistautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2288.glib_slistautoptr_cleanup_GtkTreeIter$MH, "glib_slistautoptr_cleanup_GtkTreeIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_queueautoptr_cleanup_GtkTreeIter$MH,"glib_queueautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2288.glib_queueautoptr_cleanup_GtkTreeIter$MH, "glib_queueautoptr_cleanup_GtkTreeIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreePath_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_autoptr_clear_GtkTreePath$MH,"glib_autoptr_clear_GtkTreePath");
    }
    public static void glib_autoptr_clear_GtkTreePath ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2288.glib_autoptr_clear_GtkTreePath$MH, "glib_autoptr_clear_GtkTreePath");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_autoptr_cleanup_GtkTreePath$MH,"glib_autoptr_cleanup_GtkTreePath");
    }
    public static void glib_autoptr_cleanup_GtkTreePath ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2288.glib_autoptr_cleanup_GtkTreePath$MH, "glib_autoptr_cleanup_GtkTreePath");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_listautoptr_cleanup_GtkTreePath$MH,"glib_listautoptr_cleanup_GtkTreePath");
    }
    public static void glib_listautoptr_cleanup_GtkTreePath ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2288.glib_listautoptr_cleanup_GtkTreePath$MH, "glib_listautoptr_cleanup_GtkTreePath");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_slistautoptr_cleanup_GtkTreePath$MH,"glib_slistautoptr_cleanup_GtkTreePath");
    }
    public static void glib_slistautoptr_cleanup_GtkTreePath ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2289.glib_slistautoptr_cleanup_GtkTreePath$MH, "glib_slistautoptr_cleanup_GtkTreePath");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_queueautoptr_cleanup_GtkTreePath$MH,"glib_queueautoptr_cleanup_GtkTreePath");
    }
    public static void glib_queueautoptr_cleanup_GtkTreePath ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2289.glib_queueautoptr_cleanup_GtkTreePath$MH, "glib_queueautoptr_cleanup_GtkTreePath");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeRowReference_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_autoptr_clear_GtkTreeRowReference$MH,"glib_autoptr_clear_GtkTreeRowReference");
    }
    public static void glib_autoptr_clear_GtkTreeRowReference ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2289.glib_autoptr_clear_GtkTreeRowReference$MH, "glib_autoptr_clear_GtkTreeRowReference");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_autoptr_cleanup_GtkTreeRowReference$MH,"glib_autoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_autoptr_cleanup_GtkTreeRowReference ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2289.glib_autoptr_cleanup_GtkTreeRowReference$MH, "glib_autoptr_cleanup_GtkTreeRowReference");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_listautoptr_cleanup_GtkTreeRowReference$MH,"glib_listautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_listautoptr_cleanup_GtkTreeRowReference ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2289.glib_listautoptr_cleanup_GtkTreeRowReference$MH, "glib_listautoptr_cleanup_GtkTreeRowReference");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_slistautoptr_cleanup_GtkTreeRowReference$MH,"glib_slistautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeRowReference ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2289.glib_slistautoptr_cleanup_GtkTreeRowReference$MH, "glib_slistautoptr_cleanup_GtkTreeRowReference");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_queueautoptr_cleanup_GtkTreeRowReference$MH,"glib_queueautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeRowReference ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2290.glib_queueautoptr_cleanup_GtkTreeRowReference$MH, "glib_queueautoptr_cleanup_GtkTreeRowReference");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkWidgetPath_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPath_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPath_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPath_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_autoptr_clear_GtkWidgetPath$MH,"glib_autoptr_clear_GtkWidgetPath");
    }
    public static void glib_autoptr_clear_GtkWidgetPath ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2290.glib_autoptr_clear_GtkWidgetPath$MH, "glib_autoptr_clear_GtkWidgetPath");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_autoptr_cleanup_GtkWidgetPath$MH,"glib_autoptr_cleanup_GtkWidgetPath");
    }
    public static void glib_autoptr_cleanup_GtkWidgetPath ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2290.glib_autoptr_cleanup_GtkWidgetPath$MH, "glib_autoptr_cleanup_GtkWidgetPath");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_listautoptr_cleanup_GtkWidgetPath$MH,"glib_listautoptr_cleanup_GtkWidgetPath");
    }
    public static void glib_listautoptr_cleanup_GtkWidgetPath ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2290.glib_listautoptr_cleanup_GtkWidgetPath$MH, "glib_listautoptr_cleanup_GtkWidgetPath");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_slistautoptr_cleanup_GtkWidgetPath$MH,"glib_slistautoptr_cleanup_GtkWidgetPath");
    }
    public static void glib_slistautoptr_cleanup_GtkWidgetPath ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2290.glib_slistautoptr_cleanup_GtkWidgetPath$MH, "glib_slistautoptr_cleanup_GtkWidgetPath");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_queueautoptr_cleanup_GtkWidgetPath$MH,"glib_queueautoptr_cleanup_GtkWidgetPath");
    }
    public static void glib_queueautoptr_cleanup_GtkWidgetPath ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2290.glib_queueautoptr_cleanup_GtkWidgetPath$MH, "glib_queueautoptr_cleanup_GtkWidgetPath");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryAddress NULL() {
        return constants$2291.NULL$ADDR;
    }
    public static int g_macro__has_attribute() {
        return (int)0L;
    }
    public static int g_macro__has_feature() {
        return (int)0L;
    }
    public static int g_macro__has_builtin() {
        return (int)0L;
    }
    public static MemorySegment G_GNUC_FUNCTION() {
        return constants$2291.G_GNUC_FUNCTION$SEGMENT;
    }
    public static MemorySegment G_GNUC_PRETTY_FUNCTION() {
        return constants$2291.G_GNUC_PRETTY_FUNCTION$SEGMENT;
    }
    public static MemorySegment G_STRLOC() {
        return constants$2291.G_STRLOC$SEGMENT;
    }
    public static int FALSE() {
        return (int)0L;
    }
    public static int TRUE() {
        return (int)1L;
    }
    public static long _POSIX_C_SOURCE() {
        return 200809L;
    }
    public static int __TIMESIZE() {
        return (int)64L;
    }
    public static long __STDC_ISO_10646__() {
        return 201706L;
    }
    public static long LLONG_MIN() {
        return -9223372036854775808L;
    }
    public static long LLONG_MAX() {
        return 9223372036854775807L;
    }
    public static long ULLONG_MAX() {
        return -1L;
    }
    public static int PTHREAD_DESTRUCTOR_ITERATIONS() {
        return (int)4L;
    }
    public static int SEM_VALUE_MAX() {
        return (int)2147483647L;
    }
    public static long SSIZE_MAX() {
        return 9223372036854775807L;
    }
    public static int BC_BASE_MAX() {
        return (int)99L;
    }
    public static int BC_DIM_MAX() {
        return (int)2048L;
    }
    public static int BC_SCALE_MAX() {
        return (int)99L;
    }
    public static int BC_STRING_MAX() {
        return (int)1000L;
    }
    public static int EXPR_NEST_MAX() {
        return (int)32L;
    }
    public static int LINE_MAX() {
        return (int)2048L;
    }
    public static int RE_DUP_MAX() {
        return (int)32767L;
    }
    public static int SCHAR_MAX() {
        return (int)127L;
    }
    public static int SHRT_MAX() {
        return (int)32767L;
    }
    public static int INT_MAX() {
        return (int)2147483647L;
    }
    public static long LONG_MAX() {
        return 9223372036854775807L;
    }
    public static int SCHAR_MIN() {
        return (int)-128L;
    }
    public static int SHRT_MIN() {
        return (int)-32768L;
    }
    public static int INT_MIN() {
        return (int)-2147483648L;
    }
    public static long LONG_MIN() {
        return -9223372036854775808L;
    }
    public static int UCHAR_MAX() {
        return (int)255L;
    }
    public static int USHRT_MAX() {
        return (int)65535L;
    }
    public static int UINT_MAX() {
        return (int)4294967295L;
    }
    public static long ULONG_MAX() {
        return -1L;
    }
    public static int CHAR_BIT() {
        return (int)8L;
    }
    public static int CHAR_MIN() {
        return (int)-128L;
    }
    public static int CHAR_MAX() {
        return (int)127L;
    }
    public static int FLT_EVAL_METHOD() {
        return (int)0L;
    }
    public static int FLT_RADIX() {
        return (int)2L;
    }
    public static int FLT_MANT_DIG() {
        return (int)24L;
    }
    public static int DBL_MANT_DIG() {
        return (int)53L;
    }
    public static int LDBL_MANT_DIG() {
        return (int)64L;
    }
    public static int DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_DIG() {
        return (int)6L;
    }
    public static int DBL_DIG() {
        return (int)15L;
    }
    public static int LDBL_DIG() {
        return (int)18L;
    }
    public static int FLT_MIN_EXP() {
        return (int)-125L;
    }
    public static int DBL_MIN_EXP() {
        return (int)-1021L;
    }
    public static int LDBL_MIN_EXP() {
        return (int)-16381L;
    }
    public static int FLT_MIN_10_EXP() {
        return (int)-37L;
    }
    public static int DBL_MIN_10_EXP() {
        return (int)-307L;
    }
    public static int LDBL_MIN_10_EXP() {
        return (int)-4931L;
    }
    public static int FLT_MAX_EXP() {
        return (int)128L;
    }
    public static int DBL_MAX_EXP() {
        return (int)1024L;
    }
    public static int LDBL_MAX_EXP() {
        return (int)16384L;
    }
    public static int FLT_MAX_10_EXP() {
        return (int)38L;
    }
    public static int DBL_MAX_10_EXP() {
        return (int)308L;
    }
    public static int LDBL_MAX_10_EXP() {
        return (int)4932L;
    }
    public static float FLT_MAX() {
        return 3.4028234663852886E38f;
    }
    public static double DBL_MAX() {
        return 1.7976931348623157E308d;
    }
    public static double LDBL_MAX() {
        return Double.valueOf("Infinity");
    }
    public static float FLT_EPSILON() {
        return 1.1920928955078125E-7f;
    }
    public static double DBL_EPSILON() {
        return 2.220446049250313E-16d;
    }
    public static double LDBL_EPSILON() {
        return 1.0842021724855044E-19d;
    }
    public static float FLT_MIN() {
        return 1.1754943508222875E-38f;
    }
    public static double DBL_MIN() {
        return 2.2250738585072014E-308d;
    }
    public static double LDBL_MIN() {
        return 0.0d;
    }
    public static float FLT_TRUE_MIN() {
        return 1.401298464324817E-45f;
    }
    public static double DBL_TRUE_MIN() {
        return 4.9E-324d;
    }
    public static double LDBL_TRUE_MIN() {
        return 0.0d;
    }
    public static int FLT_DECIMAL_DIG() {
        return (int)9L;
    }
    public static int DBL_DECIMAL_DIG() {
        return (int)17L;
    }
    public static int LDBL_DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int DBL_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int LDBL_HAS_SUBNORM() {
        return (int)1L;
    }
    public static float G_MINFLOAT() {
        return 1.1754943508222875E-38f;
    }
    public static float G_MAXFLOAT() {
        return 3.4028234663852886E38f;
    }
    public static double G_MINDOUBLE() {
        return 2.2250738585072014E-308d;
    }
    public static double G_MAXDOUBLE() {
        return 1.7976931348623157E308d;
    }
    public static int G_MINSHORT() {
        return (int)-32768L;
    }
    public static int G_MAXSHORT() {
        return (int)32767L;
    }
    public static int G_MAXUSHORT() {
        return (int)65535L;
    }
    public static int G_MININT() {
        return (int)-2147483648L;
    }
    public static int G_MAXINT() {
        return (int)2147483647L;
    }
    public static int G_MAXUINT() {
        return (int)4294967295L;
    }
    public static long G_MINLONG() {
        return -9223372036854775808L;
    }
    public static long G_MAXLONG() {
        return 9223372036854775807L;
    }
    public static long G_MAXULONG() {
        return -1L;
    }
    public static MemorySegment G_GINT16_MODIFIER() {
        return constants$2291.G_GINT16_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT16_FORMAT() {
        return constants$2291.G_GINT16_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT16_FORMAT() {
        return constants$2292.G_GUINT16_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINT32_MODIFIER() {
        return constants$2292.G_GINT32_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT32_FORMAT() {
        return constants$2292.G_GINT32_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT32_FORMAT() {
        return constants$2292.G_GUINT32_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINT64_MODIFIER() {
        return constants$2292.G_GINT64_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT64_FORMAT() {
        return constants$2292.G_GINT64_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT64_FORMAT() {
        return constants$2293.G_GUINT64_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GSIZE_MODIFIER() {
        return constants$2293.G_GSIZE_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GSSIZE_MODIFIER() {
        return constants$2293.G_GSSIZE_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GSIZE_FORMAT() {
        return constants$2293.G_GSIZE_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GSSIZE_FORMAT() {
        return constants$2293.G_GSSIZE_FORMAT$SEGMENT;
    }
    public static long G_MAXSIZE() {
        return -1L;
    }
    public static long G_MINSSIZE() {
        return -9223372036854775808L;
    }
    public static long G_MAXSSIZE() {
        return 9223372036854775807L;
    }
    public static long G_MINOFFSET() {
        return -9223372036854775808L;
    }
    public static long G_MAXOFFSET() {
        return 9223372036854775807L;
    }
    public static MemorySegment G_GOFFSET_MODIFIER() {
        return constants$2293.G_GOFFSET_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GOFFSET_FORMAT() {
        return constants$2294.G_GOFFSET_FORMAT$SEGMENT;
    }
    public static MemorySegment G_POLLFD_FORMAT() {
        return constants$2294.G_POLLFD_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINTPTR_MODIFIER() {
        return constants$2294.G_GINTPTR_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINTPTR_FORMAT() {
        return constants$2294.G_GINTPTR_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINTPTR_FORMAT() {
        return constants$2294.G_GUINTPTR_FORMAT$SEGMENT;
    }
    public static int G_BYTE_ORDER() {
        return (int)1234L;
    }
    public static MemorySegment G_MODULE_SUFFIX() {
        return constants$2294.G_MODULE_SUFFIX$SEGMENT;
    }
    public static MemorySegment G_PID_FORMAT() {
        return constants$2295.G_PID_FORMAT$SEGMENT;
    }
    public static int G_DIR_SEPARATOR() {
        return (int)47L;
    }
    public static MemorySegment G_DIR_SEPARATOR_S() {
        return constants$2295.G_DIR_SEPARATOR_S$SEGMENT;
    }
    public static int G_SEARCHPATH_SEPARATOR() {
        return (int)58L;
    }
    public static MemorySegment G_SEARCHPATH_SEPARATOR_S() {
        return constants$2295.G_SEARCHPATH_SEPARATOR_S$SEGMENT;
    }
    public static int GLIB_VERSION_2_26() {
        return (int)137728L;
    }
    public static int GLIB_VERSION_2_28() {
        return (int)138240L;
    }
    public static int GLIB_VERSION_2_30() {
        return (int)138752L;
    }
    public static int GLIB_VERSION_2_32() {
        return (int)139264L;
    }
    public static int GLIB_VERSION_2_34() {
        return (int)139776L;
    }
    public static int GLIB_VERSION_2_36() {
        return (int)140288L;
    }
    public static int GLIB_VERSION_2_38() {
        return (int)140800L;
    }
    public static int GLIB_VERSION_2_40() {
        return (int)141312L;
    }
    public static int GLIB_VERSION_2_42() {
        return (int)141824L;
    }
    public static int GLIB_VERSION_2_44() {
        return (int)142336L;
    }
    public static int GLIB_VERSION_2_46() {
        return (int)142848L;
    }
    public static int GLIB_VERSION_2_48() {
        return (int)143360L;
    }
    public static int GLIB_VERSION_2_50() {
        return (int)143872L;
    }
    public static int GLIB_VERSION_2_52() {
        return (int)144384L;
    }
    public static int GLIB_VERSION_2_54() {
        return (int)144896L;
    }
    public static int GLIB_VERSION_2_56() {
        return (int)145408L;
    }
    public static int GLIB_VERSION_2_58() {
        return (int)145920L;
    }
    public static int GLIB_VERSION_2_60() {
        return (int)146432L;
    }
    public static int GLIB_VERSION_2_62() {
        return (int)146944L;
    }
    public static int GLIB_VERSION_2_64() {
        return (int)147456L;
    }
    public static int GLIB_VERSION_2_66() {
        return (int)147968L;
    }
    public static int GLIB_VERSION_2_68() {
        return (int)148480L;
    }
    public static int GLIB_VERSION_CUR_STABLE() {
        return (int)148480L;
    }
    public static int GLIB_VERSION_PREV_STABLE() {
        return (int)147968L;
    }
    public static int GLIB_VERSION_MIN_REQUIRED() {
        return (int)148480L;
    }
    public static int GLIB_VERSION_MAX_ALLOWED() {
        return (int)148480L;
    }
    public static long CLOCKS_PER_SEC() {
        return 1000000L;
    }
    public static int __BYTE_ORDER() {
        return (int)1234L;
    }
    public static int __FLOAT_WORD_ORDER() {
        return (int)1234L;
    }
    public static byte G_MININT8() {
        return (byte)-128L;
    }
    public static byte G_MAXINT8() {
        return (byte)127L;
    }
    public static byte G_MAXUINT8() {
        return (byte)255L;
    }
    public static short G_MININT16() {
        return (short)-32768L;
    }
    public static short G_MAXINT16() {
        return (short)32767L;
    }
    public static short G_MAXUINT16() {
        return (short)65535L;
    }
    public static int G_MININT32() {
        return (int)-2147483648L;
    }
    public static int G_MAXINT32() {
        return (int)2147483647L;
    }
    public static int G_MAXUINT32() {
        return (int)4294967295L;
    }
    public static long G_MININT64() {
        return -9223372036854775808L;
    }
    public static long G_MAXINT64() {
        return 9223372036854775807L;
    }
    public static long G_MAXUINT64() {
        return -1L;
    }
    public static double G_E() {
        return 2.718281828459045d;
    }
    public static double G_LN2() {
        return 0.6931471805599453d;
    }
    public static double G_LN10() {
        return 2.302585092994046d;
    }
    public static double G_PI() {
        return 3.141592653589793d;
    }
    public static double G_PI_2() {
        return 1.5707963267948966d;
    }
    public static double G_PI_4() {
        return 0.7853981633974483d;
    }
    public static double G_SQRT2() {
        return 1.4142135623730951d;
    }
    public static int G_IEEE754_FLOAT_BIAS() {
        return (int)127L;
    }
    public static int G_IEEE754_DOUBLE_BIAS() {
        return (int)1023L;
    }
    public static double G_LOG_2_BASE_10() {
        return 0.3010299956639812d;
    }
    public static MemorySegment G_OS_INFO_KEY_NAME() {
        return constants$2295.G_OS_INFO_KEY_NAME$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_PRETTY_NAME() {
        return constants$2295.G_OS_INFO_KEY_PRETTY_NAME$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_VERSION() {
        return constants$2295.G_OS_INFO_KEY_VERSION$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_VERSION_CODENAME() {
        return constants$2296.G_OS_INFO_KEY_VERSION_CODENAME$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_VERSION_ID() {
        return constants$2296.G_OS_INFO_KEY_VERSION_ID$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_ID() {
        return constants$2296.G_OS_INFO_KEY_ID$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_HOME_URL() {
        return constants$2296.G_OS_INFO_KEY_HOME_URL$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_DOCUMENTATION_URL() {
        return constants$2296.G_OS_INFO_KEY_DOCUMENTATION_URL$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_SUPPORT_URL() {
        return constants$2296.G_OS_INFO_KEY_SUPPORT_URL$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_BUG_REPORT_URL() {
        return constants$2297.G_OS_INFO_KEY_BUG_REPORT_URL$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_PRIVACY_POLICY_URL() {
        return constants$2297.G_OS_INFO_KEY_PRIVACY_POLICY_URL$SEGMENT;
    }
    public static int __WCLONE() {
        return (int)2147483648L;
    }
    public static int __HAVE_DISTINCT_FLOAT16() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT128X() {
        return (int)0L;
    }
    public static int __HAVE_FLOAT128_UNLIKE_LDBL() {
        return (int)0L;
    }
    public static int LITTLE_ENDIAN() {
        return (int)1234L;
    }
    public static int BIG_ENDIAN() {
        return (int)4321L;
    }
    public static int PDP_ENDIAN() {
        return (int)3412L;
    }
    public static int BYTE_ORDER() {
        return (int)1234L;
    }
    public static long _SIGSET_NWORDS() {
        return 16L;
    }
    public static int __NFDBITS() {
        return (int)64L;
    }
    public static int FD_SETSIZE() {
        return (int)1024L;
    }
    public static int NFDBITS() {
        return (int)64L;
    }
    public static int __PTHREAD_RWLOCK_ELISION_EXTRA() {
        return (int)0L;
    }
    public static MemoryAddress SIG_ERR() {
        return constants$2297.SIG_ERR$ADDR;
    }
    public static MemoryAddress SIG_DFL() {
        return constants$2297.SIG_DFL$ADDR;
    }
    public static MemoryAddress SIG_IGN() {
        return constants$2297.SIG_IGN$ADDR;
    }
    public static int SIGIO() {
        return (int)29L;
    }
    public static int SIGIOT() {
        return (int)6L;
    }
    public static int SIGCLD() {
        return (int)17L;
    }
    public static int _NSIG() {
        return (int)65L;
    }
    public static long __SI_PAD_SIZE() {
        return 28L;
    }
    public static long __SIGEV_PAD_SIZE() {
        return 12L;
    }
    public static int NSIG() {
        return (int)65L;
    }
    public static int SA_RESETHAND() {
        return (int)2147483648L;
    }
    public static int SA_NOMASK() {
        return (int)1073741824L;
    }
    public static int SA_ONESHOT() {
        return (int)2147483648L;
    }
    public static int SA_STACK() {
        return (int)134217728L;
    }
    public static int FP_XSTATE_MAGIC1() {
        return (int)1179670611L;
    }
    public static int FP_XSTATE_MAGIC2() {
        return (int)1179670597L;
    }
    public static long FP_XSTATE_MAGIC2_SIZE() {
        return 4L;
    }
    public static int NGREG() {
        return (int)23L;
    }
    public static long G_TIME_SPAN_DAY() {
        return 86400000000L;
    }
    public static long G_TIME_SPAN_HOUR() {
        return 3600000000L;
    }
    public static long G_TIME_SPAN_MINUTE() {
        return 60000000L;
    }
    public static long G_TIME_SPAN_SECOND() {
        return 1000000L;
    }
    public static long G_TIME_SPAN_MILLISECOND() {
        return 1000L;
    }
    public static int G_DATE_BAD_JULIAN() {
        return (int)0L;
    }
    public static int G_DATE_BAD_DAY() {
        return (int)0L;
    }
    public static int G_DATE_BAD_YEAR() {
        return (int)0L;
    }
    public static int MAXNAMLEN() {
        return (int)255L;
    }
    public static int G_MEM_ALIGN() {
        return (int)8L;
    }
    public static int G_HOOK_FLAG_USER_SHIFT() {
        return (int)4L;
    }
    public static int G_PRIORITY_HIGH() {
        return (int)-100L;
    }
    public static int G_SOURCE_REMOVE() {
        return (int)0L;
    }
    public static int G_SOURCE_CONTINUE() {
        return (int)1L;
    }
    public static int G_UNICODE_COMBINING_MARK() {
        return (int)10L;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_GROUP() {
        return constants$2297.G_KEY_FILE_DESKTOP_GROUP$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_TYPE() {
        return constants$2298.G_KEY_FILE_DESKTOP_KEY_TYPE$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_VERSION() {
        return constants$2298.G_KEY_FILE_DESKTOP_KEY_VERSION$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_NAME() {
        return constants$2298.G_KEY_FILE_DESKTOP_KEY_NAME$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME() {
        return constants$2298.G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY() {
        return constants$2298.G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_COMMENT() {
        return constants$2298.G_KEY_FILE_DESKTOP_KEY_COMMENT$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_ICON() {
        return constants$2299.G_KEY_FILE_DESKTOP_KEY_ICON$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_HIDDEN() {
        return constants$2299.G_KEY_FILE_DESKTOP_KEY_HIDDEN$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN() {
        return constants$2299.G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN() {
        return constants$2299.G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_TRY_EXEC() {
        return constants$2299.G_KEY_FILE_DESKTOP_KEY_TRY_EXEC$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_EXEC() {
        return constants$2299.G_KEY_FILE_DESKTOP_KEY_EXEC$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_PATH() {
        return constants$2300.G_KEY_FILE_DESKTOP_KEY_PATH$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_TERMINAL() {
        return constants$2300.G_KEY_FILE_DESKTOP_KEY_TERMINAL$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_MIME_TYPE() {
        return constants$2300.G_KEY_FILE_DESKTOP_KEY_MIME_TYPE$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_CATEGORIES() {
        return constants$2300.G_KEY_FILE_DESKTOP_KEY_CATEGORIES$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY() {
        return constants$2300.G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS() {
        return constants$2300.G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_URL() {
        return constants$2301.G_KEY_FILE_DESKTOP_KEY_URL$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE() {
        return constants$2301.G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_ACTIONS() {
        return constants$2301.G_KEY_FILE_DESKTOP_KEY_ACTIONS$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_TYPE_APPLICATION() {
        return constants$2301.G_KEY_FILE_DESKTOP_TYPE_APPLICATION$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_TYPE_LINK() {
        return constants$2301.G_KEY_FILE_DESKTOP_TYPE_LINK$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_TYPE_DIRECTORY() {
        return constants$2301.G_KEY_FILE_DESKTOP_TYPE_DIRECTORY$SEGMENT;
    }
    public static int G_LOG_LEVEL_USER_SHIFT() {
        return (int)8L;
    }
    public static int G_LOG_FATAL_MASK() {
        return (int)5L;
    }
    public static MemoryAddress G_LOG_DOMAIN() {
        return constants$2302.G_LOG_DOMAIN$ADDR;
    }
    public static MemorySegment G_OPTION_REMAINING() {
        return constants$2302.G_OPTION_REMAINING$SEGMENT;
    }
    public static MemorySegment G_CSET_A_2_Z() {
        return constants$2302.G_CSET_A_2_Z$SEGMENT;
    }
    public static MemorySegment G_CSET_a_2_z() {
        return constants$2302.G_CSET_a_2_z$SEGMENT;
    }
    public static MemorySegment G_CSET_DIGITS() {
        return constants$2302.G_CSET_DIGITS$SEGMENT;
    }
    public static MemorySegment G_CSET_LATINC() {
        return constants$2302.G_CSET_LATINC$SEGMENT;
    }
    public static MemorySegment G_CSET_LATINS() {
        return constants$2303.G_CSET_LATINS$SEGMENT;
    }
    public static MemorySegment G_STR_DELIMITERS() {
        return constants$2303.G_STR_DELIMITERS$SEGMENT;
    }
    public static int G_ASCII_DTOSTR_BUF_SIZE() {
        return (int)39L;
    }
    public static int EWOULDBLOCK() {
        return (int)11L;
    }
    public static int EDEADLOCK() {
        return (int)35L;
    }
    public static int ENOTSUP() {
        return (int)95L;
    }
    public static MemorySegment G_TEST_OPTION_ISOLATE_DIRS() {
        return constants$2303.G_TEST_OPTION_ISOLATE_DIRS$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_GENERIC_DELIMITERS() {
        return constants$2303.G_URI_RESERVED_CHARS_GENERIC_DELIMITERS$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS() {
        return constants$2303.G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT() {
        return constants$2303.G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_ALLOWED_IN_PATH() {
        return constants$2304.G_URI_RESERVED_CHARS_ALLOWED_IN_PATH$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO() {
        return constants$2304.G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO$SEGMENT;
    }
    public static long __NCPUBITS() {
        return 64L;
    }
    public static MemoryAddress PTHREAD_CANCELED() {
        return constants$2304.PTHREAD_CANCELED$ADDR;
    }
    public static int PTHREAD_BARRIER_SERIAL_THREAD() {
        return (int)-1L;
    }
    public static int GDK_MAJOR_VERSION() {
        return (int)3L;
    }
    public static int GDK_MINOR_VERSION() {
        return (int)24L;
    }
    public static int GDK_MICRO_VERSION() {
        return (int)30L;
    }
    public static int GDK_VERSION_3_0() {
        return (int)196608L;
    }
    public static int GDK_VERSION_3_2() {
        return (int)197120L;
    }
    public static int GDK_VERSION_3_4() {
        return (int)197632L;
    }
    public static int GDK_VERSION_3_6() {
        return (int)198144L;
    }
    public static int GDK_VERSION_3_8() {
        return (int)198656L;
    }
    public static int GDK_VERSION_3_10() {
        return (int)199168L;
    }
    public static int GDK_VERSION_3_12() {
        return (int)199680L;
    }
    public static int GDK_VERSION_3_14() {
        return (int)200192L;
    }
    public static int GDK_VERSION_3_16() {
        return (int)200704L;
    }
    public static int GDK_VERSION_3_18() {
        return (int)201216L;
    }
    public static int GDK_VERSION_3_20() {
        return (int)201728L;
    }
    public static int GDK_VERSION_3_22() {
        return (int)202240L;
    }
    public static int GDK_VERSION_3_24() {
        return (int)202752L;
    }
    public static int GDK_VERSION_CUR_STABLE() {
        return (int)202752L;
    }
    public static int GDK_VERSION_PREV_STABLE() {
        return (int)202240L;
    }
    public static int GDK_VERSION_MIN_REQUIRED() {
        return (int)202752L;
    }
    public static int GDK_VERSION_MAX_ALLOWED() {
        return (int)202752L;
    }
    public static int G_TYPE_FUNDAMENTAL_MAX() {
        return (int)1020L;
    }
    public static long G_TYPE_INVALID() {
        return 0L;
    }
    public static long G_TYPE_NONE() {
        return 4L;
    }
    public static long G_TYPE_INTERFACE() {
        return 8L;
    }
    public static long G_TYPE_CHAR() {
        return 12L;
    }
    public static long G_TYPE_UCHAR() {
        return 16L;
    }
    public static long G_TYPE_BOOLEAN() {
        return 20L;
    }
    public static long G_TYPE_INT() {
        return 24L;
    }
    public static long G_TYPE_UINT() {
        return 28L;
    }
    public static long G_TYPE_LONG() {
        return 32L;
    }
    public static long G_TYPE_ULONG() {
        return 36L;
    }
    public static long G_TYPE_INT64() {
        return 40L;
    }
    public static long G_TYPE_UINT64() {
        return 44L;
    }
    public static long G_TYPE_ENUM() {
        return 48L;
    }
    public static long G_TYPE_FLAGS() {
        return 52L;
    }
    public static long G_TYPE_FLOAT() {
        return 56L;
    }
    public static long G_TYPE_DOUBLE() {
        return 60L;
    }
    public static long G_TYPE_STRING() {
        return 64L;
    }
    public static long G_TYPE_POINTER() {
        return 68L;
    }
    public static long G_TYPE_BOXED() {
        return 72L;
    }
    public static long G_TYPE_PARAM() {
        return 76L;
    }
    public static long G_TYPE_OBJECT() {
        return 80L;
    }
    public static long G_TYPE_VARIANT() {
        return 84L;
    }
    public static int G_TYPE_FUNDAMENTAL_SHIFT() {
        return (int)2L;
    }
    public static int G_TYPE_RESERVED_GLIB_FIRST() {
        return (int)22L;
    }
    public static int G_TYPE_RESERVED_GLIB_LAST() {
        return (int)31L;
    }
    public static int G_TYPE_RESERVED_BSE_FIRST() {
        return (int)32L;
    }
    public static int G_TYPE_RESERVED_BSE_LAST() {
        return (int)48L;
    }
    public static int G_TYPE_RESERVED_USER_FIRST() {
        return (int)49L;
    }
    public static long G_TYPE_FLAG_RESERVED_ID_BIT() {
        return 1L;
    }
    public static int G_VALUE_NOCOPY_CONTENTS() {
        return (int)134217728L;
    }
    public static int G_VALUE_INTERNED_STRING() {
        return (int)268435456L;
    }
    public static int G_PARAM_STATIC_STRINGS() {
        return (int)224L;
    }
    public static int G_PARAM_MASK() {
        return (int)255L;
    }
    public static int G_PARAM_USER_SHIFT() {
        return (int)8L;
    }
    public static long G_SIGNAL_TYPE_STATIC_SCOPE() {
        return 1L;
    }
    public static long _POSIX_VERSION() {
        return 200809L;
    }
    public static long __POSIX2_THIS_VERSION() {
        return 200809L;
    }
    public static long _POSIX2_VERSION() {
        return 200809L;
    }
    public static long _POSIX2_C_VERSION() {
        return 200809L;
    }
    public static long _POSIX2_C_BIND() {
        return 200809L;
    }
    public static long _POSIX2_C_DEV() {
        return 200809L;
    }
    public static long _POSIX2_SW_DEV() {
        return 200809L;
    }
    public static long _POSIX2_LOCALEDEF() {
        return 200809L;
    }
    public static long _POSIX_PRIORITY_SCHEDULING() {
        return 200809L;
    }
    public static long _POSIX_SYNCHRONIZED_IO() {
        return 200809L;
    }
    public static long _POSIX_FSYNC() {
        return 200809L;
    }
    public static long _POSIX_MAPPED_FILES() {
        return 200809L;
    }
    public static long _POSIX_MEMLOCK() {
        return 200809L;
    }
    public static long _POSIX_MEMLOCK_RANGE() {
        return 200809L;
    }
    public static long _POSIX_MEMORY_PROTECTION() {
        return 200809L;
    }
    public static int _POSIX_VDISABLE() {
        return (int)0L;
    }
    public static long _POSIX_THREADS() {
        return 200809L;
    }
    public static long _POSIX_THREAD_SAFE_FUNCTIONS() {
        return 200809L;
    }
    public static long _POSIX_THREAD_PRIORITY_SCHEDULING() {
        return 200809L;
    }
    public static long _POSIX_THREAD_ATTR_STACKSIZE() {
        return 200809L;
    }
    public static long _POSIX_THREAD_ATTR_STACKADDR() {
        return 200809L;
    }
    public static long _POSIX_THREAD_PRIO_INHERIT() {
        return 200809L;
    }
    public static long _POSIX_THREAD_PRIO_PROTECT() {
        return 200809L;
    }
    public static long _POSIX_THREAD_ROBUST_PRIO_INHERIT() {
        return 200809L;
    }
    public static int _POSIX_THREAD_ROBUST_PRIO_PROTECT() {
        return (int)-1L;
    }
    public static long _POSIX_SEMAPHORES() {
        return 200809L;
    }
    public static long _POSIX_REALTIME_SIGNALS() {
        return 200809L;
    }
    public static long _POSIX_ASYNCHRONOUS_IO() {
        return 200809L;
    }
    public static long _POSIX_PRIORITIZED_IO() {
        return 200809L;
    }
    public static long _POSIX_SHARED_MEMORY_OBJECTS() {
        return 200809L;
    }
    public static long _POSIX_READER_WRITER_LOCKS() {
        return 200809L;
    }
    public static long _POSIX_TIMEOUTS() {
        return 200809L;
    }
    public static long _POSIX_SPIN_LOCKS() {
        return 200809L;
    }
    public static long _POSIX_SPAWN() {
        return 200809L;
    }
    public static long _POSIX_TIMERS() {
        return 200809L;
    }
    public static long _POSIX_BARRIERS() {
        return 200809L;
    }
    public static long _POSIX_MESSAGE_PASSING() {
        return 200809L;
    }
    public static long _POSIX_THREAD_PROCESS_SHARED() {
        return 200809L;
    }
    public static long _POSIX_CLOCK_SELECTION() {
        return 200809L;
    }
    public static long _POSIX_ADVISORY_INFO() {
        return 200809L;
    }
    public static long _POSIX_IPV6() {
        return 200809L;
    }
    public static long _POSIX_RAW_SOCKETS() {
        return 200809L;
    }
    public static long _POSIX2_CHAR_TERM() {
        return 200809L;
    }
    public static int _POSIX_SPORADIC_SERVER() {
        return (int)-1L;
    }
    public static int _POSIX_THREAD_SPORADIC_SERVER() {
        return (int)-1L;
    }
    public static int _POSIX_TRACE() {
        return (int)-1L;
    }
    public static int _POSIX_TRACE_EVENT_FILTER() {
        return (int)-1L;
    }
    public static int _POSIX_TRACE_INHERIT() {
        return (int)-1L;
    }
    public static int _POSIX_TRACE_LOG() {
        return (int)-1L;
    }
    public static int _POSIX_TYPED_MEMORY_OBJECTS() {
        return (int)-1L;
    }
    public static int _POSIX_V7_LPBIG_OFFBIG() {
        return (int)-1L;
    }
    public static int _POSIX_V6_LPBIG_OFFBIG() {
        return (int)-1L;
    }
    public static int _XBS5_LPBIG_OFFBIG() {
        return (int)-1L;
    }
    public static MemorySegment __ILP32_OFF32_CFLAGS() {
        return constants$2304.__ILP32_OFF32_CFLAGS$SEGMENT;
    }
    public static MemorySegment __ILP32_OFF32_LDFLAGS() {
        return constants$2304.__ILP32_OFF32_LDFLAGS$SEGMENT;
    }
    public static MemorySegment __ILP32_OFFBIG_CFLAGS() {
        return constants$2304.__ILP32_OFFBIG_CFLAGS$SEGMENT;
    }
    public static MemorySegment __ILP32_OFFBIG_LDFLAGS() {
        return constants$2305.__ILP32_OFFBIG_LDFLAGS$SEGMENT;
    }
    public static MemorySegment __LP64_OFF64_CFLAGS() {
        return constants$2305.__LP64_OFF64_CFLAGS$SEGMENT;
    }
    public static MemorySegment __LP64_OFF64_LDFLAGS() {
        return constants$2305.__LP64_OFF64_LDFLAGS$SEGMENT;
    }
    public static int L_SET() {
        return (int)0L;
    }
    public static int L_INCR() {
        return (int)1L;
    }
    public static int L_XTND() {
        return (int)2L;
    }
    public static int _SC_PAGE_SIZE() {
        return (int)30L;
    }
    public static int _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS() {
        return (int)1L;
    }
    public static int _CS_POSIX_V5_WIDTH_RESTRICTED_ENVS() {
        return (int)4L;
    }
    public static int _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS() {
        return (int)5L;
    }
    public static int G_DBUS_METHOD_INVOCATION_HANDLED() {
        return (int)1L;
    }
    public static int G_DBUS_METHOD_INVOCATION_UNHANDLED() {
        return (int)0L;
    }
    public static MemorySegment G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE() {
        return constants$2305.G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_TYPE() {
        return constants$2305.G_FILE_ATTRIBUTE_STANDARD_TYPE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN() {
        return constants$2305.G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP() {
        return constants$2306.G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK() {
        return constants$2306.G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL() {
        return constants$2306.G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE() {
        return constants$2306.G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_NAME() {
        return constants$2306.G_FILE_ATTRIBUTE_STANDARD_NAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME() {
        return constants$2306.G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME() {
        return constants$2307.G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_COPY_NAME() {
        return constants$2307.G_FILE_ATTRIBUTE_STANDARD_COPY_NAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION() {
        return constants$2307.G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_ICON() {
        return constants$2307.G_FILE_ATTRIBUTE_STANDARD_ICON$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON() {
        return constants$2307.G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE() {
        return constants$2307.G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE() {
        return constants$2308.G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_SIZE() {
        return constants$2308.G_FILE_ATTRIBUTE_STANDARD_SIZE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE() {
        return constants$2308.G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET() {
        return constants$2308.G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_TARGET_URI() {
        return constants$2308.G_FILE_ATTRIBUTE_STANDARD_TARGET_URI$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER() {
        return constants$2308.G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ETAG_VALUE() {
        return constants$2309.G_FILE_ATTRIBUTE_ETAG_VALUE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ID_FILE() {
        return constants$2309.G_FILE_ATTRIBUTE_ID_FILE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ID_FILESYSTEM() {
        return constants$2309.G_FILE_ATTRIBUTE_ID_FILESYSTEM$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_READ() {
        return constants$2309.G_FILE_ATTRIBUTE_ACCESS_CAN_READ$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE() {
        return constants$2309.G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE() {
        return constants$2309.G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE() {
        return constants$2310.G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH() {
        return constants$2310.G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME() {
        return constants$2310.G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT() {
        return constants$2310.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT() {
        return constants$2310.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT() {
        return constants$2310.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE() {
        return constants$2311.G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE() {
        return constants$2311.G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE$SEGMENT;
    }
}


