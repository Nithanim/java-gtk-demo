// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1503 {

    static final FunctionDescriptor glib_autoptr_cleanup_GtkAccelMap$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_cleanup_GtkAccelMap$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_cleanup_GtkAccelMap",
        constants$1503.glib_autoptr_cleanup_GtkAccelMap$FUNC, false
    );
    static final FunctionDescriptor glib_listautoptr_cleanup_GtkAccelMap$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_listautoptr_cleanup_GtkAccelMap$MH = RuntimeHelper.downcallHandle(
        "glib_listautoptr_cleanup_GtkAccelMap",
        constants$1503.glib_listautoptr_cleanup_GtkAccelMap$FUNC, false
    );
    static final FunctionDescriptor glib_slistautoptr_cleanup_GtkAccelMap$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_slistautoptr_cleanup_GtkAccelMap$MH = RuntimeHelper.downcallHandle(
        "glib_slistautoptr_cleanup_GtkAccelMap",
        constants$1503.glib_slistautoptr_cleanup_GtkAccelMap$FUNC, false
    );
    static final FunctionDescriptor glib_queueautoptr_cleanup_GtkAccelMap$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_queueautoptr_cleanup_GtkAccelMap$MH = RuntimeHelper.downcallHandle(
        "glib_queueautoptr_cleanup_GtkAccelMap",
        constants$1503.glib_queueautoptr_cleanup_GtkAccelMap$FUNC, false
    );
    static final FunctionDescriptor gtk_accessible_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle gtk_accessible_get_type$MH = RuntimeHelper.downcallHandle(
        "gtk_accessible_get_type",
        constants$1503.gtk_accessible_get_type$FUNC, false
    );
    static final FunctionDescriptor gtk_accessible_set_widget$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_accessible_set_widget$MH = RuntimeHelper.downcallHandle(
        "gtk_accessible_set_widget",
        constants$1503.gtk_accessible_set_widget$FUNC, false
    );
}


