// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$531 {

    static final FunctionDescriptor g_application_mark_busy$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_mark_busy$MH = RuntimeHelper.downcallHandle(
        "g_application_mark_busy",
        constants$531.g_application_mark_busy$FUNC, false
    );
    static final FunctionDescriptor g_application_unmark_busy$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_unmark_busy$MH = RuntimeHelper.downcallHandle(
        "g_application_unmark_busy",
        constants$531.g_application_unmark_busy$FUNC, false
    );
    static final FunctionDescriptor g_application_get_is_busy$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_get_is_busy$MH = RuntimeHelper.downcallHandle(
        "g_application_get_is_busy",
        constants$531.g_application_get_is_busy$FUNC, false
    );
    static final FunctionDescriptor g_application_send_notification$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_send_notification$MH = RuntimeHelper.downcallHandle(
        "g_application_send_notification",
        constants$531.g_application_send_notification$FUNC, false
    );
    static final FunctionDescriptor g_application_withdraw_notification$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_withdraw_notification$MH = RuntimeHelper.downcallHandle(
        "g_application_withdraw_notification",
        constants$531.g_application_withdraw_notification$FUNC, false
    );
    static final FunctionDescriptor g_application_bind_busy_property$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_bind_busy_property$MH = RuntimeHelper.downcallHandle(
        "g_application_bind_busy_property",
        constants$531.g_application_bind_busy_property$FUNC, false
    );
}


