// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class test_h_20 extends test_h_19 {

    public static MethodHandle glib_autoptr_clear_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.glib_autoptr_clear_GtkAppChooserDialog$MH,"glib_autoptr_clear_GtkAppChooserDialog");
    }
    public static void glib_autoptr_clear_GtkAppChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2146.glib_autoptr_clear_GtkAppChooserDialog$MH, "glib_autoptr_clear_GtkAppChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.glib_autoptr_cleanup_GtkAppChooserDialog$MH,"glib_autoptr_cleanup_GtkAppChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkAppChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2146.glib_autoptr_cleanup_GtkAppChooserDialog$MH, "glib_autoptr_cleanup_GtkAppChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.glib_listautoptr_cleanup_GtkAppChooserDialog$MH,"glib_listautoptr_cleanup_GtkAppChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkAppChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2146.glib_listautoptr_cleanup_GtkAppChooserDialog$MH, "glib_listautoptr_cleanup_GtkAppChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.glib_slistautoptr_cleanup_GtkAppChooserDialog$MH,"glib_slistautoptr_cleanup_GtkAppChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkAppChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2146.glib_slistautoptr_cleanup_GtkAppChooserDialog$MH, "glib_slistautoptr_cleanup_GtkAppChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.glib_queueautoptr_cleanup_GtkAppChooserDialog$MH,"glib_queueautoptr_cleanup_GtkAppChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkAppChooserDialog ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2146.glib_queueautoptr_cleanup_GtkAppChooserDialog$MH, "glib_queueautoptr_cleanup_GtkAppChooserDialog");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAppChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.glib_autoptr_clear_GtkAppChooserWidget$MH,"glib_autoptr_clear_GtkAppChooserWidget");
    }
    public static void glib_autoptr_clear_GtkAppChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2146.glib_autoptr_clear_GtkAppChooserWidget$MH, "glib_autoptr_clear_GtkAppChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.glib_autoptr_cleanup_GtkAppChooserWidget$MH,"glib_autoptr_cleanup_GtkAppChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkAppChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2147.glib_autoptr_cleanup_GtkAppChooserWidget$MH, "glib_autoptr_cleanup_GtkAppChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.glib_listautoptr_cleanup_GtkAppChooserWidget$MH,"glib_listautoptr_cleanup_GtkAppChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkAppChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2147.glib_listautoptr_cleanup_GtkAppChooserWidget$MH, "glib_listautoptr_cleanup_GtkAppChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.glib_slistautoptr_cleanup_GtkAppChooserWidget$MH,"glib_slistautoptr_cleanup_GtkAppChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkAppChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2147.glib_slistautoptr_cleanup_GtkAppChooserWidget$MH, "glib_slistautoptr_cleanup_GtkAppChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.glib_queueautoptr_cleanup_GtkAppChooserWidget$MH,"glib_queueautoptr_cleanup_GtkAppChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkAppChooserWidget ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2147.glib_queueautoptr_cleanup_GtkAppChooserWidget$MH, "glib_queueautoptr_cleanup_GtkAppChooserWidget");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkApplicationWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkApplicationWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkApplicationWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkApplicationWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.glib_autoptr_clear_GtkApplicationWindow$MH,"glib_autoptr_clear_GtkApplicationWindow");
    }
    public static void glib_autoptr_clear_GtkApplicationWindow ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2147.glib_autoptr_clear_GtkApplicationWindow$MH, "glib_autoptr_clear_GtkApplicationWindow");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.glib_autoptr_cleanup_GtkApplicationWindow$MH,"glib_autoptr_cleanup_GtkApplicationWindow");
    }
    public static void glib_autoptr_cleanup_GtkApplicationWindow ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2147.glib_autoptr_cleanup_GtkApplicationWindow$MH, "glib_autoptr_cleanup_GtkApplicationWindow");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.glib_listautoptr_cleanup_GtkApplicationWindow$MH,"glib_listautoptr_cleanup_GtkApplicationWindow");
    }
    public static void glib_listautoptr_cleanup_GtkApplicationWindow ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2148.glib_listautoptr_cleanup_GtkApplicationWindow$MH, "glib_listautoptr_cleanup_GtkApplicationWindow");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.glib_slistautoptr_cleanup_GtkApplicationWindow$MH,"glib_slistautoptr_cleanup_GtkApplicationWindow");
    }
    public static void glib_slistautoptr_cleanup_GtkApplicationWindow ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2148.glib_slistautoptr_cleanup_GtkApplicationWindow$MH, "glib_slistautoptr_cleanup_GtkApplicationWindow");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.glib_queueautoptr_cleanup_GtkApplicationWindow$MH,"glib_queueautoptr_cleanup_GtkApplicationWindow");
    }
    public static void glib_queueautoptr_cleanup_GtkApplicationWindow ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2148.glib_queueautoptr_cleanup_GtkApplicationWindow$MH, "glib_queueautoptr_cleanup_GtkApplicationWindow");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAspectFrame_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAspectFrame_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAspectFrame_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAspectFrame_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.glib_autoptr_clear_GtkAspectFrame$MH,"glib_autoptr_clear_GtkAspectFrame");
    }
    public static void glib_autoptr_clear_GtkAspectFrame ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2148.glib_autoptr_clear_GtkAspectFrame$MH, "glib_autoptr_clear_GtkAspectFrame");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.glib_autoptr_cleanup_GtkAspectFrame$MH,"glib_autoptr_cleanup_GtkAspectFrame");
    }
    public static void glib_autoptr_cleanup_GtkAspectFrame ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2148.glib_autoptr_cleanup_GtkAspectFrame$MH, "glib_autoptr_cleanup_GtkAspectFrame");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.glib_listautoptr_cleanup_GtkAspectFrame$MH,"glib_listautoptr_cleanup_GtkAspectFrame");
    }
    public static void glib_listautoptr_cleanup_GtkAspectFrame ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2148.glib_listautoptr_cleanup_GtkAspectFrame$MH, "glib_listautoptr_cleanup_GtkAspectFrame");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.glib_slistautoptr_cleanup_GtkAspectFrame$MH,"glib_slistautoptr_cleanup_GtkAspectFrame");
    }
    public static void glib_slistautoptr_cleanup_GtkAspectFrame ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2149.glib_slistautoptr_cleanup_GtkAspectFrame$MH, "glib_slistautoptr_cleanup_GtkAspectFrame");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.glib_queueautoptr_cleanup_GtkAspectFrame$MH,"glib_queueautoptr_cleanup_GtkAspectFrame");
    }
    public static void glib_queueautoptr_cleanup_GtkAspectFrame ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2149.glib_queueautoptr_cleanup_GtkAspectFrame$MH, "glib_queueautoptr_cleanup_GtkAspectFrame");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAssistant_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAssistant_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAssistant_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAssistant_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.glib_autoptr_clear_GtkAssistant$MH,"glib_autoptr_clear_GtkAssistant");
    }
    public static void glib_autoptr_clear_GtkAssistant ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2149.glib_autoptr_clear_GtkAssistant$MH, "glib_autoptr_clear_GtkAssistant");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.glib_autoptr_cleanup_GtkAssistant$MH,"glib_autoptr_cleanup_GtkAssistant");
    }
    public static void glib_autoptr_cleanup_GtkAssistant ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2149.glib_autoptr_cleanup_GtkAssistant$MH, "glib_autoptr_cleanup_GtkAssistant");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.glib_listautoptr_cleanup_GtkAssistant$MH,"glib_listautoptr_cleanup_GtkAssistant");
    }
    public static void glib_listautoptr_cleanup_GtkAssistant ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2149.glib_listautoptr_cleanup_GtkAssistant$MH, "glib_listautoptr_cleanup_GtkAssistant");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.glib_slistautoptr_cleanup_GtkAssistant$MH,"glib_slistautoptr_cleanup_GtkAssistant");
    }
    public static void glib_slistautoptr_cleanup_GtkAssistant ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2149.glib_slistautoptr_cleanup_GtkAssistant$MH, "glib_slistautoptr_cleanup_GtkAssistant");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.glib_queueautoptr_cleanup_GtkAssistant$MH,"glib_queueautoptr_cleanup_GtkAssistant");
    }
    public static void glib_queueautoptr_cleanup_GtkAssistant ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2150.glib_queueautoptr_cleanup_GtkAssistant$MH, "glib_queueautoptr_cleanup_GtkAssistant");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.glib_autoptr_clear_GtkBox$MH,"glib_autoptr_clear_GtkBox");
    }
    public static void glib_autoptr_clear_GtkBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2150.glib_autoptr_clear_GtkBox$MH, "glib_autoptr_clear_GtkBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.glib_autoptr_cleanup_GtkBox$MH,"glib_autoptr_cleanup_GtkBox");
    }
    public static void glib_autoptr_cleanup_GtkBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2150.glib_autoptr_cleanup_GtkBox$MH, "glib_autoptr_cleanup_GtkBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.glib_listautoptr_cleanup_GtkBox$MH,"glib_listautoptr_cleanup_GtkBox");
    }
    public static void glib_listautoptr_cleanup_GtkBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2150.glib_listautoptr_cleanup_GtkBox$MH, "glib_listautoptr_cleanup_GtkBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.glib_slistautoptr_cleanup_GtkBox$MH,"glib_slistautoptr_cleanup_GtkBox");
    }
    public static void glib_slistautoptr_cleanup_GtkBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2150.glib_slistautoptr_cleanup_GtkBox$MH, "glib_slistautoptr_cleanup_GtkBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.glib_queueautoptr_cleanup_GtkBox$MH,"glib_queueautoptr_cleanup_GtkBox");
    }
    public static void glib_queueautoptr_cleanup_GtkBox ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2150.glib_queueautoptr_cleanup_GtkBox$MH, "glib_queueautoptr_cleanup_GtkBox");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkBuildable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuildable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuildable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuildable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.glib_autoptr_clear_GtkBuildable$MH,"glib_autoptr_clear_GtkBuildable");
    }
    public static void glib_autoptr_clear_GtkBuildable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2151.glib_autoptr_clear_GtkBuildable$MH, "glib_autoptr_clear_GtkBuildable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.glib_autoptr_cleanup_GtkBuildable$MH,"glib_autoptr_cleanup_GtkBuildable");
    }
    public static void glib_autoptr_cleanup_GtkBuildable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2151.glib_autoptr_cleanup_GtkBuildable$MH, "glib_autoptr_cleanup_GtkBuildable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.glib_listautoptr_cleanup_GtkBuildable$MH,"glib_listautoptr_cleanup_GtkBuildable");
    }
    public static void glib_listautoptr_cleanup_GtkBuildable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2151.glib_listautoptr_cleanup_GtkBuildable$MH, "glib_listautoptr_cleanup_GtkBuildable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.glib_slistautoptr_cleanup_GtkBuildable$MH,"glib_slistautoptr_cleanup_GtkBuildable");
    }
    public static void glib_slistautoptr_cleanup_GtkBuildable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2151.glib_slistautoptr_cleanup_GtkBuildable$MH, "glib_slistautoptr_cleanup_GtkBuildable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.glib_queueautoptr_cleanup_GtkBuildable$MH,"glib_queueautoptr_cleanup_GtkBuildable");
    }
    public static void glib_queueautoptr_cleanup_GtkBuildable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2151.glib_queueautoptr_cleanup_GtkBuildable$MH, "glib_queueautoptr_cleanup_GtkBuildable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkBuilder_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuilder_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuilder_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuilder_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.glib_autoptr_clear_GtkBuilder$MH,"glib_autoptr_clear_GtkBuilder");
    }
    public static void glib_autoptr_clear_GtkBuilder ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2151.glib_autoptr_clear_GtkBuilder$MH, "glib_autoptr_clear_GtkBuilder");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.glib_autoptr_cleanup_GtkBuilder$MH,"glib_autoptr_cleanup_GtkBuilder");
    }
    public static void glib_autoptr_cleanup_GtkBuilder ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2152.glib_autoptr_cleanup_GtkBuilder$MH, "glib_autoptr_cleanup_GtkBuilder");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.glib_listautoptr_cleanup_GtkBuilder$MH,"glib_listautoptr_cleanup_GtkBuilder");
    }
    public static void glib_listautoptr_cleanup_GtkBuilder ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2152.glib_listautoptr_cleanup_GtkBuilder$MH, "glib_listautoptr_cleanup_GtkBuilder");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.glib_slistautoptr_cleanup_GtkBuilder$MH,"glib_slistautoptr_cleanup_GtkBuilder");
    }
    public static void glib_slistautoptr_cleanup_GtkBuilder ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2152.glib_slistautoptr_cleanup_GtkBuilder$MH, "glib_slistautoptr_cleanup_GtkBuilder");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.glib_queueautoptr_cleanup_GtkBuilder$MH,"glib_queueautoptr_cleanup_GtkBuilder");
    }
    public static void glib_queueautoptr_cleanup_GtkBuilder ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2152.glib_queueautoptr_cleanup_GtkBuilder$MH, "glib_queueautoptr_cleanup_GtkBuilder");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.glib_autoptr_clear_GtkButton$MH,"glib_autoptr_clear_GtkButton");
    }
    public static void glib_autoptr_clear_GtkButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2152.glib_autoptr_clear_GtkButton$MH, "glib_autoptr_clear_GtkButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.glib_autoptr_cleanup_GtkButton$MH,"glib_autoptr_cleanup_GtkButton");
    }
    public static void glib_autoptr_cleanup_GtkButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2152.glib_autoptr_cleanup_GtkButton$MH, "glib_autoptr_cleanup_GtkButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.glib_listautoptr_cleanup_GtkButton$MH,"glib_listautoptr_cleanup_GtkButton");
    }
    public static void glib_listautoptr_cleanup_GtkButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2153.glib_listautoptr_cleanup_GtkButton$MH, "glib_listautoptr_cleanup_GtkButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.glib_slistautoptr_cleanup_GtkButton$MH,"glib_slistautoptr_cleanup_GtkButton");
    }
    public static void glib_slistautoptr_cleanup_GtkButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2153.glib_slistautoptr_cleanup_GtkButton$MH, "glib_slistautoptr_cleanup_GtkButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.glib_queueautoptr_cleanup_GtkButton$MH,"glib_queueautoptr_cleanup_GtkButton");
    }
    public static void glib_queueautoptr_cleanup_GtkButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2153.glib_queueautoptr_cleanup_GtkButton$MH, "glib_queueautoptr_cleanup_GtkButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkButtonBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButtonBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButtonBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButtonBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkButtonBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.glib_autoptr_clear_GtkButtonBox$MH,"glib_autoptr_clear_GtkButtonBox");
    }
    public static void glib_autoptr_clear_GtkButtonBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2153.glib_autoptr_clear_GtkButtonBox$MH, "glib_autoptr_clear_GtkButtonBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkButtonBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.glib_autoptr_cleanup_GtkButtonBox$MH,"glib_autoptr_cleanup_GtkButtonBox");
    }
    public static void glib_autoptr_cleanup_GtkButtonBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2153.glib_autoptr_cleanup_GtkButtonBox$MH, "glib_autoptr_cleanup_GtkButtonBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkButtonBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.glib_listautoptr_cleanup_GtkButtonBox$MH,"glib_listautoptr_cleanup_GtkButtonBox");
    }
    public static void glib_listautoptr_cleanup_GtkButtonBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2153.glib_listautoptr_cleanup_GtkButtonBox$MH, "glib_listautoptr_cleanup_GtkButtonBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkButtonBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.glib_slistautoptr_cleanup_GtkButtonBox$MH,"glib_slistautoptr_cleanup_GtkButtonBox");
    }
    public static void glib_slistautoptr_cleanup_GtkButtonBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2154.glib_slistautoptr_cleanup_GtkButtonBox$MH, "glib_slistautoptr_cleanup_GtkButtonBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkButtonBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.glib_queueautoptr_cleanup_GtkButtonBox$MH,"glib_queueautoptr_cleanup_GtkButtonBox");
    }
    public static void glib_queueautoptr_cleanup_GtkButtonBox ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2154.glib_queueautoptr_cleanup_GtkButtonBox$MH, "glib_queueautoptr_cleanup_GtkButtonBox");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCalendar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCalendar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCalendar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCalendar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.glib_autoptr_clear_GtkCalendar$MH,"glib_autoptr_clear_GtkCalendar");
    }
    public static void glib_autoptr_clear_GtkCalendar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2154.glib_autoptr_clear_GtkCalendar$MH, "glib_autoptr_clear_GtkCalendar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.glib_autoptr_cleanup_GtkCalendar$MH,"glib_autoptr_cleanup_GtkCalendar");
    }
    public static void glib_autoptr_cleanup_GtkCalendar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2154.glib_autoptr_cleanup_GtkCalendar$MH, "glib_autoptr_cleanup_GtkCalendar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.glib_listautoptr_cleanup_GtkCalendar$MH,"glib_listautoptr_cleanup_GtkCalendar");
    }
    public static void glib_listautoptr_cleanup_GtkCalendar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2154.glib_listautoptr_cleanup_GtkCalendar$MH, "glib_listautoptr_cleanup_GtkCalendar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.glib_slistautoptr_cleanup_GtkCalendar$MH,"glib_slistautoptr_cleanup_GtkCalendar");
    }
    public static void glib_slistautoptr_cleanup_GtkCalendar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2154.glib_slistautoptr_cleanup_GtkCalendar$MH, "glib_slistautoptr_cleanup_GtkCalendar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.glib_queueautoptr_cleanup_GtkCalendar$MH,"glib_queueautoptr_cleanup_GtkCalendar");
    }
    public static void glib_queueautoptr_cleanup_GtkCalendar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2155.glib_queueautoptr_cleanup_GtkCalendar$MH, "glib_queueautoptr_cleanup_GtkCalendar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellArea_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellArea_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellArea_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellArea_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.glib_autoptr_clear_GtkCellArea$MH,"glib_autoptr_clear_GtkCellArea");
    }
    public static void glib_autoptr_clear_GtkCellArea ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2155.glib_autoptr_clear_GtkCellArea$MH, "glib_autoptr_clear_GtkCellArea");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.glib_autoptr_cleanup_GtkCellArea$MH,"glib_autoptr_cleanup_GtkCellArea");
    }
    public static void glib_autoptr_cleanup_GtkCellArea ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2155.glib_autoptr_cleanup_GtkCellArea$MH, "glib_autoptr_cleanup_GtkCellArea");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.glib_listautoptr_cleanup_GtkCellArea$MH,"glib_listautoptr_cleanup_GtkCellArea");
    }
    public static void glib_listautoptr_cleanup_GtkCellArea ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2155.glib_listautoptr_cleanup_GtkCellArea$MH, "glib_listautoptr_cleanup_GtkCellArea");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.glib_slistautoptr_cleanup_GtkCellArea$MH,"glib_slistautoptr_cleanup_GtkCellArea");
    }
    public static void glib_slistautoptr_cleanup_GtkCellArea ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2155.glib_slistautoptr_cleanup_GtkCellArea$MH, "glib_slistautoptr_cleanup_GtkCellArea");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.glib_queueautoptr_cleanup_GtkCellArea$MH,"glib_queueautoptr_cleanup_GtkCellArea");
    }
    public static void glib_queueautoptr_cleanup_GtkCellArea ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2155.glib_queueautoptr_cleanup_GtkCellArea$MH, "glib_queueautoptr_cleanup_GtkCellArea");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellAreaBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.glib_autoptr_clear_GtkCellAreaBox$MH,"glib_autoptr_clear_GtkCellAreaBox");
    }
    public static void glib_autoptr_clear_GtkCellAreaBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2156.glib_autoptr_clear_GtkCellAreaBox$MH, "glib_autoptr_clear_GtkCellAreaBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.glib_autoptr_cleanup_GtkCellAreaBox$MH,"glib_autoptr_cleanup_GtkCellAreaBox");
    }
    public static void glib_autoptr_cleanup_GtkCellAreaBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2156.glib_autoptr_cleanup_GtkCellAreaBox$MH, "glib_autoptr_cleanup_GtkCellAreaBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.glib_listautoptr_cleanup_GtkCellAreaBox$MH,"glib_listautoptr_cleanup_GtkCellAreaBox");
    }
    public static void glib_listautoptr_cleanup_GtkCellAreaBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2156.glib_listautoptr_cleanup_GtkCellAreaBox$MH, "glib_listautoptr_cleanup_GtkCellAreaBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.glib_slistautoptr_cleanup_GtkCellAreaBox$MH,"glib_slistautoptr_cleanup_GtkCellAreaBox");
    }
    public static void glib_slistautoptr_cleanup_GtkCellAreaBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2156.glib_slistautoptr_cleanup_GtkCellAreaBox$MH, "glib_slistautoptr_cleanup_GtkCellAreaBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.glib_queueautoptr_cleanup_GtkCellAreaBox$MH,"glib_queueautoptr_cleanup_GtkCellAreaBox");
    }
    public static void glib_queueautoptr_cleanup_GtkCellAreaBox ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2156.glib_queueautoptr_cleanup_GtkCellAreaBox$MH, "glib_queueautoptr_cleanup_GtkCellAreaBox");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellAreaContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.glib_autoptr_clear_GtkCellAreaContext$MH,"glib_autoptr_clear_GtkCellAreaContext");
    }
    public static void glib_autoptr_clear_GtkCellAreaContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2156.glib_autoptr_clear_GtkCellAreaContext$MH, "glib_autoptr_clear_GtkCellAreaContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.glib_autoptr_cleanup_GtkCellAreaContext$MH,"glib_autoptr_cleanup_GtkCellAreaContext");
    }
    public static void glib_autoptr_cleanup_GtkCellAreaContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2157.glib_autoptr_cleanup_GtkCellAreaContext$MH, "glib_autoptr_cleanup_GtkCellAreaContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.glib_listautoptr_cleanup_GtkCellAreaContext$MH,"glib_listautoptr_cleanup_GtkCellAreaContext");
    }
    public static void glib_listautoptr_cleanup_GtkCellAreaContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2157.glib_listautoptr_cleanup_GtkCellAreaContext$MH, "glib_listautoptr_cleanup_GtkCellAreaContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.glib_slistautoptr_cleanup_GtkCellAreaContext$MH,"glib_slistautoptr_cleanup_GtkCellAreaContext");
    }
    public static void glib_slistautoptr_cleanup_GtkCellAreaContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2157.glib_slistautoptr_cleanup_GtkCellAreaContext$MH, "glib_slistautoptr_cleanup_GtkCellAreaContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.glib_queueautoptr_cleanup_GtkCellAreaContext$MH,"glib_queueautoptr_cleanup_GtkCellAreaContext");
    }
    public static void glib_queueautoptr_cleanup_GtkCellAreaContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2157.glib_queueautoptr_cleanup_GtkCellAreaContext$MH, "glib_queueautoptr_cleanup_GtkCellAreaContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellEditable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellEditable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellEditable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellEditable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.glib_autoptr_clear_GtkCellEditable$MH,"glib_autoptr_clear_GtkCellEditable");
    }
    public static void glib_autoptr_clear_GtkCellEditable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2157.glib_autoptr_clear_GtkCellEditable$MH, "glib_autoptr_clear_GtkCellEditable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.glib_autoptr_cleanup_GtkCellEditable$MH,"glib_autoptr_cleanup_GtkCellEditable");
    }
    public static void glib_autoptr_cleanup_GtkCellEditable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2157.glib_autoptr_cleanup_GtkCellEditable$MH, "glib_autoptr_cleanup_GtkCellEditable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.glib_listautoptr_cleanup_GtkCellEditable$MH,"glib_listautoptr_cleanup_GtkCellEditable");
    }
    public static void glib_listautoptr_cleanup_GtkCellEditable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2158.glib_listautoptr_cleanup_GtkCellEditable$MH, "glib_listautoptr_cleanup_GtkCellEditable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.glib_slistautoptr_cleanup_GtkCellEditable$MH,"glib_slistautoptr_cleanup_GtkCellEditable");
    }
    public static void glib_slistautoptr_cleanup_GtkCellEditable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2158.glib_slistautoptr_cleanup_GtkCellEditable$MH, "glib_slistautoptr_cleanup_GtkCellEditable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.glib_queueautoptr_cleanup_GtkCellEditable$MH,"glib_queueautoptr_cleanup_GtkCellEditable");
    }
    public static void glib_queueautoptr_cleanup_GtkCellEditable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2158.glib_queueautoptr_cleanup_GtkCellEditable$MH, "glib_queueautoptr_cleanup_GtkCellEditable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.glib_autoptr_clear_GtkCellLayout$MH,"glib_autoptr_clear_GtkCellLayout");
    }
    public static void glib_autoptr_clear_GtkCellLayout ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2158.glib_autoptr_clear_GtkCellLayout$MH, "glib_autoptr_clear_GtkCellLayout");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.glib_autoptr_cleanup_GtkCellLayout$MH,"glib_autoptr_cleanup_GtkCellLayout");
    }
    public static void glib_autoptr_cleanup_GtkCellLayout ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2158.glib_autoptr_cleanup_GtkCellLayout$MH, "glib_autoptr_cleanup_GtkCellLayout");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.glib_listautoptr_cleanup_GtkCellLayout$MH,"glib_listautoptr_cleanup_GtkCellLayout");
    }
    public static void glib_listautoptr_cleanup_GtkCellLayout ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2158.glib_listautoptr_cleanup_GtkCellLayout$MH, "glib_listautoptr_cleanup_GtkCellLayout");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.glib_slistautoptr_cleanup_GtkCellLayout$MH,"glib_slistautoptr_cleanup_GtkCellLayout");
    }
    public static void glib_slistautoptr_cleanup_GtkCellLayout ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2159.glib_slistautoptr_cleanup_GtkCellLayout$MH, "glib_slistautoptr_cleanup_GtkCellLayout");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.glib_queueautoptr_cleanup_GtkCellLayout$MH,"glib_queueautoptr_cleanup_GtkCellLayout");
    }
    public static void glib_queueautoptr_cleanup_GtkCellLayout ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2159.glib_queueautoptr_cleanup_GtkCellLayout$MH, "glib_queueautoptr_cleanup_GtkCellLayout");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRenderer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRenderer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRenderer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRenderer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.glib_autoptr_clear_GtkCellRenderer$MH,"glib_autoptr_clear_GtkCellRenderer");
    }
    public static void glib_autoptr_clear_GtkCellRenderer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2159.glib_autoptr_clear_GtkCellRenderer$MH, "glib_autoptr_clear_GtkCellRenderer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.glib_autoptr_cleanup_GtkCellRenderer$MH,"glib_autoptr_cleanup_GtkCellRenderer");
    }
    public static void glib_autoptr_cleanup_GtkCellRenderer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2159.glib_autoptr_cleanup_GtkCellRenderer$MH, "glib_autoptr_cleanup_GtkCellRenderer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.glib_listautoptr_cleanup_GtkCellRenderer$MH,"glib_listautoptr_cleanup_GtkCellRenderer");
    }
    public static void glib_listautoptr_cleanup_GtkCellRenderer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2159.glib_listautoptr_cleanup_GtkCellRenderer$MH, "glib_listautoptr_cleanup_GtkCellRenderer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.glib_slistautoptr_cleanup_GtkCellRenderer$MH,"glib_slistautoptr_cleanup_GtkCellRenderer");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRenderer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2159.glib_slistautoptr_cleanup_GtkCellRenderer$MH, "glib_slistautoptr_cleanup_GtkCellRenderer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.glib_queueautoptr_cleanup_GtkCellRenderer$MH,"glib_queueautoptr_cleanup_GtkCellRenderer");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRenderer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2160.glib_queueautoptr_cleanup_GtkCellRenderer$MH, "glib_queueautoptr_cleanup_GtkCellRenderer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererAccel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererAccel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererAccel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererAccel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.glib_autoptr_clear_GtkCellRendererAccel$MH,"glib_autoptr_clear_GtkCellRendererAccel");
    }
    public static void glib_autoptr_clear_GtkCellRendererAccel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2160.glib_autoptr_clear_GtkCellRendererAccel$MH, "glib_autoptr_clear_GtkCellRendererAccel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.glib_autoptr_cleanup_GtkCellRendererAccel$MH,"glib_autoptr_cleanup_GtkCellRendererAccel");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererAccel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2160.glib_autoptr_cleanup_GtkCellRendererAccel$MH, "glib_autoptr_cleanup_GtkCellRendererAccel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.glib_listautoptr_cleanup_GtkCellRendererAccel$MH,"glib_listautoptr_cleanup_GtkCellRendererAccel");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererAccel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2160.glib_listautoptr_cleanup_GtkCellRendererAccel$MH, "glib_listautoptr_cleanup_GtkCellRendererAccel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.glib_slistautoptr_cleanup_GtkCellRendererAccel$MH,"glib_slistautoptr_cleanup_GtkCellRendererAccel");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererAccel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2160.glib_slistautoptr_cleanup_GtkCellRendererAccel$MH, "glib_slistautoptr_cleanup_GtkCellRendererAccel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.glib_queueautoptr_cleanup_GtkCellRendererAccel$MH,"glib_queueautoptr_cleanup_GtkCellRendererAccel");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererAccel ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2160.glib_queueautoptr_cleanup_GtkCellRendererAccel$MH, "glib_queueautoptr_cleanup_GtkCellRendererAccel");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererCombo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererCombo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererCombo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererCombo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.glib_autoptr_clear_GtkCellRendererCombo$MH,"glib_autoptr_clear_GtkCellRendererCombo");
    }
    public static void glib_autoptr_clear_GtkCellRendererCombo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2161.glib_autoptr_clear_GtkCellRendererCombo$MH, "glib_autoptr_clear_GtkCellRendererCombo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.glib_autoptr_cleanup_GtkCellRendererCombo$MH,"glib_autoptr_cleanup_GtkCellRendererCombo");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererCombo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2161.glib_autoptr_cleanup_GtkCellRendererCombo$MH, "glib_autoptr_cleanup_GtkCellRendererCombo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.glib_listautoptr_cleanup_GtkCellRendererCombo$MH,"glib_listautoptr_cleanup_GtkCellRendererCombo");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererCombo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2161.glib_listautoptr_cleanup_GtkCellRendererCombo$MH, "glib_listautoptr_cleanup_GtkCellRendererCombo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.glib_slistautoptr_cleanup_GtkCellRendererCombo$MH,"glib_slistautoptr_cleanup_GtkCellRendererCombo");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererCombo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2161.glib_slistautoptr_cleanup_GtkCellRendererCombo$MH, "glib_slistautoptr_cleanup_GtkCellRendererCombo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.glib_queueautoptr_cleanup_GtkCellRendererCombo$MH,"glib_queueautoptr_cleanup_GtkCellRendererCombo");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererCombo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2161.glib_queueautoptr_cleanup_GtkCellRendererCombo$MH, "glib_queueautoptr_cleanup_GtkCellRendererCombo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererPixbuf_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererPixbuf_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererPixbuf_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererPixbuf_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.glib_autoptr_clear_GtkCellRendererPixbuf$MH,"glib_autoptr_clear_GtkCellRendererPixbuf");
    }
    public static void glib_autoptr_clear_GtkCellRendererPixbuf ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2161.glib_autoptr_clear_GtkCellRendererPixbuf$MH, "glib_autoptr_clear_GtkCellRendererPixbuf");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.glib_autoptr_cleanup_GtkCellRendererPixbuf$MH,"glib_autoptr_cleanup_GtkCellRendererPixbuf");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererPixbuf ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2162.glib_autoptr_cleanup_GtkCellRendererPixbuf$MH, "glib_autoptr_cleanup_GtkCellRendererPixbuf");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.glib_listautoptr_cleanup_GtkCellRendererPixbuf$MH,"glib_listautoptr_cleanup_GtkCellRendererPixbuf");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererPixbuf ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2162.glib_listautoptr_cleanup_GtkCellRendererPixbuf$MH, "glib_listautoptr_cleanup_GtkCellRendererPixbuf");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.glib_slistautoptr_cleanup_GtkCellRendererPixbuf$MH,"glib_slistautoptr_cleanup_GtkCellRendererPixbuf");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererPixbuf ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2162.glib_slistautoptr_cleanup_GtkCellRendererPixbuf$MH, "glib_slistautoptr_cleanup_GtkCellRendererPixbuf");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.glib_queueautoptr_cleanup_GtkCellRendererPixbuf$MH,"glib_queueautoptr_cleanup_GtkCellRendererPixbuf");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererPixbuf ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2162.glib_queueautoptr_cleanup_GtkCellRendererPixbuf$MH, "glib_queueautoptr_cleanup_GtkCellRendererPixbuf");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererProgress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererProgress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererProgress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererProgress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.glib_autoptr_clear_GtkCellRendererProgress$MH,"glib_autoptr_clear_GtkCellRendererProgress");
    }
    public static void glib_autoptr_clear_GtkCellRendererProgress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2162.glib_autoptr_clear_GtkCellRendererProgress$MH, "glib_autoptr_clear_GtkCellRendererProgress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.glib_autoptr_cleanup_GtkCellRendererProgress$MH,"glib_autoptr_cleanup_GtkCellRendererProgress");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererProgress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2162.glib_autoptr_cleanup_GtkCellRendererProgress$MH, "glib_autoptr_cleanup_GtkCellRendererProgress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.glib_listautoptr_cleanup_GtkCellRendererProgress$MH,"glib_listautoptr_cleanup_GtkCellRendererProgress");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererProgress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2163.glib_listautoptr_cleanup_GtkCellRendererProgress$MH, "glib_listautoptr_cleanup_GtkCellRendererProgress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.glib_slistautoptr_cleanup_GtkCellRendererProgress$MH,"glib_slistautoptr_cleanup_GtkCellRendererProgress");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererProgress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2163.glib_slistautoptr_cleanup_GtkCellRendererProgress$MH, "glib_slistautoptr_cleanup_GtkCellRendererProgress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.glib_queueautoptr_cleanup_GtkCellRendererProgress$MH,"glib_queueautoptr_cleanup_GtkCellRendererProgress");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererProgress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2163.glib_queueautoptr_cleanup_GtkCellRendererProgress$MH, "glib_queueautoptr_cleanup_GtkCellRendererProgress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererSpin_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpin_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpin_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpin_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.glib_autoptr_clear_GtkCellRendererSpin$MH,"glib_autoptr_clear_GtkCellRendererSpin");
    }
    public static void glib_autoptr_clear_GtkCellRendererSpin ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2163.glib_autoptr_clear_GtkCellRendererSpin$MH, "glib_autoptr_clear_GtkCellRendererSpin");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.glib_autoptr_cleanup_GtkCellRendererSpin$MH,"glib_autoptr_cleanup_GtkCellRendererSpin");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererSpin ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2163.glib_autoptr_cleanup_GtkCellRendererSpin$MH, "glib_autoptr_cleanup_GtkCellRendererSpin");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.glib_listautoptr_cleanup_GtkCellRendererSpin$MH,"glib_listautoptr_cleanup_GtkCellRendererSpin");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererSpin ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2163.glib_listautoptr_cleanup_GtkCellRendererSpin$MH, "glib_listautoptr_cleanup_GtkCellRendererSpin");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.glib_slistautoptr_cleanup_GtkCellRendererSpin$MH,"glib_slistautoptr_cleanup_GtkCellRendererSpin");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererSpin ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2164.glib_slistautoptr_cleanup_GtkCellRendererSpin$MH, "glib_slistautoptr_cleanup_GtkCellRendererSpin");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.glib_queueautoptr_cleanup_GtkCellRendererSpin$MH,"glib_queueautoptr_cleanup_GtkCellRendererSpin");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererSpin ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2164.glib_queueautoptr_cleanup_GtkCellRendererSpin$MH, "glib_queueautoptr_cleanup_GtkCellRendererSpin");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererSpinner_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpinner_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpinner_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpinner_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.glib_autoptr_clear_GtkCellRendererSpinner$MH,"glib_autoptr_clear_GtkCellRendererSpinner");
    }
    public static void glib_autoptr_clear_GtkCellRendererSpinner ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2164.glib_autoptr_clear_GtkCellRendererSpinner$MH, "glib_autoptr_clear_GtkCellRendererSpinner");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.glib_autoptr_cleanup_GtkCellRendererSpinner$MH,"glib_autoptr_cleanup_GtkCellRendererSpinner");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererSpinner ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2164.glib_autoptr_cleanup_GtkCellRendererSpinner$MH, "glib_autoptr_cleanup_GtkCellRendererSpinner");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.glib_listautoptr_cleanup_GtkCellRendererSpinner$MH,"glib_listautoptr_cleanup_GtkCellRendererSpinner");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererSpinner ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2164.glib_listautoptr_cleanup_GtkCellRendererSpinner$MH, "glib_listautoptr_cleanup_GtkCellRendererSpinner");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.glib_slistautoptr_cleanup_GtkCellRendererSpinner$MH,"glib_slistautoptr_cleanup_GtkCellRendererSpinner");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererSpinner ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2164.glib_slistautoptr_cleanup_GtkCellRendererSpinner$MH, "glib_slistautoptr_cleanup_GtkCellRendererSpinner");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.glib_queueautoptr_cleanup_GtkCellRendererSpinner$MH,"glib_queueautoptr_cleanup_GtkCellRendererSpinner");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererSpinner ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2165.glib_queueautoptr_cleanup_GtkCellRendererSpinner$MH, "glib_queueautoptr_cleanup_GtkCellRendererSpinner");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererText_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererText_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererText_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererText_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.glib_autoptr_clear_GtkCellRendererText$MH,"glib_autoptr_clear_GtkCellRendererText");
    }
    public static void glib_autoptr_clear_GtkCellRendererText ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2165.glib_autoptr_clear_GtkCellRendererText$MH, "glib_autoptr_clear_GtkCellRendererText");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.glib_autoptr_cleanup_GtkCellRendererText$MH,"glib_autoptr_cleanup_GtkCellRendererText");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererText ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2165.glib_autoptr_cleanup_GtkCellRendererText$MH, "glib_autoptr_cleanup_GtkCellRendererText");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.glib_listautoptr_cleanup_GtkCellRendererText$MH,"glib_listautoptr_cleanup_GtkCellRendererText");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererText ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2165.glib_listautoptr_cleanup_GtkCellRendererText$MH, "glib_listautoptr_cleanup_GtkCellRendererText");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.glib_slistautoptr_cleanup_GtkCellRendererText$MH,"glib_slistautoptr_cleanup_GtkCellRendererText");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererText ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2165.glib_slistautoptr_cleanup_GtkCellRendererText$MH, "glib_slistautoptr_cleanup_GtkCellRendererText");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.glib_queueautoptr_cleanup_GtkCellRendererText$MH,"glib_queueautoptr_cleanup_GtkCellRendererText");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererText ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2165.glib_queueautoptr_cleanup_GtkCellRendererText$MH, "glib_queueautoptr_cleanup_GtkCellRendererText");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererToggle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererToggle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererToggle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererToggle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.glib_autoptr_clear_GtkCellRendererToggle$MH,"glib_autoptr_clear_GtkCellRendererToggle");
    }
    public static void glib_autoptr_clear_GtkCellRendererToggle ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2166.glib_autoptr_clear_GtkCellRendererToggle$MH, "glib_autoptr_clear_GtkCellRendererToggle");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.glib_autoptr_cleanup_GtkCellRendererToggle$MH,"glib_autoptr_cleanup_GtkCellRendererToggle");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererToggle ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2166.glib_autoptr_cleanup_GtkCellRendererToggle$MH, "glib_autoptr_cleanup_GtkCellRendererToggle");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.glib_listautoptr_cleanup_GtkCellRendererToggle$MH,"glib_listautoptr_cleanup_GtkCellRendererToggle");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererToggle ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2166.glib_listautoptr_cleanup_GtkCellRendererToggle$MH, "glib_listautoptr_cleanup_GtkCellRendererToggle");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.glib_slistautoptr_cleanup_GtkCellRendererToggle$MH,"glib_slistautoptr_cleanup_GtkCellRendererToggle");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererToggle ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2166.glib_slistautoptr_cleanup_GtkCellRendererToggle$MH, "glib_slistautoptr_cleanup_GtkCellRendererToggle");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.glib_queueautoptr_cleanup_GtkCellRendererToggle$MH,"glib_queueautoptr_cleanup_GtkCellRendererToggle");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererToggle ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2166.glib_queueautoptr_cleanup_GtkCellRendererToggle$MH, "glib_queueautoptr_cleanup_GtkCellRendererToggle");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.glib_autoptr_clear_GtkCellView$MH,"glib_autoptr_clear_GtkCellView");
    }
    public static void glib_autoptr_clear_GtkCellView ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2166.glib_autoptr_clear_GtkCellView$MH, "glib_autoptr_clear_GtkCellView");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2167.glib_autoptr_cleanup_GtkCellView$MH,"glib_autoptr_cleanup_GtkCellView");
    }
    public static void glib_autoptr_cleanup_GtkCellView ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2167.glib_autoptr_cleanup_GtkCellView$MH, "glib_autoptr_cleanup_GtkCellView");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2167.glib_listautoptr_cleanup_GtkCellView$MH,"glib_listautoptr_cleanup_GtkCellView");
    }
    public static void glib_listautoptr_cleanup_GtkCellView ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2167.glib_listautoptr_cleanup_GtkCellView$MH, "glib_listautoptr_cleanup_GtkCellView");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2167.glib_slistautoptr_cleanup_GtkCellView$MH,"glib_slistautoptr_cleanup_GtkCellView");
    }
    public static void glib_slistautoptr_cleanup_GtkCellView ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2167.glib_slistautoptr_cleanup_GtkCellView$MH, "glib_slistautoptr_cleanup_GtkCellView");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2167.glib_queueautoptr_cleanup_GtkCellView$MH,"glib_queueautoptr_cleanup_GtkCellView");
    }
    public static void glib_queueautoptr_cleanup_GtkCellView ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2167.glib_queueautoptr_cleanup_GtkCellView$MH, "glib_queueautoptr_cleanup_GtkCellView");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCheckButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2167.glib_autoptr_clear_GtkCheckButton$MH,"glib_autoptr_clear_GtkCheckButton");
    }
    public static void glib_autoptr_clear_GtkCheckButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2167.glib_autoptr_clear_GtkCheckButton$MH, "glib_autoptr_clear_GtkCheckButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2167.glib_autoptr_cleanup_GtkCheckButton$MH,"glib_autoptr_cleanup_GtkCheckButton");
    }
    public static void glib_autoptr_cleanup_GtkCheckButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2167.glib_autoptr_cleanup_GtkCheckButton$MH, "glib_autoptr_cleanup_GtkCheckButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.glib_listautoptr_cleanup_GtkCheckButton$MH,"glib_listautoptr_cleanup_GtkCheckButton");
    }
    public static void glib_listautoptr_cleanup_GtkCheckButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2168.glib_listautoptr_cleanup_GtkCheckButton$MH, "glib_listautoptr_cleanup_GtkCheckButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.glib_slistautoptr_cleanup_GtkCheckButton$MH,"glib_slistautoptr_cleanup_GtkCheckButton");
    }
    public static void glib_slistautoptr_cleanup_GtkCheckButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2168.glib_slistautoptr_cleanup_GtkCheckButton$MH, "glib_slistautoptr_cleanup_GtkCheckButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.glib_queueautoptr_cleanup_GtkCheckButton$MH,"glib_queueautoptr_cleanup_GtkCheckButton");
    }
    public static void glib_queueautoptr_cleanup_GtkCheckButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2168.glib_queueautoptr_cleanup_GtkCheckButton$MH, "glib_queueautoptr_cleanup_GtkCheckButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCheckMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCheckMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.glib_autoptr_clear_GtkCheckMenuItem$MH,"glib_autoptr_clear_GtkCheckMenuItem");
    }
    public static void glib_autoptr_clear_GtkCheckMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2168.glib_autoptr_clear_GtkCheckMenuItem$MH, "glib_autoptr_clear_GtkCheckMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCheckMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.glib_autoptr_cleanup_GtkCheckMenuItem$MH,"glib_autoptr_cleanup_GtkCheckMenuItem");
    }
    public static void glib_autoptr_cleanup_GtkCheckMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2168.glib_autoptr_cleanup_GtkCheckMenuItem$MH, "glib_autoptr_cleanup_GtkCheckMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCheckMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.glib_listautoptr_cleanup_GtkCheckMenuItem$MH,"glib_listautoptr_cleanup_GtkCheckMenuItem");
    }
    public static void glib_listautoptr_cleanup_GtkCheckMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2168.glib_listautoptr_cleanup_GtkCheckMenuItem$MH, "glib_listautoptr_cleanup_GtkCheckMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCheckMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.glib_slistautoptr_cleanup_GtkCheckMenuItem$MH,"glib_slistautoptr_cleanup_GtkCheckMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GtkCheckMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2169.glib_slistautoptr_cleanup_GtkCheckMenuItem$MH, "glib_slistautoptr_cleanup_GtkCheckMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCheckMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.glib_queueautoptr_cleanup_GtkCheckMenuItem$MH,"glib_queueautoptr_cleanup_GtkCheckMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GtkCheckMenuItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2169.glib_queueautoptr_cleanup_GtkCheckMenuItem$MH, "glib_queueautoptr_cleanup_GtkCheckMenuItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkClipboard_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkClipboard_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkClipboard_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkClipboard_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.glib_autoptr_clear_GtkClipboard$MH,"glib_autoptr_clear_GtkClipboard");
    }
    public static void glib_autoptr_clear_GtkClipboard ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2169.glib_autoptr_clear_GtkClipboard$MH, "glib_autoptr_clear_GtkClipboard");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.glib_autoptr_cleanup_GtkClipboard$MH,"glib_autoptr_cleanup_GtkClipboard");
    }
    public static void glib_autoptr_cleanup_GtkClipboard ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2169.glib_autoptr_cleanup_GtkClipboard$MH, "glib_autoptr_cleanup_GtkClipboard");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.glib_listautoptr_cleanup_GtkClipboard$MH,"glib_listautoptr_cleanup_GtkClipboard");
    }
    public static void glib_listautoptr_cleanup_GtkClipboard ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2169.glib_listautoptr_cleanup_GtkClipboard$MH, "glib_listautoptr_cleanup_GtkClipboard");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.glib_slistautoptr_cleanup_GtkClipboard$MH,"glib_slistautoptr_cleanup_GtkClipboard");
    }
    public static void glib_slistautoptr_cleanup_GtkClipboard ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2169.glib_slistautoptr_cleanup_GtkClipboard$MH, "glib_slistautoptr_cleanup_GtkClipboard");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.glib_queueautoptr_cleanup_GtkClipboard$MH,"glib_queueautoptr_cleanup_GtkClipboard");
    }
    public static void glib_queueautoptr_cleanup_GtkClipboard ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2170.glib_queueautoptr_cleanup_GtkClipboard$MH, "glib_queueautoptr_cleanup_GtkClipboard");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkColorButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.glib_autoptr_clear_GtkColorButton$MH,"glib_autoptr_clear_GtkColorButton");
    }
    public static void glib_autoptr_clear_GtkColorButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2170.glib_autoptr_clear_GtkColorButton$MH, "glib_autoptr_clear_GtkColorButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.glib_autoptr_cleanup_GtkColorButton$MH,"glib_autoptr_cleanup_GtkColorButton");
    }
    public static void glib_autoptr_cleanup_GtkColorButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2170.glib_autoptr_cleanup_GtkColorButton$MH, "glib_autoptr_cleanup_GtkColorButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.glib_listautoptr_cleanup_GtkColorButton$MH,"glib_listautoptr_cleanup_GtkColorButton");
    }
    public static void glib_listautoptr_cleanup_GtkColorButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2170.glib_listautoptr_cleanup_GtkColorButton$MH, "glib_listautoptr_cleanup_GtkColorButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.glib_slistautoptr_cleanup_GtkColorButton$MH,"glib_slistautoptr_cleanup_GtkColorButton");
    }
    public static void glib_slistautoptr_cleanup_GtkColorButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2170.glib_slistautoptr_cleanup_GtkColorButton$MH, "glib_slistautoptr_cleanup_GtkColorButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.glib_queueautoptr_cleanup_GtkColorButton$MH,"glib_queueautoptr_cleanup_GtkColorButton");
    }
    public static void glib_queueautoptr_cleanup_GtkColorButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2170.glib_queueautoptr_cleanup_GtkColorButton$MH, "glib_queueautoptr_cleanup_GtkColorButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkColorChooser_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooser_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooser_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooser_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2171.glib_autoptr_clear_GtkColorChooser$MH,"glib_autoptr_clear_GtkColorChooser");
    }
    public static void glib_autoptr_clear_GtkColorChooser ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2171.glib_autoptr_clear_GtkColorChooser$MH, "glib_autoptr_clear_GtkColorChooser");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2171.glib_autoptr_cleanup_GtkColorChooser$MH,"glib_autoptr_cleanup_GtkColorChooser");
    }
    public static void glib_autoptr_cleanup_GtkColorChooser ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2171.glib_autoptr_cleanup_GtkColorChooser$MH, "glib_autoptr_cleanup_GtkColorChooser");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2171.glib_listautoptr_cleanup_GtkColorChooser$MH,"glib_listautoptr_cleanup_GtkColorChooser");
    }
    public static void glib_listautoptr_cleanup_GtkColorChooser ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2171.glib_listautoptr_cleanup_GtkColorChooser$MH, "glib_listautoptr_cleanup_GtkColorChooser");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2171.glib_slistautoptr_cleanup_GtkColorChooser$MH,"glib_slistautoptr_cleanup_GtkColorChooser");
    }
    public static void glib_slistautoptr_cleanup_GtkColorChooser ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2171.glib_slistautoptr_cleanup_GtkColorChooser$MH, "glib_slistautoptr_cleanup_GtkColorChooser");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2171.glib_queueautoptr_cleanup_GtkColorChooser$MH,"glib_queueautoptr_cleanup_GtkColorChooser");
    }
    public static void glib_queueautoptr_cleanup_GtkColorChooser ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2171.glib_queueautoptr_cleanup_GtkColorChooser$MH, "glib_queueautoptr_cleanup_GtkColorChooser");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkColorChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2171.glib_autoptr_clear_GtkColorChooserDialog$MH,"glib_autoptr_clear_GtkColorChooserDialog");
    }
    public static void glib_autoptr_clear_GtkColorChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2171.glib_autoptr_clear_GtkColorChooserDialog$MH, "glib_autoptr_clear_GtkColorChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2172.glib_autoptr_cleanup_GtkColorChooserDialog$MH,"glib_autoptr_cleanup_GtkColorChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkColorChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2172.glib_autoptr_cleanup_GtkColorChooserDialog$MH, "glib_autoptr_cleanup_GtkColorChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2172.glib_listautoptr_cleanup_GtkColorChooserDialog$MH,"glib_listautoptr_cleanup_GtkColorChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkColorChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2172.glib_listautoptr_cleanup_GtkColorChooserDialog$MH, "glib_listautoptr_cleanup_GtkColorChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2172.glib_slistautoptr_cleanup_GtkColorChooserDialog$MH,"glib_slistautoptr_cleanup_GtkColorChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkColorChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2172.glib_slistautoptr_cleanup_GtkColorChooserDialog$MH, "glib_slistautoptr_cleanup_GtkColorChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2172.glib_queueautoptr_cleanup_GtkColorChooserDialog$MH,"glib_queueautoptr_cleanup_GtkColorChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkColorChooserDialog ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2172.glib_queueautoptr_cleanup_GtkColorChooserDialog$MH, "glib_queueautoptr_cleanup_GtkColorChooserDialog");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkColorChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2172.glib_autoptr_clear_GtkColorChooserWidget$MH,"glib_autoptr_clear_GtkColorChooserWidget");
    }
    public static void glib_autoptr_clear_GtkColorChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2172.glib_autoptr_clear_GtkColorChooserWidget$MH, "glib_autoptr_clear_GtkColorChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2172.glib_autoptr_cleanup_GtkColorChooserWidget$MH,"glib_autoptr_cleanup_GtkColorChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkColorChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2172.glib_autoptr_cleanup_GtkColorChooserWidget$MH, "glib_autoptr_cleanup_GtkColorChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2173.glib_listautoptr_cleanup_GtkColorChooserWidget$MH,"glib_listautoptr_cleanup_GtkColorChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkColorChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2173.glib_listautoptr_cleanup_GtkColorChooserWidget$MH, "glib_listautoptr_cleanup_GtkColorChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2173.glib_slistautoptr_cleanup_GtkColorChooserWidget$MH,"glib_slistautoptr_cleanup_GtkColorChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkColorChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2173.glib_slistautoptr_cleanup_GtkColorChooserWidget$MH, "glib_slistautoptr_cleanup_GtkColorChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2173.glib_queueautoptr_cleanup_GtkColorChooserWidget$MH,"glib_queueautoptr_cleanup_GtkColorChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkColorChooserWidget ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2173.glib_queueautoptr_cleanup_GtkColorChooserWidget$MH, "glib_queueautoptr_cleanup_GtkColorChooserWidget");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkComboBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2173.glib_autoptr_clear_GtkComboBox$MH,"glib_autoptr_clear_GtkComboBox");
    }
    public static void glib_autoptr_clear_GtkComboBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2173.glib_autoptr_clear_GtkComboBox$MH, "glib_autoptr_clear_GtkComboBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2173.glib_autoptr_cleanup_GtkComboBox$MH,"glib_autoptr_cleanup_GtkComboBox");
    }
    public static void glib_autoptr_cleanup_GtkComboBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2173.glib_autoptr_cleanup_GtkComboBox$MH, "glib_autoptr_cleanup_GtkComboBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2173.glib_listautoptr_cleanup_GtkComboBox$MH,"glib_listautoptr_cleanup_GtkComboBox");
    }
    public static void glib_listautoptr_cleanup_GtkComboBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2173.glib_listautoptr_cleanup_GtkComboBox$MH, "glib_listautoptr_cleanup_GtkComboBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2174.glib_slistautoptr_cleanup_GtkComboBox$MH,"glib_slistautoptr_cleanup_GtkComboBox");
    }
    public static void glib_slistautoptr_cleanup_GtkComboBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2174.glib_slistautoptr_cleanup_GtkComboBox$MH, "glib_slistautoptr_cleanup_GtkComboBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2174.glib_queueautoptr_cleanup_GtkComboBox$MH,"glib_queueautoptr_cleanup_GtkComboBox");
    }
    public static void glib_queueautoptr_cleanup_GtkComboBox ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2174.glib_queueautoptr_cleanup_GtkComboBox$MH, "glib_queueautoptr_cleanup_GtkComboBox");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkComboBoxText_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBoxText_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBoxText_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBoxText_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2174.glib_autoptr_clear_GtkComboBoxText$MH,"glib_autoptr_clear_GtkComboBoxText");
    }
    public static void glib_autoptr_clear_GtkComboBoxText ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2174.glib_autoptr_clear_GtkComboBoxText$MH, "glib_autoptr_clear_GtkComboBoxText");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2174.glib_autoptr_cleanup_GtkComboBoxText$MH,"glib_autoptr_cleanup_GtkComboBoxText");
    }
    public static void glib_autoptr_cleanup_GtkComboBoxText ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2174.glib_autoptr_cleanup_GtkComboBoxText$MH, "glib_autoptr_cleanup_GtkComboBoxText");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2174.glib_listautoptr_cleanup_GtkComboBoxText$MH,"glib_listautoptr_cleanup_GtkComboBoxText");
    }
    public static void glib_listautoptr_cleanup_GtkComboBoxText ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2174.glib_listautoptr_cleanup_GtkComboBoxText$MH, "glib_listautoptr_cleanup_GtkComboBoxText");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2174.glib_slistautoptr_cleanup_GtkComboBoxText$MH,"glib_slistautoptr_cleanup_GtkComboBoxText");
    }
    public static void glib_slistautoptr_cleanup_GtkComboBoxText ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2174.glib_slistautoptr_cleanup_GtkComboBoxText$MH, "glib_slistautoptr_cleanup_GtkComboBoxText");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2175.glib_queueautoptr_cleanup_GtkComboBoxText$MH,"glib_queueautoptr_cleanup_GtkComboBoxText");
    }
    public static void glib_queueautoptr_cleanup_GtkComboBoxText ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2175.glib_queueautoptr_cleanup_GtkComboBoxText$MH, "glib_queueautoptr_cleanup_GtkComboBoxText");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCssProvider_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCssProvider_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCssProvider_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCssProvider_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2175.glib_autoptr_clear_GtkCssProvider$MH,"glib_autoptr_clear_GtkCssProvider");
    }
    public static void glib_autoptr_clear_GtkCssProvider ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2175.glib_autoptr_clear_GtkCssProvider$MH, "glib_autoptr_clear_GtkCssProvider");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2175.glib_autoptr_cleanup_GtkCssProvider$MH,"glib_autoptr_cleanup_GtkCssProvider");
    }
    public static void glib_autoptr_cleanup_GtkCssProvider ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2175.glib_autoptr_cleanup_GtkCssProvider$MH, "glib_autoptr_cleanup_GtkCssProvider");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2175.glib_listautoptr_cleanup_GtkCssProvider$MH,"glib_listautoptr_cleanup_GtkCssProvider");
    }
    public static void glib_listautoptr_cleanup_GtkCssProvider ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2175.glib_listautoptr_cleanup_GtkCssProvider$MH, "glib_listautoptr_cleanup_GtkCssProvider");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2175.glib_slistautoptr_cleanup_GtkCssProvider$MH,"glib_slistautoptr_cleanup_GtkCssProvider");
    }
    public static void glib_slistautoptr_cleanup_GtkCssProvider ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2175.glib_slistautoptr_cleanup_GtkCssProvider$MH, "glib_slistautoptr_cleanup_GtkCssProvider");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2175.glib_queueautoptr_cleanup_GtkCssProvider$MH,"glib_queueautoptr_cleanup_GtkCssProvider");
    }
    public static void glib_queueautoptr_cleanup_GtkCssProvider ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2175.glib_queueautoptr_cleanup_GtkCssProvider$MH, "glib_queueautoptr_cleanup_GtkCssProvider");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkDrawingArea_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDrawingArea_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDrawingArea_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDrawingArea_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2176.glib_autoptr_clear_GtkDrawingArea$MH,"glib_autoptr_clear_GtkDrawingArea");
    }
    public static void glib_autoptr_clear_GtkDrawingArea ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2176.glib_autoptr_clear_GtkDrawingArea$MH, "glib_autoptr_clear_GtkDrawingArea");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2176.glib_autoptr_cleanup_GtkDrawingArea$MH,"glib_autoptr_cleanup_GtkDrawingArea");
    }
    public static void glib_autoptr_cleanup_GtkDrawingArea ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2176.glib_autoptr_cleanup_GtkDrawingArea$MH, "glib_autoptr_cleanup_GtkDrawingArea");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2176.glib_listautoptr_cleanup_GtkDrawingArea$MH,"glib_listautoptr_cleanup_GtkDrawingArea");
    }
    public static void glib_listautoptr_cleanup_GtkDrawingArea ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2176.glib_listautoptr_cleanup_GtkDrawingArea$MH, "glib_listautoptr_cleanup_GtkDrawingArea");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2176.glib_slistautoptr_cleanup_GtkDrawingArea$MH,"glib_slistautoptr_cleanup_GtkDrawingArea");
    }
    public static void glib_slistautoptr_cleanup_GtkDrawingArea ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2176.glib_slistautoptr_cleanup_GtkDrawingArea$MH, "glib_slistautoptr_cleanup_GtkDrawingArea");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2176.glib_queueautoptr_cleanup_GtkDrawingArea$MH,"glib_queueautoptr_cleanup_GtkDrawingArea");
    }
    public static void glib_queueautoptr_cleanup_GtkDrawingArea ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2176.glib_queueautoptr_cleanup_GtkDrawingArea$MH, "glib_queueautoptr_cleanup_GtkDrawingArea");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEditable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2176.glib_autoptr_clear_GtkEditable$MH,"glib_autoptr_clear_GtkEditable");
    }
    public static void glib_autoptr_clear_GtkEditable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2176.glib_autoptr_clear_GtkEditable$MH, "glib_autoptr_clear_GtkEditable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2177.glib_autoptr_cleanup_GtkEditable$MH,"glib_autoptr_cleanup_GtkEditable");
    }
    public static void glib_autoptr_cleanup_GtkEditable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2177.glib_autoptr_cleanup_GtkEditable$MH, "glib_autoptr_cleanup_GtkEditable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2177.glib_listautoptr_cleanup_GtkEditable$MH,"glib_listautoptr_cleanup_GtkEditable");
    }
    public static void glib_listautoptr_cleanup_GtkEditable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2177.glib_listautoptr_cleanup_GtkEditable$MH, "glib_listautoptr_cleanup_GtkEditable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2177.glib_slistautoptr_cleanup_GtkEditable$MH,"glib_slistautoptr_cleanup_GtkEditable");
    }
    public static void glib_slistautoptr_cleanup_GtkEditable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2177.glib_slistautoptr_cleanup_GtkEditable$MH, "glib_slistautoptr_cleanup_GtkEditable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2177.glib_queueautoptr_cleanup_GtkEditable$MH,"glib_queueautoptr_cleanup_GtkEditable");
    }
    public static void glib_queueautoptr_cleanup_GtkEditable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2177.glib_queueautoptr_cleanup_GtkEditable$MH, "glib_queueautoptr_cleanup_GtkEditable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEntry_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntry_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntry_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntry_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2177.glib_autoptr_clear_GtkEntry$MH,"glib_autoptr_clear_GtkEntry");
    }
    public static void glib_autoptr_clear_GtkEntry ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2177.glib_autoptr_clear_GtkEntry$MH, "glib_autoptr_clear_GtkEntry");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2177.glib_autoptr_cleanup_GtkEntry$MH,"glib_autoptr_cleanup_GtkEntry");
    }
    public static void glib_autoptr_cleanup_GtkEntry ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2177.glib_autoptr_cleanup_GtkEntry$MH, "glib_autoptr_cleanup_GtkEntry");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.glib_listautoptr_cleanup_GtkEntry$MH,"glib_listautoptr_cleanup_GtkEntry");
    }
    public static void glib_listautoptr_cleanup_GtkEntry ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2178.glib_listautoptr_cleanup_GtkEntry$MH, "glib_listautoptr_cleanup_GtkEntry");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.glib_slistautoptr_cleanup_GtkEntry$MH,"glib_slistautoptr_cleanup_GtkEntry");
    }
    public static void glib_slistautoptr_cleanup_GtkEntry ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2178.glib_slistautoptr_cleanup_GtkEntry$MH, "glib_slistautoptr_cleanup_GtkEntry");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.glib_queueautoptr_cleanup_GtkEntry$MH,"glib_queueautoptr_cleanup_GtkEntry");
    }
    public static void glib_queueautoptr_cleanup_GtkEntry ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2178.glib_queueautoptr_cleanup_GtkEntry$MH, "glib_queueautoptr_cleanup_GtkEntry");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEntryBuffer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryBuffer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryBuffer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryBuffer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEntryBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.glib_autoptr_clear_GtkEntryBuffer$MH,"glib_autoptr_clear_GtkEntryBuffer");
    }
    public static void glib_autoptr_clear_GtkEntryBuffer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2178.glib_autoptr_clear_GtkEntryBuffer$MH, "glib_autoptr_clear_GtkEntryBuffer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEntryBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.glib_autoptr_cleanup_GtkEntryBuffer$MH,"glib_autoptr_cleanup_GtkEntryBuffer");
    }
    public static void glib_autoptr_cleanup_GtkEntryBuffer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2178.glib_autoptr_cleanup_GtkEntryBuffer$MH, "glib_autoptr_cleanup_GtkEntryBuffer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEntryBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.glib_listautoptr_cleanup_GtkEntryBuffer$MH,"glib_listautoptr_cleanup_GtkEntryBuffer");
    }
    public static void glib_listautoptr_cleanup_GtkEntryBuffer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2178.glib_listautoptr_cleanup_GtkEntryBuffer$MH, "glib_listautoptr_cleanup_GtkEntryBuffer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEntryBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.glib_slistautoptr_cleanup_GtkEntryBuffer$MH,"glib_slistautoptr_cleanup_GtkEntryBuffer");
    }
    public static void glib_slistautoptr_cleanup_GtkEntryBuffer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2179.glib_slistautoptr_cleanup_GtkEntryBuffer$MH, "glib_slistautoptr_cleanup_GtkEntryBuffer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEntryBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.glib_queueautoptr_cleanup_GtkEntryBuffer$MH,"glib_queueautoptr_cleanup_GtkEntryBuffer");
    }
    public static void glib_queueautoptr_cleanup_GtkEntryBuffer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2179.glib_queueautoptr_cleanup_GtkEntryBuffer$MH, "glib_queueautoptr_cleanup_GtkEntryBuffer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEntryCompletion_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryCompletion_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryCompletion_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryCompletion_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.glib_autoptr_clear_GtkEntryCompletion$MH,"glib_autoptr_clear_GtkEntryCompletion");
    }
    public static void glib_autoptr_clear_GtkEntryCompletion ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2179.glib_autoptr_clear_GtkEntryCompletion$MH, "glib_autoptr_clear_GtkEntryCompletion");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.glib_autoptr_cleanup_GtkEntryCompletion$MH,"glib_autoptr_cleanup_GtkEntryCompletion");
    }
    public static void glib_autoptr_cleanup_GtkEntryCompletion ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2179.glib_autoptr_cleanup_GtkEntryCompletion$MH, "glib_autoptr_cleanup_GtkEntryCompletion");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.glib_listautoptr_cleanup_GtkEntryCompletion$MH,"glib_listautoptr_cleanup_GtkEntryCompletion");
    }
    public static void glib_listautoptr_cleanup_GtkEntryCompletion ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2179.glib_listautoptr_cleanup_GtkEntryCompletion$MH, "glib_listautoptr_cleanup_GtkEntryCompletion");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.glib_slistautoptr_cleanup_GtkEntryCompletion$MH,"glib_slistautoptr_cleanup_GtkEntryCompletion");
    }
    public static void glib_slistautoptr_cleanup_GtkEntryCompletion ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2179.glib_slistautoptr_cleanup_GtkEntryCompletion$MH, "glib_slistautoptr_cleanup_GtkEntryCompletion");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.glib_queueautoptr_cleanup_GtkEntryCompletion$MH,"glib_queueautoptr_cleanup_GtkEntryCompletion");
    }
    public static void glib_queueautoptr_cleanup_GtkEntryCompletion ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2180.glib_queueautoptr_cleanup_GtkEntryCompletion$MH, "glib_queueautoptr_cleanup_GtkEntryCompletion");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEventBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEventBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.glib_autoptr_clear_GtkEventBox$MH,"glib_autoptr_clear_GtkEventBox");
    }
    public static void glib_autoptr_clear_GtkEventBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2180.glib_autoptr_clear_GtkEventBox$MH, "glib_autoptr_clear_GtkEventBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEventBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.glib_autoptr_cleanup_GtkEventBox$MH,"glib_autoptr_cleanup_GtkEventBox");
    }
    public static void glib_autoptr_cleanup_GtkEventBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2180.glib_autoptr_cleanup_GtkEventBox$MH, "glib_autoptr_cleanup_GtkEventBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEventBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.glib_listautoptr_cleanup_GtkEventBox$MH,"glib_listautoptr_cleanup_GtkEventBox");
    }
    public static void glib_listautoptr_cleanup_GtkEventBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2180.glib_listautoptr_cleanup_GtkEventBox$MH, "glib_listautoptr_cleanup_GtkEventBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEventBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.glib_slistautoptr_cleanup_GtkEventBox$MH,"glib_slistautoptr_cleanup_GtkEventBox");
    }
    public static void glib_slistautoptr_cleanup_GtkEventBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2180.glib_slistautoptr_cleanup_GtkEventBox$MH, "glib_slistautoptr_cleanup_GtkEventBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEventBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.glib_queueautoptr_cleanup_GtkEventBox$MH,"glib_queueautoptr_cleanup_GtkEventBox");
    }
    public static void glib_queueautoptr_cleanup_GtkEventBox ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2180.glib_queueautoptr_cleanup_GtkEventBox$MH, "glib_queueautoptr_cleanup_GtkEventBox");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEventController_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventController_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventController_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventController_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.glib_autoptr_clear_GtkEventController$MH,"glib_autoptr_clear_GtkEventController");
    }
    public static void glib_autoptr_clear_GtkEventController ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2181.glib_autoptr_clear_GtkEventController$MH, "glib_autoptr_clear_GtkEventController");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.glib_autoptr_cleanup_GtkEventController$MH,"glib_autoptr_cleanup_GtkEventController");
    }
    public static void glib_autoptr_cleanup_GtkEventController ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2181.glib_autoptr_cleanup_GtkEventController$MH, "glib_autoptr_cleanup_GtkEventController");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.glib_listautoptr_cleanup_GtkEventController$MH,"glib_listautoptr_cleanup_GtkEventController");
    }
    public static void glib_listautoptr_cleanup_GtkEventController ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2181.glib_listautoptr_cleanup_GtkEventController$MH, "glib_listautoptr_cleanup_GtkEventController");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.glib_slistautoptr_cleanup_GtkEventController$MH,"glib_slistautoptr_cleanup_GtkEventController");
    }
    public static void glib_slistautoptr_cleanup_GtkEventController ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2181.glib_slistautoptr_cleanup_GtkEventController$MH, "glib_slistautoptr_cleanup_GtkEventController");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.glib_queueautoptr_cleanup_GtkEventController$MH,"glib_queueautoptr_cleanup_GtkEventController");
    }
    public static void glib_queueautoptr_cleanup_GtkEventController ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2181.glib_queueautoptr_cleanup_GtkEventController$MH, "glib_queueautoptr_cleanup_GtkEventController");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkExpander_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkExpander_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkExpander_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkExpander_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.glib_autoptr_clear_GtkExpander$MH,"glib_autoptr_clear_GtkExpander");
    }
    public static void glib_autoptr_clear_GtkExpander ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2181.glib_autoptr_clear_GtkExpander$MH, "glib_autoptr_clear_GtkExpander");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.glib_autoptr_cleanup_GtkExpander$MH,"glib_autoptr_cleanup_GtkExpander");
    }
    public static void glib_autoptr_cleanup_GtkExpander ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2182.glib_autoptr_cleanup_GtkExpander$MH, "glib_autoptr_cleanup_GtkExpander");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.glib_listautoptr_cleanup_GtkExpander$MH,"glib_listautoptr_cleanup_GtkExpander");
    }
    public static void glib_listautoptr_cleanup_GtkExpander ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2182.glib_listautoptr_cleanup_GtkExpander$MH, "glib_listautoptr_cleanup_GtkExpander");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.glib_slistautoptr_cleanup_GtkExpander$MH,"glib_slistautoptr_cleanup_GtkExpander");
    }
    public static void glib_slistautoptr_cleanup_GtkExpander ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2182.glib_slistautoptr_cleanup_GtkExpander$MH, "glib_slistautoptr_cleanup_GtkExpander");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.glib_queueautoptr_cleanup_GtkExpander$MH,"glib_queueautoptr_cleanup_GtkExpander");
    }
    public static void glib_queueautoptr_cleanup_GtkExpander ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2182.glib_queueautoptr_cleanup_GtkExpander$MH, "glib_queueautoptr_cleanup_GtkExpander");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.glib_autoptr_clear_GtkFileChooserButton$MH,"glib_autoptr_clear_GtkFileChooserButton");
    }
    public static void glib_autoptr_clear_GtkFileChooserButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2182.glib_autoptr_clear_GtkFileChooserButton$MH, "glib_autoptr_clear_GtkFileChooserButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.glib_autoptr_cleanup_GtkFileChooserButton$MH,"glib_autoptr_cleanup_GtkFileChooserButton");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2182.glib_autoptr_cleanup_GtkFileChooserButton$MH, "glib_autoptr_cleanup_GtkFileChooserButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.glib_listautoptr_cleanup_GtkFileChooserButton$MH,"glib_listautoptr_cleanup_GtkFileChooserButton");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2183.glib_listautoptr_cleanup_GtkFileChooserButton$MH, "glib_listautoptr_cleanup_GtkFileChooserButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.glib_slistautoptr_cleanup_GtkFileChooserButton$MH,"glib_slistautoptr_cleanup_GtkFileChooserButton");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2183.glib_slistautoptr_cleanup_GtkFileChooserButton$MH, "glib_slistautoptr_cleanup_GtkFileChooserButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.glib_queueautoptr_cleanup_GtkFileChooserButton$MH,"glib_queueautoptr_cleanup_GtkFileChooserButton");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2183.glib_queueautoptr_cleanup_GtkFileChooserButton$MH, "glib_queueautoptr_cleanup_GtkFileChooserButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.glib_autoptr_clear_GtkFileChooserDialog$MH,"glib_autoptr_clear_GtkFileChooserDialog");
    }
    public static void glib_autoptr_clear_GtkFileChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2183.glib_autoptr_clear_GtkFileChooserDialog$MH, "glib_autoptr_clear_GtkFileChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.glib_autoptr_cleanup_GtkFileChooserDialog$MH,"glib_autoptr_cleanup_GtkFileChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2183.glib_autoptr_cleanup_GtkFileChooserDialog$MH, "glib_autoptr_cleanup_GtkFileChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.glib_listautoptr_cleanup_GtkFileChooserDialog$MH,"glib_listautoptr_cleanup_GtkFileChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2183.glib_listautoptr_cleanup_GtkFileChooserDialog$MH, "glib_listautoptr_cleanup_GtkFileChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.glib_slistautoptr_cleanup_GtkFileChooserDialog$MH,"glib_slistautoptr_cleanup_GtkFileChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2184.glib_slistautoptr_cleanup_GtkFileChooserDialog$MH, "glib_slistautoptr_cleanup_GtkFileChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.glib_queueautoptr_cleanup_GtkFileChooserDialog$MH,"glib_queueautoptr_cleanup_GtkFileChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserDialog ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2184.glib_queueautoptr_cleanup_GtkFileChooserDialog$MH, "glib_queueautoptr_cleanup_GtkFileChooserDialog");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.glib_autoptr_clear_GtkFileChooserWidget$MH,"glib_autoptr_clear_GtkFileChooserWidget");
    }
    public static void glib_autoptr_clear_GtkFileChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2184.glib_autoptr_clear_GtkFileChooserWidget$MH, "glib_autoptr_clear_GtkFileChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.glib_autoptr_cleanup_GtkFileChooserWidget$MH,"glib_autoptr_cleanup_GtkFileChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2184.glib_autoptr_cleanup_GtkFileChooserWidget$MH, "glib_autoptr_cleanup_GtkFileChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.glib_listautoptr_cleanup_GtkFileChooserWidget$MH,"glib_listautoptr_cleanup_GtkFileChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2184.glib_listautoptr_cleanup_GtkFileChooserWidget$MH, "glib_listautoptr_cleanup_GtkFileChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.glib_slistautoptr_cleanup_GtkFileChooserWidget$MH,"glib_slistautoptr_cleanup_GtkFileChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2184.glib_slistautoptr_cleanup_GtkFileChooserWidget$MH, "glib_slistautoptr_cleanup_GtkFileChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2185.glib_queueautoptr_cleanup_GtkFileChooserWidget$MH,"glib_queueautoptr_cleanup_GtkFileChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserWidget ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2185.glib_queueautoptr_cleanup_GtkFileChooserWidget$MH, "glib_queueautoptr_cleanup_GtkFileChooserWidget");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2185.glib_autoptr_clear_GtkFileFilter$MH,"glib_autoptr_clear_GtkFileFilter");
    }
    public static void glib_autoptr_clear_GtkFileFilter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2185.glib_autoptr_clear_GtkFileFilter$MH, "glib_autoptr_clear_GtkFileFilter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2185.glib_autoptr_cleanup_GtkFileFilter$MH,"glib_autoptr_cleanup_GtkFileFilter");
    }
    public static void glib_autoptr_cleanup_GtkFileFilter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2185.glib_autoptr_cleanup_GtkFileFilter$MH, "glib_autoptr_cleanup_GtkFileFilter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2185.glib_listautoptr_cleanup_GtkFileFilter$MH,"glib_listautoptr_cleanup_GtkFileFilter");
    }
    public static void glib_listautoptr_cleanup_GtkFileFilter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2185.glib_listautoptr_cleanup_GtkFileFilter$MH, "glib_listautoptr_cleanup_GtkFileFilter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2185.glib_slistautoptr_cleanup_GtkFileFilter$MH,"glib_slistautoptr_cleanup_GtkFileFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkFileFilter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2185.glib_slistautoptr_cleanup_GtkFileFilter$MH, "glib_slistautoptr_cleanup_GtkFileFilter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2185.glib_queueautoptr_cleanup_GtkFileFilter$MH,"glib_queueautoptr_cleanup_GtkFileFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkFileFilter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2185.glib_queueautoptr_cleanup_GtkFileFilter$MH, "glib_queueautoptr_cleanup_GtkFileFilter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFixed_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixed_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixed_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixed_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2186.glib_autoptr_clear_GtkFixed$MH,"glib_autoptr_clear_GtkFixed");
    }
    public static void glib_autoptr_clear_GtkFixed ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2186.glib_autoptr_clear_GtkFixed$MH, "glib_autoptr_clear_GtkFixed");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2186.glib_autoptr_cleanup_GtkFixed$MH,"glib_autoptr_cleanup_GtkFixed");
    }
    public static void glib_autoptr_cleanup_GtkFixed ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2186.glib_autoptr_cleanup_GtkFixed$MH, "glib_autoptr_cleanup_GtkFixed");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2186.glib_listautoptr_cleanup_GtkFixed$MH,"glib_listautoptr_cleanup_GtkFixed");
    }
    public static void glib_listautoptr_cleanup_GtkFixed ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2186.glib_listautoptr_cleanup_GtkFixed$MH, "glib_listautoptr_cleanup_GtkFixed");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2186.glib_slistautoptr_cleanup_GtkFixed$MH,"glib_slistautoptr_cleanup_GtkFixed");
    }
    public static void glib_slistautoptr_cleanup_GtkFixed ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2186.glib_slistautoptr_cleanup_GtkFixed$MH, "glib_slistautoptr_cleanup_GtkFixed");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2186.glib_queueautoptr_cleanup_GtkFixed$MH,"glib_queueautoptr_cleanup_GtkFixed");
    }
    public static void glib_queueautoptr_cleanup_GtkFixed ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2186.glib_queueautoptr_cleanup_GtkFixed$MH, "glib_queueautoptr_cleanup_GtkFixed");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFlowBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2186.glib_autoptr_clear_GtkFlowBox$MH,"glib_autoptr_clear_GtkFlowBox");
    }
    public static void glib_autoptr_clear_GtkFlowBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2186.glib_autoptr_clear_GtkFlowBox$MH, "glib_autoptr_clear_GtkFlowBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2187.glib_autoptr_cleanup_GtkFlowBox$MH,"glib_autoptr_cleanup_GtkFlowBox");
    }
    public static void glib_autoptr_cleanup_GtkFlowBox ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2187.glib_autoptr_cleanup_GtkFlowBox$MH, "glib_autoptr_cleanup_GtkFlowBox");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2187.glib_listautoptr_cleanup_GtkFlowBox$MH,"glib_listautoptr_cleanup_GtkFlowBox");
    }
    public static void glib_listautoptr_cleanup_GtkFlowBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2187.glib_listautoptr_cleanup_GtkFlowBox$MH, "glib_listautoptr_cleanup_GtkFlowBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2187.glib_slistautoptr_cleanup_GtkFlowBox$MH,"glib_slistautoptr_cleanup_GtkFlowBox");
    }
    public static void glib_slistautoptr_cleanup_GtkFlowBox ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2187.glib_slistautoptr_cleanup_GtkFlowBox$MH, "glib_slistautoptr_cleanup_GtkFlowBox");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2187.glib_queueautoptr_cleanup_GtkFlowBox$MH,"glib_queueautoptr_cleanup_GtkFlowBox");
    }
    public static void glib_queueautoptr_cleanup_GtkFlowBox ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2187.glib_queueautoptr_cleanup_GtkFlowBox$MH, "glib_queueautoptr_cleanup_GtkFlowBox");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFlowBoxChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBoxChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBoxChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBoxChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2187.glib_autoptr_clear_GtkFlowBoxChild$MH,"glib_autoptr_clear_GtkFlowBoxChild");
    }
    public static void glib_autoptr_clear_GtkFlowBoxChild ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2187.glib_autoptr_clear_GtkFlowBoxChild$MH, "glib_autoptr_clear_GtkFlowBoxChild");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2187.glib_autoptr_cleanup_GtkFlowBoxChild$MH,"glib_autoptr_cleanup_GtkFlowBoxChild");
    }
    public static void glib_autoptr_cleanup_GtkFlowBoxChild ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2187.glib_autoptr_cleanup_GtkFlowBoxChild$MH, "glib_autoptr_cleanup_GtkFlowBoxChild");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.glib_listautoptr_cleanup_GtkFlowBoxChild$MH,"glib_listautoptr_cleanup_GtkFlowBoxChild");
    }
    public static void glib_listautoptr_cleanup_GtkFlowBoxChild ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2188.glib_listautoptr_cleanup_GtkFlowBoxChild$MH, "glib_listautoptr_cleanup_GtkFlowBoxChild");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.glib_slistautoptr_cleanup_GtkFlowBoxChild$MH,"glib_slistautoptr_cleanup_GtkFlowBoxChild");
    }
    public static void glib_slistautoptr_cleanup_GtkFlowBoxChild ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2188.glib_slistautoptr_cleanup_GtkFlowBoxChild$MH, "glib_slistautoptr_cleanup_GtkFlowBoxChild");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.glib_queueautoptr_cleanup_GtkFlowBoxChild$MH,"glib_queueautoptr_cleanup_GtkFlowBoxChild");
    }
    public static void glib_queueautoptr_cleanup_GtkFlowBoxChild ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2188.glib_queueautoptr_cleanup_GtkFlowBoxChild$MH, "glib_queueautoptr_cleanup_GtkFlowBoxChild");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFontButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.glib_autoptr_clear_GtkFontButton$MH,"glib_autoptr_clear_GtkFontButton");
    }
    public static void glib_autoptr_clear_GtkFontButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2188.glib_autoptr_clear_GtkFontButton$MH, "glib_autoptr_clear_GtkFontButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.glib_autoptr_cleanup_GtkFontButton$MH,"glib_autoptr_cleanup_GtkFontButton");
    }
    public static void glib_autoptr_cleanup_GtkFontButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2188.glib_autoptr_cleanup_GtkFontButton$MH, "glib_autoptr_cleanup_GtkFontButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.glib_listautoptr_cleanup_GtkFontButton$MH,"glib_listautoptr_cleanup_GtkFontButton");
    }
    public static void glib_listautoptr_cleanup_GtkFontButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2188.glib_listautoptr_cleanup_GtkFontButton$MH, "glib_listautoptr_cleanup_GtkFontButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2189.glib_slistautoptr_cleanup_GtkFontButton$MH,"glib_slistautoptr_cleanup_GtkFontButton");
    }
    public static void glib_slistautoptr_cleanup_GtkFontButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2189.glib_slistautoptr_cleanup_GtkFontButton$MH, "glib_slistautoptr_cleanup_GtkFontButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2189.glib_queueautoptr_cleanup_GtkFontButton$MH,"glib_queueautoptr_cleanup_GtkFontButton");
    }
    public static void glib_queueautoptr_cleanup_GtkFontButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2189.glib_queueautoptr_cleanup_GtkFontButton$MH, "glib_queueautoptr_cleanup_GtkFontButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFontChooser_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooser_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooser_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooser_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2189.glib_autoptr_clear_GtkFontChooser$MH,"glib_autoptr_clear_GtkFontChooser");
    }
    public static void glib_autoptr_clear_GtkFontChooser ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2189.glib_autoptr_clear_GtkFontChooser$MH, "glib_autoptr_clear_GtkFontChooser");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2189.glib_autoptr_cleanup_GtkFontChooser$MH,"glib_autoptr_cleanup_GtkFontChooser");
    }
    public static void glib_autoptr_cleanup_GtkFontChooser ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2189.glib_autoptr_cleanup_GtkFontChooser$MH, "glib_autoptr_cleanup_GtkFontChooser");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2189.glib_listautoptr_cleanup_GtkFontChooser$MH,"glib_listautoptr_cleanup_GtkFontChooser");
    }
    public static void glib_listautoptr_cleanup_GtkFontChooser ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2189.glib_listautoptr_cleanup_GtkFontChooser$MH, "glib_listautoptr_cleanup_GtkFontChooser");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2189.glib_slistautoptr_cleanup_GtkFontChooser$MH,"glib_slistautoptr_cleanup_GtkFontChooser");
    }
    public static void glib_slistautoptr_cleanup_GtkFontChooser ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2189.glib_slistautoptr_cleanup_GtkFontChooser$MH, "glib_slistautoptr_cleanup_GtkFontChooser");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.glib_queueautoptr_cleanup_GtkFontChooser$MH,"glib_queueautoptr_cleanup_GtkFontChooser");
    }
    public static void glib_queueautoptr_cleanup_GtkFontChooser ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2190.glib_queueautoptr_cleanup_GtkFontChooser$MH, "glib_queueautoptr_cleanup_GtkFontChooser");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFontChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.glib_autoptr_clear_GtkFontChooserDialog$MH,"glib_autoptr_clear_GtkFontChooserDialog");
    }
    public static void glib_autoptr_clear_GtkFontChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2190.glib_autoptr_clear_GtkFontChooserDialog$MH, "glib_autoptr_clear_GtkFontChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.glib_autoptr_cleanup_GtkFontChooserDialog$MH,"glib_autoptr_cleanup_GtkFontChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkFontChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2190.glib_autoptr_cleanup_GtkFontChooserDialog$MH, "glib_autoptr_cleanup_GtkFontChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.glib_listautoptr_cleanup_GtkFontChooserDialog$MH,"glib_listautoptr_cleanup_GtkFontChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkFontChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2190.glib_listautoptr_cleanup_GtkFontChooserDialog$MH, "glib_listautoptr_cleanup_GtkFontChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.glib_slistautoptr_cleanup_GtkFontChooserDialog$MH,"glib_slistautoptr_cleanup_GtkFontChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkFontChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2190.glib_slistautoptr_cleanup_GtkFontChooserDialog$MH, "glib_slistautoptr_cleanup_GtkFontChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.glib_queueautoptr_cleanup_GtkFontChooserDialog$MH,"glib_queueautoptr_cleanup_GtkFontChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkFontChooserDialog ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2190.glib_queueautoptr_cleanup_GtkFontChooserDialog$MH, "glib_queueautoptr_cleanup_GtkFontChooserDialog");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFontChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.glib_autoptr_clear_GtkFontChooserWidget$MH,"glib_autoptr_clear_GtkFontChooserWidget");
    }
    public static void glib_autoptr_clear_GtkFontChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2191.glib_autoptr_clear_GtkFontChooserWidget$MH, "glib_autoptr_clear_GtkFontChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.glib_autoptr_cleanup_GtkFontChooserWidget$MH,"glib_autoptr_cleanup_GtkFontChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkFontChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2191.glib_autoptr_cleanup_GtkFontChooserWidget$MH, "glib_autoptr_cleanup_GtkFontChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.glib_listautoptr_cleanup_GtkFontChooserWidget$MH,"glib_listautoptr_cleanup_GtkFontChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkFontChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2191.glib_listautoptr_cleanup_GtkFontChooserWidget$MH, "glib_listautoptr_cleanup_GtkFontChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.glib_slistautoptr_cleanup_GtkFontChooserWidget$MH,"glib_slistautoptr_cleanup_GtkFontChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkFontChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2191.glib_slistautoptr_cleanup_GtkFontChooserWidget$MH, "glib_slistautoptr_cleanup_GtkFontChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.glib_queueautoptr_cleanup_GtkFontChooserWidget$MH,"glib_queueautoptr_cleanup_GtkFontChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkFontChooserWidget ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2191.glib_queueautoptr_cleanup_GtkFontChooserWidget$MH, "glib_queueautoptr_cleanup_GtkFontChooserWidget");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFrame_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFrame_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFrame_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFrame_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.glib_autoptr_clear_GtkFrame$MH,"glib_autoptr_clear_GtkFrame");
    }
    public static void glib_autoptr_clear_GtkFrame ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2191.glib_autoptr_clear_GtkFrame$MH, "glib_autoptr_clear_GtkFrame");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.glib_autoptr_cleanup_GtkFrame$MH,"glib_autoptr_cleanup_GtkFrame");
    }
    public static void glib_autoptr_cleanup_GtkFrame ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2192.glib_autoptr_cleanup_GtkFrame$MH, "glib_autoptr_cleanup_GtkFrame");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.glib_listautoptr_cleanup_GtkFrame$MH,"glib_listautoptr_cleanup_GtkFrame");
    }
    public static void glib_listautoptr_cleanup_GtkFrame ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2192.glib_listautoptr_cleanup_GtkFrame$MH, "glib_listautoptr_cleanup_GtkFrame");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.glib_slistautoptr_cleanup_GtkFrame$MH,"glib_slistautoptr_cleanup_GtkFrame");
    }
    public static void glib_slistautoptr_cleanup_GtkFrame ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2192.glib_slistautoptr_cleanup_GtkFrame$MH, "glib_slistautoptr_cleanup_GtkFrame");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.glib_queueautoptr_cleanup_GtkFrame$MH,"glib_queueautoptr_cleanup_GtkFrame");
    }
    public static void glib_queueautoptr_cleanup_GtkFrame ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2192.glib_queueautoptr_cleanup_GtkFrame$MH, "glib_queueautoptr_cleanup_GtkFrame");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGLArea_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGLArea_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGLArea_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGLArea_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.glib_autoptr_clear_GtkGLArea$MH,"glib_autoptr_clear_GtkGLArea");
    }
    public static void glib_autoptr_clear_GtkGLArea ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2192.glib_autoptr_clear_GtkGLArea$MH, "glib_autoptr_clear_GtkGLArea");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.glib_autoptr_cleanup_GtkGLArea$MH,"glib_autoptr_cleanup_GtkGLArea");
    }
    public static void glib_autoptr_cleanup_GtkGLArea ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2192.glib_autoptr_cleanup_GtkGLArea$MH, "glib_autoptr_cleanup_GtkGLArea");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.glib_listautoptr_cleanup_GtkGLArea$MH,"glib_listautoptr_cleanup_GtkGLArea");
    }
    public static void glib_listautoptr_cleanup_GtkGLArea ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2193.glib_listautoptr_cleanup_GtkGLArea$MH, "glib_listautoptr_cleanup_GtkGLArea");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.glib_slistautoptr_cleanup_GtkGLArea$MH,"glib_slistautoptr_cleanup_GtkGLArea");
    }
    public static void glib_slistautoptr_cleanup_GtkGLArea ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2193.glib_slistautoptr_cleanup_GtkGLArea$MH, "glib_slistautoptr_cleanup_GtkGLArea");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.glib_queueautoptr_cleanup_GtkGLArea$MH,"glib_queueautoptr_cleanup_GtkGLArea");
    }
    public static void glib_queueautoptr_cleanup_GtkGLArea ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2193.glib_queueautoptr_cleanup_GtkGLArea$MH, "glib_queueautoptr_cleanup_GtkGLArea");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGesture_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesture_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesture_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesture_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.glib_autoptr_clear_GtkGesture$MH,"glib_autoptr_clear_GtkGesture");
    }
    public static void glib_autoptr_clear_GtkGesture ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2193.glib_autoptr_clear_GtkGesture$MH, "glib_autoptr_clear_GtkGesture");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.glib_autoptr_cleanup_GtkGesture$MH,"glib_autoptr_cleanup_GtkGesture");
    }
    public static void glib_autoptr_cleanup_GtkGesture ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2193.glib_autoptr_cleanup_GtkGesture$MH, "glib_autoptr_cleanup_GtkGesture");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.glib_listautoptr_cleanup_GtkGesture$MH,"glib_listautoptr_cleanup_GtkGesture");
    }
    public static void glib_listautoptr_cleanup_GtkGesture ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2193.glib_listautoptr_cleanup_GtkGesture$MH, "glib_listautoptr_cleanup_GtkGesture");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.glib_slistautoptr_cleanup_GtkGesture$MH,"glib_slistautoptr_cleanup_GtkGesture");
    }
    public static void glib_slistautoptr_cleanup_GtkGesture ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2194.glib_slistautoptr_cleanup_GtkGesture$MH, "glib_slistautoptr_cleanup_GtkGesture");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.glib_queueautoptr_cleanup_GtkGesture$MH,"glib_queueautoptr_cleanup_GtkGesture");
    }
    public static void glib_queueautoptr_cleanup_GtkGesture ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2194.glib_queueautoptr_cleanup_GtkGesture$MH, "glib_queueautoptr_cleanup_GtkGesture");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureDrag_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureDrag_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureDrag_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureDrag_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.glib_autoptr_clear_GtkGestureDrag$MH,"glib_autoptr_clear_GtkGestureDrag");
    }
    public static void glib_autoptr_clear_GtkGestureDrag ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2194.glib_autoptr_clear_GtkGestureDrag$MH, "glib_autoptr_clear_GtkGestureDrag");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.glib_autoptr_cleanup_GtkGestureDrag$MH,"glib_autoptr_cleanup_GtkGestureDrag");
    }
    public static void glib_autoptr_cleanup_GtkGestureDrag ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2194.glib_autoptr_cleanup_GtkGestureDrag$MH, "glib_autoptr_cleanup_GtkGestureDrag");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.glib_listautoptr_cleanup_GtkGestureDrag$MH,"glib_listautoptr_cleanup_GtkGestureDrag");
    }
    public static void glib_listautoptr_cleanup_GtkGestureDrag ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2194.glib_listautoptr_cleanup_GtkGestureDrag$MH, "glib_listautoptr_cleanup_GtkGestureDrag");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.glib_slistautoptr_cleanup_GtkGestureDrag$MH,"glib_slistautoptr_cleanup_GtkGestureDrag");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureDrag ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2194.glib_slistautoptr_cleanup_GtkGestureDrag$MH, "glib_slistautoptr_cleanup_GtkGestureDrag");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.glib_queueautoptr_cleanup_GtkGestureDrag$MH,"glib_queueautoptr_cleanup_GtkGestureDrag");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureDrag ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2195.glib_queueautoptr_cleanup_GtkGestureDrag$MH, "glib_queueautoptr_cleanup_GtkGestureDrag");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureLongPress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureLongPress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureLongPress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureLongPress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.glib_autoptr_clear_GtkGestureLongPress$MH,"glib_autoptr_clear_GtkGestureLongPress");
    }
    public static void glib_autoptr_clear_GtkGestureLongPress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2195.glib_autoptr_clear_GtkGestureLongPress$MH, "glib_autoptr_clear_GtkGestureLongPress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.glib_autoptr_cleanup_GtkGestureLongPress$MH,"glib_autoptr_cleanup_GtkGestureLongPress");
    }
    public static void glib_autoptr_cleanup_GtkGestureLongPress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2195.glib_autoptr_cleanup_GtkGestureLongPress$MH, "glib_autoptr_cleanup_GtkGestureLongPress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.glib_listautoptr_cleanup_GtkGestureLongPress$MH,"glib_listautoptr_cleanup_GtkGestureLongPress");
    }
    public static void glib_listautoptr_cleanup_GtkGestureLongPress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2195.glib_listautoptr_cleanup_GtkGestureLongPress$MH, "glib_listautoptr_cleanup_GtkGestureLongPress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.glib_slistautoptr_cleanup_GtkGestureLongPress$MH,"glib_slistautoptr_cleanup_GtkGestureLongPress");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureLongPress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2195.glib_slistautoptr_cleanup_GtkGestureLongPress$MH, "glib_slistautoptr_cleanup_GtkGestureLongPress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.glib_queueautoptr_cleanup_GtkGestureLongPress$MH,"glib_queueautoptr_cleanup_GtkGestureLongPress");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureLongPress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2195.glib_queueautoptr_cleanup_GtkGestureLongPress$MH, "glib_queueautoptr_cleanup_GtkGestureLongPress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureMultiPress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureMultiPress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureMultiPress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureMultiPress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureMultiPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.glib_autoptr_clear_GtkGestureMultiPress$MH,"glib_autoptr_clear_GtkGestureMultiPress");
    }
    public static void glib_autoptr_clear_GtkGestureMultiPress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2196.glib_autoptr_clear_GtkGestureMultiPress$MH, "glib_autoptr_clear_GtkGestureMultiPress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureMultiPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.glib_autoptr_cleanup_GtkGestureMultiPress$MH,"glib_autoptr_cleanup_GtkGestureMultiPress");
    }
    public static void glib_autoptr_cleanup_GtkGestureMultiPress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2196.glib_autoptr_cleanup_GtkGestureMultiPress$MH, "glib_autoptr_cleanup_GtkGestureMultiPress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureMultiPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.glib_listautoptr_cleanup_GtkGestureMultiPress$MH,"glib_listautoptr_cleanup_GtkGestureMultiPress");
    }
    public static void glib_listautoptr_cleanup_GtkGestureMultiPress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2196.glib_listautoptr_cleanup_GtkGestureMultiPress$MH, "glib_listautoptr_cleanup_GtkGestureMultiPress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureMultiPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.glib_slistautoptr_cleanup_GtkGestureMultiPress$MH,"glib_slistautoptr_cleanup_GtkGestureMultiPress");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureMultiPress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2196.glib_slistautoptr_cleanup_GtkGestureMultiPress$MH, "glib_slistautoptr_cleanup_GtkGestureMultiPress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureMultiPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.glib_queueautoptr_cleanup_GtkGestureMultiPress$MH,"glib_queueautoptr_cleanup_GtkGestureMultiPress");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureMultiPress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2196.glib_queueautoptr_cleanup_GtkGestureMultiPress$MH, "glib_queueautoptr_cleanup_GtkGestureMultiPress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGesturePan_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesturePan_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesturePan_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesturePan_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.glib_autoptr_clear_GtkGesturePan$MH,"glib_autoptr_clear_GtkGesturePan");
    }
    public static void glib_autoptr_clear_GtkGesturePan ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2196.glib_autoptr_clear_GtkGesturePan$MH, "glib_autoptr_clear_GtkGesturePan");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.glib_autoptr_cleanup_GtkGesturePan$MH,"glib_autoptr_cleanup_GtkGesturePan");
    }
    public static void glib_autoptr_cleanup_GtkGesturePan ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2197.glib_autoptr_cleanup_GtkGesturePan$MH, "glib_autoptr_cleanup_GtkGesturePan");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.glib_listautoptr_cleanup_GtkGesturePan$MH,"glib_listautoptr_cleanup_GtkGesturePan");
    }
    public static void glib_listautoptr_cleanup_GtkGesturePan ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2197.glib_listautoptr_cleanup_GtkGesturePan$MH, "glib_listautoptr_cleanup_GtkGesturePan");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.glib_slistautoptr_cleanup_GtkGesturePan$MH,"glib_slistautoptr_cleanup_GtkGesturePan");
    }
    public static void glib_slistautoptr_cleanup_GtkGesturePan ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2197.glib_slistautoptr_cleanup_GtkGesturePan$MH, "glib_slistautoptr_cleanup_GtkGesturePan");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.glib_queueautoptr_cleanup_GtkGesturePan$MH,"glib_queueautoptr_cleanup_GtkGesturePan");
    }
    public static void glib_queueautoptr_cleanup_GtkGesturePan ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2197.glib_queueautoptr_cleanup_GtkGesturePan$MH, "glib_queueautoptr_cleanup_GtkGesturePan");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureRotate_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureRotate_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureRotate_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureRotate_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.glib_autoptr_clear_GtkGestureRotate$MH,"glib_autoptr_clear_GtkGestureRotate");
    }
    public static void glib_autoptr_clear_GtkGestureRotate ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2197.glib_autoptr_clear_GtkGestureRotate$MH, "glib_autoptr_clear_GtkGestureRotate");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.glib_autoptr_cleanup_GtkGestureRotate$MH,"glib_autoptr_cleanup_GtkGestureRotate");
    }
    public static void glib_autoptr_cleanup_GtkGestureRotate ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2197.glib_autoptr_cleanup_GtkGestureRotate$MH, "glib_autoptr_cleanup_GtkGestureRotate");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.glib_listautoptr_cleanup_GtkGestureRotate$MH,"glib_listautoptr_cleanup_GtkGestureRotate");
    }
    public static void glib_listautoptr_cleanup_GtkGestureRotate ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2198.glib_listautoptr_cleanup_GtkGestureRotate$MH, "glib_listautoptr_cleanup_GtkGestureRotate");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.glib_slistautoptr_cleanup_GtkGestureRotate$MH,"glib_slistautoptr_cleanup_GtkGestureRotate");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureRotate ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2198.glib_slistautoptr_cleanup_GtkGestureRotate$MH, "glib_slistautoptr_cleanup_GtkGestureRotate");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.glib_queueautoptr_cleanup_GtkGestureRotate$MH,"glib_queueautoptr_cleanup_GtkGestureRotate");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureRotate ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2198.glib_queueautoptr_cleanup_GtkGestureRotate$MH, "glib_queueautoptr_cleanup_GtkGestureRotate");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureSingle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSingle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSingle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSingle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.glib_autoptr_clear_GtkGestureSingle$MH,"glib_autoptr_clear_GtkGestureSingle");
    }
    public static void glib_autoptr_clear_GtkGestureSingle ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2198.glib_autoptr_clear_GtkGestureSingle$MH, "glib_autoptr_clear_GtkGestureSingle");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.glib_autoptr_cleanup_GtkGestureSingle$MH,"glib_autoptr_cleanup_GtkGestureSingle");
    }
    public static void glib_autoptr_cleanup_GtkGestureSingle ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2198.glib_autoptr_cleanup_GtkGestureSingle$MH, "glib_autoptr_cleanup_GtkGestureSingle");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.glib_listautoptr_cleanup_GtkGestureSingle$MH,"glib_listautoptr_cleanup_GtkGestureSingle");
    }
    public static void glib_listautoptr_cleanup_GtkGestureSingle ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2198.glib_listautoptr_cleanup_GtkGestureSingle$MH, "glib_listautoptr_cleanup_GtkGestureSingle");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.glib_slistautoptr_cleanup_GtkGestureSingle$MH,"glib_slistautoptr_cleanup_GtkGestureSingle");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureSingle ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2199.glib_slistautoptr_cleanup_GtkGestureSingle$MH, "glib_slistautoptr_cleanup_GtkGestureSingle");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.glib_queueautoptr_cleanup_GtkGestureSingle$MH,"glib_queueautoptr_cleanup_GtkGestureSingle");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureSingle ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2199.glib_queueautoptr_cleanup_GtkGestureSingle$MH, "glib_queueautoptr_cleanup_GtkGestureSingle");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureSwipe_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSwipe_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSwipe_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSwipe_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.glib_autoptr_clear_GtkGestureSwipe$MH,"glib_autoptr_clear_GtkGestureSwipe");
    }
    public static void glib_autoptr_clear_GtkGestureSwipe ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2199.glib_autoptr_clear_GtkGestureSwipe$MH, "glib_autoptr_clear_GtkGestureSwipe");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.glib_autoptr_cleanup_GtkGestureSwipe$MH,"glib_autoptr_cleanup_GtkGestureSwipe");
    }
    public static void glib_autoptr_cleanup_GtkGestureSwipe ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2199.glib_autoptr_cleanup_GtkGestureSwipe$MH, "glib_autoptr_cleanup_GtkGestureSwipe");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.glib_listautoptr_cleanup_GtkGestureSwipe$MH,"glib_listautoptr_cleanup_GtkGestureSwipe");
    }
    public static void glib_listautoptr_cleanup_GtkGestureSwipe ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2199.glib_listautoptr_cleanup_GtkGestureSwipe$MH, "glib_listautoptr_cleanup_GtkGestureSwipe");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.glib_slistautoptr_cleanup_GtkGestureSwipe$MH,"glib_slistautoptr_cleanup_GtkGestureSwipe");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureSwipe ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2199.glib_slistautoptr_cleanup_GtkGestureSwipe$MH, "glib_slistautoptr_cleanup_GtkGestureSwipe");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.glib_queueautoptr_cleanup_GtkGestureSwipe$MH,"glib_queueautoptr_cleanup_GtkGestureSwipe");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureSwipe ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2200.glib_queueautoptr_cleanup_GtkGestureSwipe$MH, "glib_queueautoptr_cleanup_GtkGestureSwipe");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureZoom_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureZoom_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureZoom_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureZoom_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.glib_autoptr_clear_GtkGestureZoom$MH,"glib_autoptr_clear_GtkGestureZoom");
    }
    public static void glib_autoptr_clear_GtkGestureZoom ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2200.glib_autoptr_clear_GtkGestureZoom$MH, "glib_autoptr_clear_GtkGestureZoom");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.glib_autoptr_cleanup_GtkGestureZoom$MH,"glib_autoptr_cleanup_GtkGestureZoom");
    }
    public static void glib_autoptr_cleanup_GtkGestureZoom ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2200.glib_autoptr_cleanup_GtkGestureZoom$MH, "glib_autoptr_cleanup_GtkGestureZoom");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.glib_listautoptr_cleanup_GtkGestureZoom$MH,"glib_listautoptr_cleanup_GtkGestureZoom");
    }
    public static void glib_listautoptr_cleanup_GtkGestureZoom ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2200.glib_listautoptr_cleanup_GtkGestureZoom$MH, "glib_listautoptr_cleanup_GtkGestureZoom");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.glib_slistautoptr_cleanup_GtkGestureZoom$MH,"glib_slistautoptr_cleanup_GtkGestureZoom");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureZoom ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2200.glib_slistautoptr_cleanup_GtkGestureZoom$MH, "glib_slistautoptr_cleanup_GtkGestureZoom");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.glib_queueautoptr_cleanup_GtkGestureZoom$MH,"glib_queueautoptr_cleanup_GtkGestureZoom");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureZoom ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2200.glib_queueautoptr_cleanup_GtkGestureZoom$MH, "glib_queueautoptr_cleanup_GtkGestureZoom");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGrid_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGrid_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGrid_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGrid_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.glib_autoptr_clear_GtkGrid$MH,"glib_autoptr_clear_GtkGrid");
    }
    public static void glib_autoptr_clear_GtkGrid ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2201.glib_autoptr_clear_GtkGrid$MH, "glib_autoptr_clear_GtkGrid");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.glib_autoptr_cleanup_GtkGrid$MH,"glib_autoptr_cleanup_GtkGrid");
    }
    public static void glib_autoptr_cleanup_GtkGrid ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2201.glib_autoptr_cleanup_GtkGrid$MH, "glib_autoptr_cleanup_GtkGrid");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.glib_listautoptr_cleanup_GtkGrid$MH,"glib_listautoptr_cleanup_GtkGrid");
    }
    public static void glib_listautoptr_cleanup_GtkGrid ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2201.glib_listautoptr_cleanup_GtkGrid$MH, "glib_listautoptr_cleanup_GtkGrid");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.glib_slistautoptr_cleanup_GtkGrid$MH,"glib_slistautoptr_cleanup_GtkGrid");
    }
    public static void glib_slistautoptr_cleanup_GtkGrid ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2201.glib_slistautoptr_cleanup_GtkGrid$MH, "glib_slistautoptr_cleanup_GtkGrid");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.glib_queueautoptr_cleanup_GtkGrid$MH,"glib_queueautoptr_cleanup_GtkGrid");
    }
    public static void glib_queueautoptr_cleanup_GtkGrid ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2201.glib_queueautoptr_cleanup_GtkGrid$MH, "glib_queueautoptr_cleanup_GtkGrid");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkHeaderBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkHeaderBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkHeaderBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkHeaderBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.glib_autoptr_clear_GtkHeaderBar$MH,"glib_autoptr_clear_GtkHeaderBar");
    }
    public static void glib_autoptr_clear_GtkHeaderBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2201.glib_autoptr_clear_GtkHeaderBar$MH, "glib_autoptr_clear_GtkHeaderBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.glib_autoptr_cleanup_GtkHeaderBar$MH,"glib_autoptr_cleanup_GtkHeaderBar");
    }
    public static void glib_autoptr_cleanup_GtkHeaderBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2202.glib_autoptr_cleanup_GtkHeaderBar$MH, "glib_autoptr_cleanup_GtkHeaderBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.glib_listautoptr_cleanup_GtkHeaderBar$MH,"glib_listautoptr_cleanup_GtkHeaderBar");
    }
    public static void glib_listautoptr_cleanup_GtkHeaderBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2202.glib_listautoptr_cleanup_GtkHeaderBar$MH, "glib_listautoptr_cleanup_GtkHeaderBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.glib_slistautoptr_cleanup_GtkHeaderBar$MH,"glib_slistautoptr_cleanup_GtkHeaderBar");
    }
    public static void glib_slistautoptr_cleanup_GtkHeaderBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2202.glib_slistautoptr_cleanup_GtkHeaderBar$MH, "glib_slistautoptr_cleanup_GtkHeaderBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.glib_queueautoptr_cleanup_GtkHeaderBar$MH,"glib_queueautoptr_cleanup_GtkHeaderBar");
    }
    public static void glib_queueautoptr_cleanup_GtkHeaderBar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2202.glib_queueautoptr_cleanup_GtkHeaderBar$MH, "glib_queueautoptr_cleanup_GtkHeaderBar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIMContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.glib_autoptr_clear_GtkIMContext$MH,"glib_autoptr_clear_GtkIMContext");
    }
    public static void glib_autoptr_clear_GtkIMContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2202.glib_autoptr_clear_GtkIMContext$MH, "glib_autoptr_clear_GtkIMContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.glib_autoptr_cleanup_GtkIMContext$MH,"glib_autoptr_cleanup_GtkIMContext");
    }
    public static void glib_autoptr_cleanup_GtkIMContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2202.glib_autoptr_cleanup_GtkIMContext$MH, "glib_autoptr_cleanup_GtkIMContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.glib_listautoptr_cleanup_GtkIMContext$MH,"glib_listautoptr_cleanup_GtkIMContext");
    }
    public static void glib_listautoptr_cleanup_GtkIMContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2203.glib_listautoptr_cleanup_GtkIMContext$MH, "glib_listautoptr_cleanup_GtkIMContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.glib_slistautoptr_cleanup_GtkIMContext$MH,"glib_slistautoptr_cleanup_GtkIMContext");
    }
    public static void glib_slistautoptr_cleanup_GtkIMContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2203.glib_slistautoptr_cleanup_GtkIMContext$MH, "glib_slistautoptr_cleanup_GtkIMContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.glib_queueautoptr_cleanup_GtkIMContext$MH,"glib_queueautoptr_cleanup_GtkIMContext");
    }
    public static void glib_queueautoptr_cleanup_GtkIMContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2203.glib_queueautoptr_cleanup_GtkIMContext$MH, "glib_queueautoptr_cleanup_GtkIMContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIMContextSimple_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContextSimple_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContextSimple_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContextSimple_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.glib_autoptr_clear_GtkIMContextSimple$MH,"glib_autoptr_clear_GtkIMContextSimple");
    }
    public static void glib_autoptr_clear_GtkIMContextSimple ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2203.glib_autoptr_clear_GtkIMContextSimple$MH, "glib_autoptr_clear_GtkIMContextSimple");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.glib_autoptr_cleanup_GtkIMContextSimple$MH,"glib_autoptr_cleanup_GtkIMContextSimple");
    }
    public static void glib_autoptr_cleanup_GtkIMContextSimple ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2203.glib_autoptr_cleanup_GtkIMContextSimple$MH, "glib_autoptr_cleanup_GtkIMContextSimple");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.glib_listautoptr_cleanup_GtkIMContextSimple$MH,"glib_listautoptr_cleanup_GtkIMContextSimple");
    }
    public static void glib_listautoptr_cleanup_GtkIMContextSimple ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2203.glib_listautoptr_cleanup_GtkIMContextSimple$MH, "glib_listautoptr_cleanup_GtkIMContextSimple");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.glib_slistautoptr_cleanup_GtkIMContextSimple$MH,"glib_slistautoptr_cleanup_GtkIMContextSimple");
    }
    public static void glib_slistautoptr_cleanup_GtkIMContextSimple ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2204.glib_slistautoptr_cleanup_GtkIMContextSimple$MH, "glib_slistautoptr_cleanup_GtkIMContextSimple");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.glib_queueautoptr_cleanup_GtkIMContextSimple$MH,"glib_queueautoptr_cleanup_GtkIMContextSimple");
    }
    public static void glib_queueautoptr_cleanup_GtkIMContextSimple ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2204.glib_queueautoptr_cleanup_GtkIMContextSimple$MH, "glib_queueautoptr_cleanup_GtkIMContextSimple");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIMMulticontext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMMulticontext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMMulticontext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMMulticontext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.glib_autoptr_clear_GtkIMMulticontext$MH,"glib_autoptr_clear_GtkIMMulticontext");
    }
    public static void glib_autoptr_clear_GtkIMMulticontext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2204.glib_autoptr_clear_GtkIMMulticontext$MH, "glib_autoptr_clear_GtkIMMulticontext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.glib_autoptr_cleanup_GtkIMMulticontext$MH,"glib_autoptr_cleanup_GtkIMMulticontext");
    }
    public static void glib_autoptr_cleanup_GtkIMMulticontext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2204.glib_autoptr_cleanup_GtkIMMulticontext$MH, "glib_autoptr_cleanup_GtkIMMulticontext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.glib_listautoptr_cleanup_GtkIMMulticontext$MH,"glib_listautoptr_cleanup_GtkIMMulticontext");
    }
    public static void glib_listautoptr_cleanup_GtkIMMulticontext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2204.glib_listautoptr_cleanup_GtkIMMulticontext$MH, "glib_listautoptr_cleanup_GtkIMMulticontext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.glib_slistautoptr_cleanup_GtkIMMulticontext$MH,"glib_slistautoptr_cleanup_GtkIMMulticontext");
    }
    public static void glib_slistautoptr_cleanup_GtkIMMulticontext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2204.glib_slistautoptr_cleanup_GtkIMMulticontext$MH, "glib_slistautoptr_cleanup_GtkIMMulticontext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.glib_queueautoptr_cleanup_GtkIMMulticontext$MH,"glib_queueautoptr_cleanup_GtkIMMulticontext");
    }
    public static void glib_queueautoptr_cleanup_GtkIMMulticontext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2205.glib_queueautoptr_cleanup_GtkIMMulticontext$MH, "glib_queueautoptr_cleanup_GtkIMMulticontext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIconInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIconInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.glib_autoptr_clear_GtkIconInfo$MH,"glib_autoptr_clear_GtkIconInfo");
    }
    public static void glib_autoptr_clear_GtkIconInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2205.glib_autoptr_clear_GtkIconInfo$MH, "glib_autoptr_clear_GtkIconInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIconInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.glib_autoptr_cleanup_GtkIconInfo$MH,"glib_autoptr_cleanup_GtkIconInfo");
    }
    public static void glib_autoptr_cleanup_GtkIconInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2205.glib_autoptr_cleanup_GtkIconInfo$MH, "glib_autoptr_cleanup_GtkIconInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIconInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.glib_listautoptr_cleanup_GtkIconInfo$MH,"glib_listautoptr_cleanup_GtkIconInfo");
    }
    public static void glib_listautoptr_cleanup_GtkIconInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2205.glib_listautoptr_cleanup_GtkIconInfo$MH, "glib_listautoptr_cleanup_GtkIconInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIconInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.glib_slistautoptr_cleanup_GtkIconInfo$MH,"glib_slistautoptr_cleanup_GtkIconInfo");
    }
    public static void glib_slistautoptr_cleanup_GtkIconInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2205.glib_slistautoptr_cleanup_GtkIconInfo$MH, "glib_slistautoptr_cleanup_GtkIconInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIconInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.glib_queueautoptr_cleanup_GtkIconInfo$MH,"glib_queueautoptr_cleanup_GtkIconInfo");
    }
    public static void glib_queueautoptr_cleanup_GtkIconInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2205.glib_queueautoptr_cleanup_GtkIconInfo$MH, "glib_queueautoptr_cleanup_GtkIconInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIconTheme_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconTheme_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconTheme_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconTheme_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.glib_autoptr_clear_GtkIconTheme$MH,"glib_autoptr_clear_GtkIconTheme");
    }
    public static void glib_autoptr_clear_GtkIconTheme ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2206.glib_autoptr_clear_GtkIconTheme$MH, "glib_autoptr_clear_GtkIconTheme");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.glib_autoptr_cleanup_GtkIconTheme$MH,"glib_autoptr_cleanup_GtkIconTheme");
    }
    public static void glib_autoptr_cleanup_GtkIconTheme ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2206.glib_autoptr_cleanup_GtkIconTheme$MH, "glib_autoptr_cleanup_GtkIconTheme");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.glib_listautoptr_cleanup_GtkIconTheme$MH,"glib_listautoptr_cleanup_GtkIconTheme");
    }
    public static void glib_listautoptr_cleanup_GtkIconTheme ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2206.glib_listautoptr_cleanup_GtkIconTheme$MH, "glib_listautoptr_cleanup_GtkIconTheme");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.glib_slistautoptr_cleanup_GtkIconTheme$MH,"glib_slistautoptr_cleanup_GtkIconTheme");
    }
    public static void glib_slistautoptr_cleanup_GtkIconTheme ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2206.glib_slistautoptr_cleanup_GtkIconTheme$MH, "glib_slistautoptr_cleanup_GtkIconTheme");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.glib_queueautoptr_cleanup_GtkIconTheme$MH,"glib_queueautoptr_cleanup_GtkIconTheme");
    }
    public static void glib_queueautoptr_cleanup_GtkIconTheme ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2206.glib_queueautoptr_cleanup_GtkIconTheme$MH, "glib_queueautoptr_cleanup_GtkIconTheme");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIconView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.glib_autoptr_clear_GtkIconView$MH,"glib_autoptr_clear_GtkIconView");
    }
    public static void glib_autoptr_clear_GtkIconView ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2206.glib_autoptr_clear_GtkIconView$MH, "glib_autoptr_clear_GtkIconView");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.glib_autoptr_cleanup_GtkIconView$MH,"glib_autoptr_cleanup_GtkIconView");
    }
    public static void glib_autoptr_cleanup_GtkIconView ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2207.glib_autoptr_cleanup_GtkIconView$MH, "glib_autoptr_cleanup_GtkIconView");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.glib_listautoptr_cleanup_GtkIconView$MH,"glib_listautoptr_cleanup_GtkIconView");
    }
    public static void glib_listautoptr_cleanup_GtkIconView ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2207.glib_listautoptr_cleanup_GtkIconView$MH, "glib_listautoptr_cleanup_GtkIconView");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.glib_slistautoptr_cleanup_GtkIconView$MH,"glib_slistautoptr_cleanup_GtkIconView");
    }
    public static void glib_slistautoptr_cleanup_GtkIconView ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2207.glib_slistautoptr_cleanup_GtkIconView$MH, "glib_slistautoptr_cleanup_GtkIconView");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.glib_queueautoptr_cleanup_GtkIconView$MH,"glib_queueautoptr_cleanup_GtkIconView");
    }
    public static void glib_queueautoptr_cleanup_GtkIconView ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2207.glib_queueautoptr_cleanup_GtkIconView$MH, "glib_queueautoptr_cleanup_GtkIconView");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkImage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.glib_autoptr_clear_GtkImage$MH,"glib_autoptr_clear_GtkImage");
    }
    public static void glib_autoptr_clear_GtkImage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2207.glib_autoptr_clear_GtkImage$MH, "glib_autoptr_clear_GtkImage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.glib_autoptr_cleanup_GtkImage$MH,"glib_autoptr_cleanup_GtkImage");
    }
    public static void glib_autoptr_cleanup_GtkImage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2207.glib_autoptr_cleanup_GtkImage$MH, "glib_autoptr_cleanup_GtkImage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.glib_listautoptr_cleanup_GtkImage$MH,"glib_listautoptr_cleanup_GtkImage");
    }
    public static void glib_listautoptr_cleanup_GtkImage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2208.glib_listautoptr_cleanup_GtkImage$MH, "glib_listautoptr_cleanup_GtkImage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.glib_slistautoptr_cleanup_GtkImage$MH,"glib_slistautoptr_cleanup_GtkImage");
    }
    public static void glib_slistautoptr_cleanup_GtkImage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2208.glib_slistautoptr_cleanup_GtkImage$MH, "glib_slistautoptr_cleanup_GtkImage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.glib_queueautoptr_cleanup_GtkImage$MH,"glib_queueautoptr_cleanup_GtkImage");
    }
    public static void glib_queueautoptr_cleanup_GtkImage ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2208.glib_queueautoptr_cleanup_GtkImage$MH, "glib_queueautoptr_cleanup_GtkImage");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkInfoBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.glib_autoptr_clear_GtkInfoBar$MH,"glib_autoptr_clear_GtkInfoBar");
    }
    public static void glib_autoptr_clear_GtkInfoBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2208.glib_autoptr_clear_GtkInfoBar$MH, "glib_autoptr_clear_GtkInfoBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.glib_autoptr_cleanup_GtkInfoBar$MH,"glib_autoptr_cleanup_GtkInfoBar");
    }
    public static void glib_autoptr_cleanup_GtkInfoBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2208.glib_autoptr_cleanup_GtkInfoBar$MH, "glib_autoptr_cleanup_GtkInfoBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.glib_listautoptr_cleanup_GtkInfoBar$MH,"glib_listautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_listautoptr_cleanup_GtkInfoBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2208.glib_listautoptr_cleanup_GtkInfoBar$MH, "glib_listautoptr_cleanup_GtkInfoBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.glib_slistautoptr_cleanup_GtkInfoBar$MH,"glib_slistautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_slistautoptr_cleanup_GtkInfoBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2209.glib_slistautoptr_cleanup_GtkInfoBar$MH, "glib_slistautoptr_cleanup_GtkInfoBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.glib_queueautoptr_cleanup_GtkInfoBar$MH,"glib_queueautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_queueautoptr_cleanup_GtkInfoBar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2209.glib_queueautoptr_cleanup_GtkInfoBar$MH, "glib_queueautoptr_cleanup_GtkInfoBar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkInvisible_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInvisible_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInvisible_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInvisible_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.glib_autoptr_clear_GtkInvisible$MH,"glib_autoptr_clear_GtkInvisible");
    }
    public static void glib_autoptr_clear_GtkInvisible ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2209.glib_autoptr_clear_GtkInvisible$MH, "glib_autoptr_clear_GtkInvisible");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.glib_autoptr_cleanup_GtkInvisible$MH,"glib_autoptr_cleanup_GtkInvisible");
    }
    public static void glib_autoptr_cleanup_GtkInvisible ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2209.glib_autoptr_cleanup_GtkInvisible$MH, "glib_autoptr_cleanup_GtkInvisible");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.glib_listautoptr_cleanup_GtkInvisible$MH,"glib_listautoptr_cleanup_GtkInvisible");
    }
    public static void glib_listautoptr_cleanup_GtkInvisible ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2209.glib_listautoptr_cleanup_GtkInvisible$MH, "glib_listautoptr_cleanup_GtkInvisible");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.glib_slistautoptr_cleanup_GtkInvisible$MH,"glib_slistautoptr_cleanup_GtkInvisible");
    }
    public static void glib_slistautoptr_cleanup_GtkInvisible ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2209.glib_slistautoptr_cleanup_GtkInvisible$MH, "glib_slistautoptr_cleanup_GtkInvisible");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2210.glib_queueautoptr_cleanup_GtkInvisible$MH,"glib_queueautoptr_cleanup_GtkInvisible");
    }
    public static void glib_queueautoptr_cleanup_GtkInvisible ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2210.glib_queueautoptr_cleanup_GtkInvisible$MH, "glib_queueautoptr_cleanup_GtkInvisible");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2210.glib_autoptr_clear_GtkLayout$MH,"glib_autoptr_clear_GtkLayout");
    }
    public static void glib_autoptr_clear_GtkLayout ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2210.glib_autoptr_clear_GtkLayout$MH, "glib_autoptr_clear_GtkLayout");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2210.glib_autoptr_cleanup_GtkLayout$MH,"glib_autoptr_cleanup_GtkLayout");
    }
    public static void glib_autoptr_cleanup_GtkLayout ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2210.glib_autoptr_cleanup_GtkLayout$MH, "glib_autoptr_cleanup_GtkLayout");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2210.glib_listautoptr_cleanup_GtkLayout$MH,"glib_listautoptr_cleanup_GtkLayout");
    }
    public static void glib_listautoptr_cleanup_GtkLayout ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2210.glib_listautoptr_cleanup_GtkLayout$MH, "glib_listautoptr_cleanup_GtkLayout");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2210.glib_slistautoptr_cleanup_GtkLayout$MH,"glib_slistautoptr_cleanup_GtkLayout");
    }
    public static void glib_slistautoptr_cleanup_GtkLayout ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2210.glib_slistautoptr_cleanup_GtkLayout$MH, "glib_slistautoptr_cleanup_GtkLayout");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2210.glib_queueautoptr_cleanup_GtkLayout$MH,"glib_queueautoptr_cleanup_GtkLayout");
    }
    public static void glib_queueautoptr_cleanup_GtkLayout ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2210.glib_queueautoptr_cleanup_GtkLayout$MH, "glib_queueautoptr_cleanup_GtkLayout");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLevelBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2211.glib_autoptr_clear_GtkLevelBar$MH,"glib_autoptr_clear_GtkLevelBar");
    }
    public static void glib_autoptr_clear_GtkLevelBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2211.glib_autoptr_clear_GtkLevelBar$MH, "glib_autoptr_clear_GtkLevelBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2211.glib_autoptr_cleanup_GtkLevelBar$MH,"glib_autoptr_cleanup_GtkLevelBar");
    }
    public static void glib_autoptr_cleanup_GtkLevelBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2211.glib_autoptr_cleanup_GtkLevelBar$MH, "glib_autoptr_cleanup_GtkLevelBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2211.glib_listautoptr_cleanup_GtkLevelBar$MH,"glib_listautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_listautoptr_cleanup_GtkLevelBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2211.glib_listautoptr_cleanup_GtkLevelBar$MH, "glib_listautoptr_cleanup_GtkLevelBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2211.glib_slistautoptr_cleanup_GtkLevelBar$MH,"glib_slistautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_slistautoptr_cleanup_GtkLevelBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2211.glib_slistautoptr_cleanup_GtkLevelBar$MH, "glib_slistautoptr_cleanup_GtkLevelBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2211.glib_queueautoptr_cleanup_GtkLevelBar$MH,"glib_queueautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_queueautoptr_cleanup_GtkLevelBar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2211.glib_queueautoptr_cleanup_GtkLevelBar$MH, "glib_queueautoptr_cleanup_GtkLevelBar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLinkButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2211.glib_autoptr_clear_GtkLinkButton$MH,"glib_autoptr_clear_GtkLinkButton");
    }
    public static void glib_autoptr_clear_GtkLinkButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2211.glib_autoptr_clear_GtkLinkButton$MH, "glib_autoptr_clear_GtkLinkButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2212.glib_autoptr_cleanup_GtkLinkButton$MH,"glib_autoptr_cleanup_GtkLinkButton");
    }
    public static void glib_autoptr_cleanup_GtkLinkButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2212.glib_autoptr_cleanup_GtkLinkButton$MH, "glib_autoptr_cleanup_GtkLinkButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2212.glib_listautoptr_cleanup_GtkLinkButton$MH,"glib_listautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_listautoptr_cleanup_GtkLinkButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2212.glib_listautoptr_cleanup_GtkLinkButton$MH, "glib_listautoptr_cleanup_GtkLinkButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2212.glib_slistautoptr_cleanup_GtkLinkButton$MH,"glib_slistautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_slistautoptr_cleanup_GtkLinkButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2212.glib_slistautoptr_cleanup_GtkLinkButton$MH, "glib_slistautoptr_cleanup_GtkLinkButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2212.glib_queueautoptr_cleanup_GtkLinkButton$MH,"glib_queueautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_queueautoptr_cleanup_GtkLinkButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2212.glib_queueautoptr_cleanup_GtkLinkButton$MH, "glib_queueautoptr_cleanup_GtkLinkButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkListStore_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2212.glib_autoptr_clear_GtkListStore$MH,"glib_autoptr_clear_GtkListStore");
    }
    public static void glib_autoptr_clear_GtkListStore ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2212.glib_autoptr_clear_GtkListStore$MH, "glib_autoptr_clear_GtkListStore");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2212.glib_autoptr_cleanup_GtkListStore$MH,"glib_autoptr_cleanup_GtkListStore");
    }
    public static void glib_autoptr_cleanup_GtkListStore ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2212.glib_autoptr_cleanup_GtkListStore$MH, "glib_autoptr_cleanup_GtkListStore");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.glib_listautoptr_cleanup_GtkListStore$MH,"glib_listautoptr_cleanup_GtkListStore");
    }
    public static void glib_listautoptr_cleanup_GtkListStore ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2213.glib_listautoptr_cleanup_GtkListStore$MH, "glib_listautoptr_cleanup_GtkListStore");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.glib_slistautoptr_cleanup_GtkListStore$MH,"glib_slistautoptr_cleanup_GtkListStore");
    }
    public static void glib_slistautoptr_cleanup_GtkListStore ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2213.glib_slistautoptr_cleanup_GtkListStore$MH, "glib_slistautoptr_cleanup_GtkListStore");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.glib_queueautoptr_cleanup_GtkListStore$MH,"glib_queueautoptr_cleanup_GtkListStore");
    }
    public static void glib_queueautoptr_cleanup_GtkListStore ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2213.glib_queueautoptr_cleanup_GtkListStore$MH, "glib_queueautoptr_cleanup_GtkListStore");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLockButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.glib_autoptr_clear_GtkLockButton$MH,"glib_autoptr_clear_GtkLockButton");
    }
    public static void glib_autoptr_clear_GtkLockButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2213.glib_autoptr_clear_GtkLockButton$MH, "glib_autoptr_clear_GtkLockButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.glib_autoptr_cleanup_GtkLockButton$MH,"glib_autoptr_cleanup_GtkLockButton");
    }
    public static void glib_autoptr_cleanup_GtkLockButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2213.glib_autoptr_cleanup_GtkLockButton$MH, "glib_autoptr_cleanup_GtkLockButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.glib_listautoptr_cleanup_GtkLockButton$MH,"glib_listautoptr_cleanup_GtkLockButton");
    }
    public static void glib_listautoptr_cleanup_GtkLockButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2213.glib_listautoptr_cleanup_GtkLockButton$MH, "glib_listautoptr_cleanup_GtkLockButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.glib_slistautoptr_cleanup_GtkLockButton$MH,"glib_slistautoptr_cleanup_GtkLockButton");
    }
    public static void glib_slistautoptr_cleanup_GtkLockButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2214.glib_slistautoptr_cleanup_GtkLockButton$MH, "glib_slistautoptr_cleanup_GtkLockButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.glib_queueautoptr_cleanup_GtkLockButton$MH,"glib_queueautoptr_cleanup_GtkLockButton");
    }
    public static void glib_queueautoptr_cleanup_GtkLockButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2214.glib_queueautoptr_cleanup_GtkLockButton$MH, "glib_queueautoptr_cleanup_GtkLockButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.glib_autoptr_clear_GtkMenuBar$MH,"glib_autoptr_clear_GtkMenuBar");
    }
    public static void glib_autoptr_clear_GtkMenuBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2214.glib_autoptr_clear_GtkMenuBar$MH, "glib_autoptr_clear_GtkMenuBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.glib_autoptr_cleanup_GtkMenuBar$MH,"glib_autoptr_cleanup_GtkMenuBar");
    }
    public static void glib_autoptr_cleanup_GtkMenuBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2214.glib_autoptr_cleanup_GtkMenuBar$MH, "glib_autoptr_cleanup_GtkMenuBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.glib_listautoptr_cleanup_GtkMenuBar$MH,"glib_listautoptr_cleanup_GtkMenuBar");
    }
    public static void glib_listautoptr_cleanup_GtkMenuBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2214.glib_listautoptr_cleanup_GtkMenuBar$MH, "glib_listautoptr_cleanup_GtkMenuBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.glib_slistautoptr_cleanup_GtkMenuBar$MH,"glib_slistautoptr_cleanup_GtkMenuBar");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2214.glib_slistautoptr_cleanup_GtkMenuBar$MH, "glib_slistautoptr_cleanup_GtkMenuBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.glib_queueautoptr_cleanup_GtkMenuBar$MH,"glib_queueautoptr_cleanup_GtkMenuBar");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuBar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2215.glib_queueautoptr_cleanup_GtkMenuBar$MH, "glib_queueautoptr_cleanup_GtkMenuBar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.glib_autoptr_clear_GtkMenuButton$MH,"glib_autoptr_clear_GtkMenuButton");
    }
    public static void glib_autoptr_clear_GtkMenuButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2215.glib_autoptr_clear_GtkMenuButton$MH, "glib_autoptr_clear_GtkMenuButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.glib_autoptr_cleanup_GtkMenuButton$MH,"glib_autoptr_cleanup_GtkMenuButton");
    }
    public static void glib_autoptr_cleanup_GtkMenuButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2215.glib_autoptr_cleanup_GtkMenuButton$MH, "glib_autoptr_cleanup_GtkMenuButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.glib_listautoptr_cleanup_GtkMenuButton$MH,"glib_listautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_listautoptr_cleanup_GtkMenuButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2215.glib_listautoptr_cleanup_GtkMenuButton$MH, "glib_listautoptr_cleanup_GtkMenuButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.glib_slistautoptr_cleanup_GtkMenuButton$MH,"glib_slistautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2215.glib_slistautoptr_cleanup_GtkMenuButton$MH, "glib_slistautoptr_cleanup_GtkMenuButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.glib_queueautoptr_cleanup_GtkMenuButton$MH,"glib_queueautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2215.glib_queueautoptr_cleanup_GtkMenuButton$MH, "glib_queueautoptr_cleanup_GtkMenuButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2216.glib_autoptr_clear_GtkMenuItem$MH,"glib_autoptr_clear_GtkMenuItem");
    }
    public static void glib_autoptr_clear_GtkMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2216.glib_autoptr_clear_GtkMenuItem$MH, "glib_autoptr_clear_GtkMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2216.glib_autoptr_cleanup_GtkMenuItem$MH,"glib_autoptr_cleanup_GtkMenuItem");
    }
    public static void glib_autoptr_cleanup_GtkMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2216.glib_autoptr_cleanup_GtkMenuItem$MH, "glib_autoptr_cleanup_GtkMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2216.glib_listautoptr_cleanup_GtkMenuItem$MH,"glib_listautoptr_cleanup_GtkMenuItem");
    }
    public static void glib_listautoptr_cleanup_GtkMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2216.glib_listautoptr_cleanup_GtkMenuItem$MH, "glib_listautoptr_cleanup_GtkMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2216.glib_slistautoptr_cleanup_GtkMenuItem$MH,"glib_slistautoptr_cleanup_GtkMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2216.glib_slistautoptr_cleanup_GtkMenuItem$MH, "glib_slistautoptr_cleanup_GtkMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2216.glib_queueautoptr_cleanup_GtkMenuItem$MH,"glib_queueautoptr_cleanup_GtkMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2216.glib_queueautoptr_cleanup_GtkMenuItem$MH, "glib_queueautoptr_cleanup_GtkMenuItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuToolButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuToolButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuToolButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuToolButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2216.glib_autoptr_clear_GtkMenuToolButton$MH,"glib_autoptr_clear_GtkMenuToolButton");
    }
    public static void glib_autoptr_clear_GtkMenuToolButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2216.glib_autoptr_clear_GtkMenuToolButton$MH, "glib_autoptr_clear_GtkMenuToolButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2217.glib_autoptr_cleanup_GtkMenuToolButton$MH,"glib_autoptr_cleanup_GtkMenuToolButton");
    }
    public static void glib_autoptr_cleanup_GtkMenuToolButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2217.glib_autoptr_cleanup_GtkMenuToolButton$MH, "glib_autoptr_cleanup_GtkMenuToolButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2217.glib_listautoptr_cleanup_GtkMenuToolButton$MH,"glib_listautoptr_cleanup_GtkMenuToolButton");
    }
    public static void glib_listautoptr_cleanup_GtkMenuToolButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2217.glib_listautoptr_cleanup_GtkMenuToolButton$MH, "glib_listautoptr_cleanup_GtkMenuToolButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2217.glib_slistautoptr_cleanup_GtkMenuToolButton$MH,"glib_slistautoptr_cleanup_GtkMenuToolButton");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuToolButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2217.glib_slistautoptr_cleanup_GtkMenuToolButton$MH, "glib_slistautoptr_cleanup_GtkMenuToolButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2217.glib_queueautoptr_cleanup_GtkMenuToolButton$MH,"glib_queueautoptr_cleanup_GtkMenuToolButton");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuToolButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2217.glib_queueautoptr_cleanup_GtkMenuToolButton$MH, "glib_queueautoptr_cleanup_GtkMenuToolButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMessageDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2217.glib_autoptr_clear_GtkMessageDialog$MH,"glib_autoptr_clear_GtkMessageDialog");
    }
    public static void glib_autoptr_clear_GtkMessageDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2217.glib_autoptr_clear_GtkMessageDialog$MH, "glib_autoptr_clear_GtkMessageDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2217.glib_autoptr_cleanup_GtkMessageDialog$MH,"glib_autoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_autoptr_cleanup_GtkMessageDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2217.glib_autoptr_cleanup_GtkMessageDialog$MH, "glib_autoptr_cleanup_GtkMessageDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.glib_listautoptr_cleanup_GtkMessageDialog$MH,"glib_listautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_listautoptr_cleanup_GtkMessageDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2218.glib_listautoptr_cleanup_GtkMessageDialog$MH, "glib_listautoptr_cleanup_GtkMessageDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.glib_slistautoptr_cleanup_GtkMessageDialog$MH,"glib_slistautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkMessageDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2218.glib_slistautoptr_cleanup_GtkMessageDialog$MH, "glib_slistautoptr_cleanup_GtkMessageDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.glib_queueautoptr_cleanup_GtkMessageDialog$MH,"glib_queueautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkMessageDialog ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2218.glib_queueautoptr_cleanup_GtkMessageDialog$MH, "glib_queueautoptr_cleanup_GtkMessageDialog");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.glib_autoptr_clear_GtkMountOperation$MH,"glib_autoptr_clear_GtkMountOperation");
    }
    public static void glib_autoptr_clear_GtkMountOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2218.glib_autoptr_clear_GtkMountOperation$MH, "glib_autoptr_clear_GtkMountOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.glib_autoptr_cleanup_GtkMountOperation$MH,"glib_autoptr_cleanup_GtkMountOperation");
    }
    public static void glib_autoptr_cleanup_GtkMountOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2218.glib_autoptr_cleanup_GtkMountOperation$MH, "glib_autoptr_cleanup_GtkMountOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.glib_listautoptr_cleanup_GtkMountOperation$MH,"glib_listautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_listautoptr_cleanup_GtkMountOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2218.glib_listautoptr_cleanup_GtkMountOperation$MH, "glib_listautoptr_cleanup_GtkMountOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.glib_slistautoptr_cleanup_GtkMountOperation$MH,"glib_slistautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_slistautoptr_cleanup_GtkMountOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2219.glib_slistautoptr_cleanup_GtkMountOperation$MH, "glib_slistautoptr_cleanup_GtkMountOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.glib_queueautoptr_cleanup_GtkMountOperation$MH,"glib_queueautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_queueautoptr_cleanup_GtkMountOperation ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2219.glib_queueautoptr_cleanup_GtkMountOperation$MH, "glib_queueautoptr_cleanup_GtkMountOperation");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNotebook_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.glib_autoptr_clear_GtkNotebook$MH,"glib_autoptr_clear_GtkNotebook");
    }
    public static void glib_autoptr_clear_GtkNotebook ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2219.glib_autoptr_clear_GtkNotebook$MH, "glib_autoptr_clear_GtkNotebook");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.glib_autoptr_cleanup_GtkNotebook$MH,"glib_autoptr_cleanup_GtkNotebook");
    }
    public static void glib_autoptr_cleanup_GtkNotebook ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2219.glib_autoptr_cleanup_GtkNotebook$MH, "glib_autoptr_cleanup_GtkNotebook");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.glib_listautoptr_cleanup_GtkNotebook$MH,"glib_listautoptr_cleanup_GtkNotebook");
    }
    public static void glib_listautoptr_cleanup_GtkNotebook ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2219.glib_listautoptr_cleanup_GtkNotebook$MH, "glib_listautoptr_cleanup_GtkNotebook");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.glib_slistautoptr_cleanup_GtkNotebook$MH,"glib_slistautoptr_cleanup_GtkNotebook");
    }
    public static void glib_slistautoptr_cleanup_GtkNotebook ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2219.glib_slistautoptr_cleanup_GtkNotebook$MH, "glib_slistautoptr_cleanup_GtkNotebook");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.glib_queueautoptr_cleanup_GtkNotebook$MH,"glib_queueautoptr_cleanup_GtkNotebook");
    }
    public static void glib_queueautoptr_cleanup_GtkNotebook ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2220.glib_queueautoptr_cleanup_GtkNotebook$MH, "glib_queueautoptr_cleanup_GtkNotebook");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkOffscreenWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOffscreenWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOffscreenWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOffscreenWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.glib_autoptr_clear_GtkOffscreenWindow$MH,"glib_autoptr_clear_GtkOffscreenWindow");
    }
    public static void glib_autoptr_clear_GtkOffscreenWindow ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2220.glib_autoptr_clear_GtkOffscreenWindow$MH, "glib_autoptr_clear_GtkOffscreenWindow");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.glib_autoptr_cleanup_GtkOffscreenWindow$MH,"glib_autoptr_cleanup_GtkOffscreenWindow");
    }
    public static void glib_autoptr_cleanup_GtkOffscreenWindow ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2220.glib_autoptr_cleanup_GtkOffscreenWindow$MH, "glib_autoptr_cleanup_GtkOffscreenWindow");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.glib_listautoptr_cleanup_GtkOffscreenWindow$MH,"glib_listautoptr_cleanup_GtkOffscreenWindow");
    }
    public static void glib_listautoptr_cleanup_GtkOffscreenWindow ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2220.glib_listautoptr_cleanup_GtkOffscreenWindow$MH, "glib_listautoptr_cleanup_GtkOffscreenWindow");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.glib_slistautoptr_cleanup_GtkOffscreenWindow$MH,"glib_slistautoptr_cleanup_GtkOffscreenWindow");
    }
    public static void glib_slistautoptr_cleanup_GtkOffscreenWindow ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2220.glib_slistautoptr_cleanup_GtkOffscreenWindow$MH, "glib_slistautoptr_cleanup_GtkOffscreenWindow");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.glib_queueautoptr_cleanup_GtkOffscreenWindow$MH,"glib_queueautoptr_cleanup_GtkOffscreenWindow");
    }
    public static void glib_queueautoptr_cleanup_GtkOffscreenWindow ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2220.glib_queueautoptr_cleanup_GtkOffscreenWindow$MH, "glib_queueautoptr_cleanup_GtkOffscreenWindow");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkOrientable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.glib_autoptr_clear_GtkOrientable$MH,"glib_autoptr_clear_GtkOrientable");
    }
    public static void glib_autoptr_clear_GtkOrientable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2221.glib_autoptr_clear_GtkOrientable$MH, "glib_autoptr_clear_GtkOrientable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.glib_autoptr_cleanup_GtkOrientable$MH,"glib_autoptr_cleanup_GtkOrientable");
    }
    public static void glib_autoptr_cleanup_GtkOrientable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2221.glib_autoptr_cleanup_GtkOrientable$MH, "glib_autoptr_cleanup_GtkOrientable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.glib_listautoptr_cleanup_GtkOrientable$MH,"glib_listautoptr_cleanup_GtkOrientable");
    }
    public static void glib_listautoptr_cleanup_GtkOrientable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2221.glib_listautoptr_cleanup_GtkOrientable$MH, "glib_listautoptr_cleanup_GtkOrientable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.glib_slistautoptr_cleanup_GtkOrientable$MH,"glib_slistautoptr_cleanup_GtkOrientable");
    }
    public static void glib_slistautoptr_cleanup_GtkOrientable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2221.glib_slistautoptr_cleanup_GtkOrientable$MH, "glib_slistautoptr_cleanup_GtkOrientable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.glib_queueautoptr_cleanup_GtkOrientable$MH,"glib_queueautoptr_cleanup_GtkOrientable");
    }
    public static void glib_queueautoptr_cleanup_GtkOrientable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2221.glib_queueautoptr_cleanup_GtkOrientable$MH, "glib_queueautoptr_cleanup_GtkOrientable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkOverlay_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.glib_autoptr_clear_GtkOverlay$MH,"glib_autoptr_clear_GtkOverlay");
    }
    public static void glib_autoptr_clear_GtkOverlay ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2221.glib_autoptr_clear_GtkOverlay$MH, "glib_autoptr_clear_GtkOverlay");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.glib_autoptr_cleanup_GtkOverlay$MH,"glib_autoptr_cleanup_GtkOverlay");
    }
    public static void glib_autoptr_cleanup_GtkOverlay ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2222.glib_autoptr_cleanup_GtkOverlay$MH, "glib_autoptr_cleanup_GtkOverlay");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.glib_listautoptr_cleanup_GtkOverlay$MH,"glib_listautoptr_cleanup_GtkOverlay");
    }
    public static void glib_listautoptr_cleanup_GtkOverlay ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2222.glib_listautoptr_cleanup_GtkOverlay$MH, "glib_listautoptr_cleanup_GtkOverlay");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.glib_slistautoptr_cleanup_GtkOverlay$MH,"glib_slistautoptr_cleanup_GtkOverlay");
    }
    public static void glib_slistautoptr_cleanup_GtkOverlay ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2222.glib_slistautoptr_cleanup_GtkOverlay$MH, "glib_slistautoptr_cleanup_GtkOverlay");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.glib_queueautoptr_cleanup_GtkOverlay$MH,"glib_queueautoptr_cleanup_GtkOverlay");
    }
    public static void glib_queueautoptr_cleanup_GtkOverlay ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2222.glib_queueautoptr_cleanup_GtkOverlay$MH, "glib_queueautoptr_cleanup_GtkOverlay");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPageSetup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.glib_autoptr_clear_GtkPageSetup$MH,"glib_autoptr_clear_GtkPageSetup");
    }
    public static void glib_autoptr_clear_GtkPageSetup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2222.glib_autoptr_clear_GtkPageSetup$MH, "glib_autoptr_clear_GtkPageSetup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.glib_autoptr_cleanup_GtkPageSetup$MH,"glib_autoptr_cleanup_GtkPageSetup");
    }
    public static void glib_autoptr_cleanup_GtkPageSetup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2222.glib_autoptr_cleanup_GtkPageSetup$MH, "glib_autoptr_cleanup_GtkPageSetup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.glib_listautoptr_cleanup_GtkPageSetup$MH,"glib_listautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_listautoptr_cleanup_GtkPageSetup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2223.glib_listautoptr_cleanup_GtkPageSetup$MH, "glib_listautoptr_cleanup_GtkPageSetup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.glib_slistautoptr_cleanup_GtkPageSetup$MH,"glib_slistautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_slistautoptr_cleanup_GtkPageSetup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2223.glib_slistautoptr_cleanup_GtkPageSetup$MH, "glib_slistautoptr_cleanup_GtkPageSetup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.glib_queueautoptr_cleanup_GtkPageSetup$MH,"glib_queueautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_queueautoptr_cleanup_GtkPageSetup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2223.glib_queueautoptr_cleanup_GtkPageSetup$MH, "glib_queueautoptr_cleanup_GtkPageSetup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPaned_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.glib_autoptr_clear_GtkPaned$MH,"glib_autoptr_clear_GtkPaned");
    }
    public static void glib_autoptr_clear_GtkPaned ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2223.glib_autoptr_clear_GtkPaned$MH, "glib_autoptr_clear_GtkPaned");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.glib_autoptr_cleanup_GtkPaned$MH,"glib_autoptr_cleanup_GtkPaned");
    }
    public static void glib_autoptr_cleanup_GtkPaned ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2223.glib_autoptr_cleanup_GtkPaned$MH, "glib_autoptr_cleanup_GtkPaned");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.glib_listautoptr_cleanup_GtkPaned$MH,"glib_listautoptr_cleanup_GtkPaned");
    }
    public static void glib_listautoptr_cleanup_GtkPaned ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2223.glib_listautoptr_cleanup_GtkPaned$MH, "glib_listautoptr_cleanup_GtkPaned");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2224.glib_slistautoptr_cleanup_GtkPaned$MH,"glib_slistautoptr_cleanup_GtkPaned");
    }
    public static void glib_slistautoptr_cleanup_GtkPaned ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2224.glib_slistautoptr_cleanup_GtkPaned$MH, "glib_slistautoptr_cleanup_GtkPaned");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2224.glib_queueautoptr_cleanup_GtkPaned$MH,"glib_queueautoptr_cleanup_GtkPaned");
    }
    public static void glib_queueautoptr_cleanup_GtkPaned ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2224.glib_queueautoptr_cleanup_GtkPaned$MH, "glib_queueautoptr_cleanup_GtkPaned");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPlacesSidebar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPlacesSidebar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPlacesSidebar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPlacesSidebar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2224.glib_autoptr_clear_GtkPlacesSidebar$MH,"glib_autoptr_clear_GtkPlacesSidebar");
    }
    public static void glib_autoptr_clear_GtkPlacesSidebar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2224.glib_autoptr_clear_GtkPlacesSidebar$MH, "glib_autoptr_clear_GtkPlacesSidebar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2224.glib_autoptr_cleanup_GtkPlacesSidebar$MH,"glib_autoptr_cleanup_GtkPlacesSidebar");
    }
    public static void glib_autoptr_cleanup_GtkPlacesSidebar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2224.glib_autoptr_cleanup_GtkPlacesSidebar$MH, "glib_autoptr_cleanup_GtkPlacesSidebar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2224.glib_listautoptr_cleanup_GtkPlacesSidebar$MH,"glib_listautoptr_cleanup_GtkPlacesSidebar");
    }
    public static void glib_listautoptr_cleanup_GtkPlacesSidebar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2224.glib_listautoptr_cleanup_GtkPlacesSidebar$MH, "glib_listautoptr_cleanup_GtkPlacesSidebar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2224.glib_slistautoptr_cleanup_GtkPlacesSidebar$MH,"glib_slistautoptr_cleanup_GtkPlacesSidebar");
    }
    public static void glib_slistautoptr_cleanup_GtkPlacesSidebar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2224.glib_slistautoptr_cleanup_GtkPlacesSidebar$MH, "glib_slistautoptr_cleanup_GtkPlacesSidebar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2225.glib_queueautoptr_cleanup_GtkPlacesSidebar$MH,"glib_queueautoptr_cleanup_GtkPlacesSidebar");
    }
    public static void glib_queueautoptr_cleanup_GtkPlacesSidebar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2225.glib_queueautoptr_cleanup_GtkPlacesSidebar$MH, "glib_queueautoptr_cleanup_GtkPlacesSidebar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPopover_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2225.glib_autoptr_clear_GtkPopover$MH,"glib_autoptr_clear_GtkPopover");
    }
    public static void glib_autoptr_clear_GtkPopover ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2225.glib_autoptr_clear_GtkPopover$MH, "glib_autoptr_clear_GtkPopover");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2225.glib_autoptr_cleanup_GtkPopover$MH,"glib_autoptr_cleanup_GtkPopover");
    }
    public static void glib_autoptr_cleanup_GtkPopover ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2225.glib_autoptr_cleanup_GtkPopover$MH, "glib_autoptr_cleanup_GtkPopover");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2225.glib_listautoptr_cleanup_GtkPopover$MH,"glib_listautoptr_cleanup_GtkPopover");
    }
    public static void glib_listautoptr_cleanup_GtkPopover ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2225.glib_listautoptr_cleanup_GtkPopover$MH, "glib_listautoptr_cleanup_GtkPopover");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2225.glib_slistautoptr_cleanup_GtkPopover$MH,"glib_slistautoptr_cleanup_GtkPopover");
    }
    public static void glib_slistautoptr_cleanup_GtkPopover ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2225.glib_slistautoptr_cleanup_GtkPopover$MH, "glib_slistautoptr_cleanup_GtkPopover");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2225.glib_queueautoptr_cleanup_GtkPopover$MH,"glib_queueautoptr_cleanup_GtkPopover");
    }
    public static void glib_queueautoptr_cleanup_GtkPopover ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2225.glib_queueautoptr_cleanup_GtkPopover$MH, "glib_queueautoptr_cleanup_GtkPopover");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPopoverMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.glib_autoptr_clear_GtkPopoverMenu$MH,"glib_autoptr_clear_GtkPopoverMenu");
    }
    public static void glib_autoptr_clear_GtkPopoverMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2226.glib_autoptr_clear_GtkPopoverMenu$MH, "glib_autoptr_clear_GtkPopoverMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.glib_autoptr_cleanup_GtkPopoverMenu$MH,"glib_autoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_autoptr_cleanup_GtkPopoverMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2226.glib_autoptr_cleanup_GtkPopoverMenu$MH, "glib_autoptr_cleanup_GtkPopoverMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.glib_listautoptr_cleanup_GtkPopoverMenu$MH,"glib_listautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_listautoptr_cleanup_GtkPopoverMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2226.glib_listautoptr_cleanup_GtkPopoverMenu$MH, "glib_listautoptr_cleanup_GtkPopoverMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.glib_slistautoptr_cleanup_GtkPopoverMenu$MH,"glib_slistautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_slistautoptr_cleanup_GtkPopoverMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2226.glib_slistautoptr_cleanup_GtkPopoverMenu$MH, "glib_slistautoptr_cleanup_GtkPopoverMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.glib_queueautoptr_cleanup_GtkPopoverMenu$MH,"glib_queueautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_queueautoptr_cleanup_GtkPopoverMenu ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2226.glib_queueautoptr_cleanup_GtkPopoverMenu$MH, "glib_queueautoptr_cleanup_GtkPopoverMenu");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.glib_autoptr_clear_GtkPrintContext$MH,"glib_autoptr_clear_GtkPrintContext");
    }
    public static void glib_autoptr_clear_GtkPrintContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2226.glib_autoptr_clear_GtkPrintContext$MH, "glib_autoptr_clear_GtkPrintContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2227.glib_autoptr_cleanup_GtkPrintContext$MH,"glib_autoptr_cleanup_GtkPrintContext");
    }
    public static void glib_autoptr_cleanup_GtkPrintContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2227.glib_autoptr_cleanup_GtkPrintContext$MH, "glib_autoptr_cleanup_GtkPrintContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2227.glib_listautoptr_cleanup_GtkPrintContext$MH,"glib_listautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_listautoptr_cleanup_GtkPrintContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2227.glib_listautoptr_cleanup_GtkPrintContext$MH, "glib_listautoptr_cleanup_GtkPrintContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2227.glib_slistautoptr_cleanup_GtkPrintContext$MH,"glib_slistautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2227.glib_slistautoptr_cleanup_GtkPrintContext$MH, "glib_slistautoptr_cleanup_GtkPrintContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2227.glib_queueautoptr_cleanup_GtkPrintContext$MH,"glib_queueautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2227.glib_queueautoptr_cleanup_GtkPrintContext$MH, "glib_queueautoptr_cleanup_GtkPrintContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2227.glib_autoptr_clear_GtkPrintOperation$MH,"glib_autoptr_clear_GtkPrintOperation");
    }
    public static void glib_autoptr_clear_GtkPrintOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2227.glib_autoptr_clear_GtkPrintOperation$MH, "glib_autoptr_clear_GtkPrintOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2227.glib_autoptr_cleanup_GtkPrintOperation$MH,"glib_autoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_autoptr_cleanup_GtkPrintOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2227.glib_autoptr_cleanup_GtkPrintOperation$MH, "glib_autoptr_cleanup_GtkPrintOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.glib_listautoptr_cleanup_GtkPrintOperation$MH,"glib_listautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_listautoptr_cleanup_GtkPrintOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2228.glib_listautoptr_cleanup_GtkPrintOperation$MH, "glib_listautoptr_cleanup_GtkPrintOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.glib_slistautoptr_cleanup_GtkPrintOperation$MH,"glib_slistautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2228.glib_slistautoptr_cleanup_GtkPrintOperation$MH, "glib_slistautoptr_cleanup_GtkPrintOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.glib_queueautoptr_cleanup_GtkPrintOperation$MH,"glib_queueautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintOperation ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2228.glib_queueautoptr_cleanup_GtkPrintOperation$MH, "glib_queueautoptr_cleanup_GtkPrintOperation");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintOperationPreview_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.glib_autoptr_clear_GtkPrintOperationPreview$MH,"glib_autoptr_clear_GtkPrintOperationPreview");
    }
    public static void glib_autoptr_clear_GtkPrintOperationPreview ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2228.glib_autoptr_clear_GtkPrintOperationPreview$MH, "glib_autoptr_clear_GtkPrintOperationPreview");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.glib_autoptr_cleanup_GtkPrintOperationPreview$MH,"glib_autoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_autoptr_cleanup_GtkPrintOperationPreview ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2228.glib_autoptr_cleanup_GtkPrintOperationPreview$MH, "glib_autoptr_cleanup_GtkPrintOperationPreview");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.glib_listautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_listautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_listautoptr_cleanup_GtkPrintOperationPreview ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2228.glib_listautoptr_cleanup_GtkPrintOperationPreview$MH, "glib_listautoptr_cleanup_GtkPrintOperationPreview");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_slistautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintOperationPreview ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2229.glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH, "glib_slistautoptr_cleanup_GtkPrintOperationPreview");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_queueautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintOperationPreview ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2229.glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH, "glib_queueautoptr_cleanup_GtkPrintOperationPreview");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.glib_autoptr_clear_GtkPrintSettings$MH,"glib_autoptr_clear_GtkPrintSettings");
    }
    public static void glib_autoptr_clear_GtkPrintSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2229.glib_autoptr_clear_GtkPrintSettings$MH, "glib_autoptr_clear_GtkPrintSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.glib_autoptr_cleanup_GtkPrintSettings$MH,"glib_autoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_autoptr_cleanup_GtkPrintSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2229.glib_autoptr_cleanup_GtkPrintSettings$MH, "glib_autoptr_cleanup_GtkPrintSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.glib_listautoptr_cleanup_GtkPrintSettings$MH,"glib_listautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_listautoptr_cleanup_GtkPrintSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2229.glib_listautoptr_cleanup_GtkPrintSettings$MH, "glib_listautoptr_cleanup_GtkPrintSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.glib_slistautoptr_cleanup_GtkPrintSettings$MH,"glib_slistautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2229.glib_slistautoptr_cleanup_GtkPrintSettings$MH, "glib_slistautoptr_cleanup_GtkPrintSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2230.glib_queueautoptr_cleanup_GtkPrintSettings$MH,"glib_queueautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintSettings ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2230.glib_queueautoptr_cleanup_GtkPrintSettings$MH, "glib_queueautoptr_cleanup_GtkPrintSettings");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkProgressBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2230.glib_autoptr_clear_GtkProgressBar$MH,"glib_autoptr_clear_GtkProgressBar");
    }
    public static void glib_autoptr_clear_GtkProgressBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2230.glib_autoptr_clear_GtkProgressBar$MH, "glib_autoptr_clear_GtkProgressBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2230.glib_autoptr_cleanup_GtkProgressBar$MH,"glib_autoptr_cleanup_GtkProgressBar");
    }
    public static void glib_autoptr_cleanup_GtkProgressBar ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2230.glib_autoptr_cleanup_GtkProgressBar$MH, "glib_autoptr_cleanup_GtkProgressBar");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2230.glib_listautoptr_cleanup_GtkProgressBar$MH,"glib_listautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_listautoptr_cleanup_GtkProgressBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2230.glib_listautoptr_cleanup_GtkProgressBar$MH, "glib_listautoptr_cleanup_GtkProgressBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2230.glib_slistautoptr_cleanup_GtkProgressBar$MH,"glib_slistautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_slistautoptr_cleanup_GtkProgressBar ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2230.glib_slistautoptr_cleanup_GtkProgressBar$MH, "glib_slistautoptr_cleanup_GtkProgressBar");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2230.glib_queueautoptr_cleanup_GtkProgressBar$MH,"glib_queueautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_queueautoptr_cleanup_GtkProgressBar ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2230.glib_queueautoptr_cleanup_GtkProgressBar$MH, "glib_queueautoptr_cleanup_GtkProgressBar");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRadioButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.glib_autoptr_clear_GtkRadioButton$MH,"glib_autoptr_clear_GtkRadioButton");
    }
    public static void glib_autoptr_clear_GtkRadioButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2231.glib_autoptr_clear_GtkRadioButton$MH, "glib_autoptr_clear_GtkRadioButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.glib_autoptr_cleanup_GtkRadioButton$MH,"glib_autoptr_cleanup_GtkRadioButton");
    }
    public static void glib_autoptr_cleanup_GtkRadioButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2231.glib_autoptr_cleanup_GtkRadioButton$MH, "glib_autoptr_cleanup_GtkRadioButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.glib_listautoptr_cleanup_GtkRadioButton$MH,"glib_listautoptr_cleanup_GtkRadioButton");
    }
    public static void glib_listautoptr_cleanup_GtkRadioButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2231.glib_listautoptr_cleanup_GtkRadioButton$MH, "glib_listautoptr_cleanup_GtkRadioButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.glib_slistautoptr_cleanup_GtkRadioButton$MH,"glib_slistautoptr_cleanup_GtkRadioButton");
    }
    public static void glib_slistautoptr_cleanup_GtkRadioButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2231.glib_slistautoptr_cleanup_GtkRadioButton$MH, "glib_slistautoptr_cleanup_GtkRadioButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.glib_queueautoptr_cleanup_GtkRadioButton$MH,"glib_queueautoptr_cleanup_GtkRadioButton");
    }
    public static void glib_queueautoptr_cleanup_GtkRadioButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2231.glib_queueautoptr_cleanup_GtkRadioButton$MH, "glib_queueautoptr_cleanup_GtkRadioButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRadioMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.glib_autoptr_clear_GtkRadioMenuItem$MH,"glib_autoptr_clear_GtkRadioMenuItem");
    }
    public static void glib_autoptr_clear_GtkRadioMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2231.glib_autoptr_clear_GtkRadioMenuItem$MH, "glib_autoptr_clear_GtkRadioMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.glib_autoptr_cleanup_GtkRadioMenuItem$MH,"glib_autoptr_cleanup_GtkRadioMenuItem");
    }
    public static void glib_autoptr_cleanup_GtkRadioMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2232.glib_autoptr_cleanup_GtkRadioMenuItem$MH, "glib_autoptr_cleanup_GtkRadioMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.glib_listautoptr_cleanup_GtkRadioMenuItem$MH,"glib_listautoptr_cleanup_GtkRadioMenuItem");
    }
    public static void glib_listautoptr_cleanup_GtkRadioMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2232.glib_listautoptr_cleanup_GtkRadioMenuItem$MH, "glib_listautoptr_cleanup_GtkRadioMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.glib_slistautoptr_cleanup_GtkRadioMenuItem$MH,"glib_slistautoptr_cleanup_GtkRadioMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GtkRadioMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2232.glib_slistautoptr_cleanup_GtkRadioMenuItem$MH, "glib_slistautoptr_cleanup_GtkRadioMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.glib_queueautoptr_cleanup_GtkRadioMenuItem$MH,"glib_queueautoptr_cleanup_GtkRadioMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GtkRadioMenuItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2232.glib_queueautoptr_cleanup_GtkRadioMenuItem$MH, "glib_queueautoptr_cleanup_GtkRadioMenuItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRadioToolButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioToolButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioToolButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioToolButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.glib_autoptr_clear_GtkRadioToolButton$MH,"glib_autoptr_clear_GtkRadioToolButton");
    }
    public static void glib_autoptr_clear_GtkRadioToolButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2232.glib_autoptr_clear_GtkRadioToolButton$MH, "glib_autoptr_clear_GtkRadioToolButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.glib_autoptr_cleanup_GtkRadioToolButton$MH,"glib_autoptr_cleanup_GtkRadioToolButton");
    }
    public static void glib_autoptr_cleanup_GtkRadioToolButton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2232.glib_autoptr_cleanup_GtkRadioToolButton$MH, "glib_autoptr_cleanup_GtkRadioToolButton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.glib_listautoptr_cleanup_GtkRadioToolButton$MH,"glib_listautoptr_cleanup_GtkRadioToolButton");
    }
    public static void glib_listautoptr_cleanup_GtkRadioToolButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2233.glib_listautoptr_cleanup_GtkRadioToolButton$MH, "glib_listautoptr_cleanup_GtkRadioToolButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.glib_slistautoptr_cleanup_GtkRadioToolButton$MH,"glib_slistautoptr_cleanup_GtkRadioToolButton");
    }
    public static void glib_slistautoptr_cleanup_GtkRadioToolButton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2233.glib_slistautoptr_cleanup_GtkRadioToolButton$MH, "glib_slistautoptr_cleanup_GtkRadioToolButton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.glib_queueautoptr_cleanup_GtkRadioToolButton$MH,"glib_queueautoptr_cleanup_GtkRadioToolButton");
    }
    public static void glib_queueautoptr_cleanup_GtkRadioToolButton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2233.glib_queueautoptr_cleanup_GtkRadioToolButton$MH, "glib_queueautoptr_cleanup_GtkRadioToolButton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRange_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.glib_autoptr_clear_GtkRange$MH,"glib_autoptr_clear_GtkRange");
    }
    public static void glib_autoptr_clear_GtkRange ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2233.glib_autoptr_clear_GtkRange$MH, "glib_autoptr_clear_GtkRange");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.glib_autoptr_cleanup_GtkRange$MH,"glib_autoptr_cleanup_GtkRange");
    }
    public static void glib_autoptr_cleanup_GtkRange ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2233.glib_autoptr_cleanup_GtkRange$MH, "glib_autoptr_cleanup_GtkRange");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.glib_listautoptr_cleanup_GtkRange$MH,"glib_listautoptr_cleanup_GtkRange");
    }
    public static void glib_listautoptr_cleanup_GtkRange ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2233.glib_listautoptr_cleanup_GtkRange$MH, "glib_listautoptr_cleanup_GtkRange");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2234.glib_slistautoptr_cleanup_GtkRange$MH,"glib_slistautoptr_cleanup_GtkRange");
    }
    public static void glib_slistautoptr_cleanup_GtkRange ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2234.glib_slistautoptr_cleanup_GtkRange$MH, "glib_slistautoptr_cleanup_GtkRange");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2234.glib_queueautoptr_cleanup_GtkRange$MH,"glib_queueautoptr_cleanup_GtkRange");
    }
    public static void glib_queueautoptr_cleanup_GtkRange ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2234.glib_queueautoptr_cleanup_GtkRange$MH, "glib_queueautoptr_cleanup_GtkRange");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRcStyle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRcStyle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRcStyle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRcStyle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2234.glib_autoptr_clear_GtkRcStyle$MH,"glib_autoptr_clear_GtkRcStyle");
    }
    public static void glib_autoptr_clear_GtkRcStyle ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2234.glib_autoptr_clear_GtkRcStyle$MH, "glib_autoptr_clear_GtkRcStyle");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2234.glib_autoptr_cleanup_GtkRcStyle$MH,"glib_autoptr_cleanup_GtkRcStyle");
    }
    public static void glib_autoptr_cleanup_GtkRcStyle ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2234.glib_autoptr_cleanup_GtkRcStyle$MH, "glib_autoptr_cleanup_GtkRcStyle");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2234.glib_listautoptr_cleanup_GtkRcStyle$MH,"glib_listautoptr_cleanup_GtkRcStyle");
    }
    public static void glib_listautoptr_cleanup_GtkRcStyle ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2234.glib_listautoptr_cleanup_GtkRcStyle$MH, "glib_listautoptr_cleanup_GtkRcStyle");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2234.glib_slistautoptr_cleanup_GtkRcStyle$MH,"glib_slistautoptr_cleanup_GtkRcStyle");
    }
    public static void glib_slistautoptr_cleanup_GtkRcStyle ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2234.glib_slistautoptr_cleanup_GtkRcStyle$MH, "glib_slistautoptr_cleanup_GtkRcStyle");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2235.glib_queueautoptr_cleanup_GtkRcStyle$MH,"glib_queueautoptr_cleanup_GtkRcStyle");
    }
    public static void glib_queueautoptr_cleanup_GtkRcStyle ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2235.glib_queueautoptr_cleanup_GtkRcStyle$MH, "glib_queueautoptr_cleanup_GtkRcStyle");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentChooser_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooser_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooser_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooser_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2235.glib_autoptr_clear_GtkRecentChooser$MH,"glib_autoptr_clear_GtkRecentChooser");
    }
    public static void glib_autoptr_clear_GtkRecentChooser ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2235.glib_autoptr_clear_GtkRecentChooser$MH, "glib_autoptr_clear_GtkRecentChooser");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2235.glib_autoptr_cleanup_GtkRecentChooser$MH,"glib_autoptr_cleanup_GtkRecentChooser");
    }
    public static void glib_autoptr_cleanup_GtkRecentChooser ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2235.glib_autoptr_cleanup_GtkRecentChooser$MH, "glib_autoptr_cleanup_GtkRecentChooser");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2235.glib_listautoptr_cleanup_GtkRecentChooser$MH,"glib_listautoptr_cleanup_GtkRecentChooser");
    }
    public static void glib_listautoptr_cleanup_GtkRecentChooser ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2235.glib_listautoptr_cleanup_GtkRecentChooser$MH, "glib_listautoptr_cleanup_GtkRecentChooser");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2235.glib_slistautoptr_cleanup_GtkRecentChooser$MH,"glib_slistautoptr_cleanup_GtkRecentChooser");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentChooser ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2235.glib_slistautoptr_cleanup_GtkRecentChooser$MH, "glib_slistautoptr_cleanup_GtkRecentChooser");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2235.glib_queueautoptr_cleanup_GtkRecentChooser$MH,"glib_queueautoptr_cleanup_GtkRecentChooser");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentChooser ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2235.glib_queueautoptr_cleanup_GtkRecentChooser$MH, "glib_queueautoptr_cleanup_GtkRecentChooser");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.glib_autoptr_clear_GtkRecentChooserDialog$MH,"glib_autoptr_clear_GtkRecentChooserDialog");
    }
    public static void glib_autoptr_clear_GtkRecentChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2236.glib_autoptr_clear_GtkRecentChooserDialog$MH, "glib_autoptr_clear_GtkRecentChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.glib_autoptr_cleanup_GtkRecentChooserDialog$MH,"glib_autoptr_cleanup_GtkRecentChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkRecentChooserDialog ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2236.glib_autoptr_cleanup_GtkRecentChooserDialog$MH, "glib_autoptr_cleanup_GtkRecentChooserDialog");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.glib_listautoptr_cleanup_GtkRecentChooserDialog$MH,"glib_listautoptr_cleanup_GtkRecentChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkRecentChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2236.glib_listautoptr_cleanup_GtkRecentChooserDialog$MH, "glib_listautoptr_cleanup_GtkRecentChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.glib_slistautoptr_cleanup_GtkRecentChooserDialog$MH,"glib_slistautoptr_cleanup_GtkRecentChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentChooserDialog ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2236.glib_slistautoptr_cleanup_GtkRecentChooserDialog$MH, "glib_slistautoptr_cleanup_GtkRecentChooserDialog");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.glib_queueautoptr_cleanup_GtkRecentChooserDialog$MH,"glib_queueautoptr_cleanup_GtkRecentChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentChooserDialog ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2236.glib_queueautoptr_cleanup_GtkRecentChooserDialog$MH, "glib_queueautoptr_cleanup_GtkRecentChooserDialog");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentChooserMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.glib_autoptr_clear_GtkRecentChooserMenu$MH,"glib_autoptr_clear_GtkRecentChooserMenu");
    }
    public static void glib_autoptr_clear_GtkRecentChooserMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2236.glib_autoptr_clear_GtkRecentChooserMenu$MH, "glib_autoptr_clear_GtkRecentChooserMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.glib_autoptr_cleanup_GtkRecentChooserMenu$MH,"glib_autoptr_cleanup_GtkRecentChooserMenu");
    }
    public static void glib_autoptr_cleanup_GtkRecentChooserMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2237.glib_autoptr_cleanup_GtkRecentChooserMenu$MH, "glib_autoptr_cleanup_GtkRecentChooserMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.glib_listautoptr_cleanup_GtkRecentChooserMenu$MH,"glib_listautoptr_cleanup_GtkRecentChooserMenu");
    }
    public static void glib_listautoptr_cleanup_GtkRecentChooserMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2237.glib_listautoptr_cleanup_GtkRecentChooserMenu$MH, "glib_listautoptr_cleanup_GtkRecentChooserMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.glib_slistautoptr_cleanup_GtkRecentChooserMenu$MH,"glib_slistautoptr_cleanup_GtkRecentChooserMenu");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentChooserMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2237.glib_slistautoptr_cleanup_GtkRecentChooserMenu$MH, "glib_slistautoptr_cleanup_GtkRecentChooserMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.glib_queueautoptr_cleanup_GtkRecentChooserMenu$MH,"glib_queueautoptr_cleanup_GtkRecentChooserMenu");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentChooserMenu ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2237.glib_queueautoptr_cleanup_GtkRecentChooserMenu$MH, "glib_queueautoptr_cleanup_GtkRecentChooserMenu");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.glib_autoptr_clear_GtkRecentChooserWidget$MH,"glib_autoptr_clear_GtkRecentChooserWidget");
    }
    public static void glib_autoptr_clear_GtkRecentChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2237.glib_autoptr_clear_GtkRecentChooserWidget$MH, "glib_autoptr_clear_GtkRecentChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.glib_autoptr_cleanup_GtkRecentChooserWidget$MH,"glib_autoptr_cleanup_GtkRecentChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkRecentChooserWidget ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2237.glib_autoptr_cleanup_GtkRecentChooserWidget$MH, "glib_autoptr_cleanup_GtkRecentChooserWidget");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.glib_listautoptr_cleanup_GtkRecentChooserWidget$MH,"glib_listautoptr_cleanup_GtkRecentChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkRecentChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2238.glib_listautoptr_cleanup_GtkRecentChooserWidget$MH, "glib_listautoptr_cleanup_GtkRecentChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.glib_slistautoptr_cleanup_GtkRecentChooserWidget$MH,"glib_slistautoptr_cleanup_GtkRecentChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentChooserWidget ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2238.glib_slistautoptr_cleanup_GtkRecentChooserWidget$MH, "glib_slistautoptr_cleanup_GtkRecentChooserWidget");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.glib_queueautoptr_cleanup_GtkRecentChooserWidget$MH,"glib_queueautoptr_cleanup_GtkRecentChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentChooserWidget ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2238.glib_queueautoptr_cleanup_GtkRecentChooserWidget$MH, "glib_queueautoptr_cleanup_GtkRecentChooserWidget");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.glib_autoptr_clear_GtkRecentFilter$MH,"glib_autoptr_clear_GtkRecentFilter");
    }
    public static void glib_autoptr_clear_GtkRecentFilter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2238.glib_autoptr_clear_GtkRecentFilter$MH, "glib_autoptr_clear_GtkRecentFilter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


