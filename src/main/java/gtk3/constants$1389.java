// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1389 {

    static final FunctionDescriptor atk_value_type_get_localized_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle atk_value_type_get_localized_name$MH = RuntimeHelper.downcallHandle(
        "atk_value_type_get_localized_name",
        constants$1389.atk_value_type_get_localized_name$FUNC, false
    );
    static final FunctionDescriptor atk_window_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle atk_window_get_type$MH = RuntimeHelper.downcallHandle(
        "atk_window_get_type",
        constants$1389.atk_window_get_type$FUNC, false
    );
    static final FunctionDescriptor GtkCallback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GtkCallback$MH = RuntimeHelper.downcallHandle(
        constants$1389.GtkCallback$FUNC, false
    );
    static final FunctionDescriptor GtkTickCallback$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GtkTickCallback$MH = RuntimeHelper.downcallHandle(
        constants$1389.GtkTickCallback$FUNC, false
    );
}


