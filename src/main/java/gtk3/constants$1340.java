// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1340 {

    static final FunctionDescriptor AtkPropertyChangeHandler$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AtkPropertyChangeHandler$MH = RuntimeHelper.downcallHandle(
        constants$1340.AtkPropertyChangeHandler$FUNC, false
    );
    static final FunctionDescriptor atk_object_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle atk_object_get_type$MH = RuntimeHelper.downcallHandle(
        "atk_object_get_type",
        constants$1340.atk_object_get_type$FUNC, false
    );
    static final FunctionDescriptor atk_implementor_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle atk_implementor_get_type$MH = RuntimeHelper.downcallHandle(
        "atk_implementor_get_type",
        constants$1340.atk_implementor_get_type$FUNC, false
    );
    static final FunctionDescriptor atk_implementor_ref_accessible$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle atk_implementor_ref_accessible$MH = RuntimeHelper.downcallHandle(
        "atk_implementor_ref_accessible",
        constants$1340.atk_implementor_ref_accessible$FUNC, false
    );
    static final FunctionDescriptor atk_object_get_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle atk_object_get_name$MH = RuntimeHelper.downcallHandle(
        "atk_object_get_name",
        constants$1340.atk_object_get_name$FUNC, false
    );
}


