// Generated by jextract

package gtk3;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1228 {

    static final FunctionDescriptor gdk_window_geometry_changed$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_geometry_changed$MH = RuntimeHelper.downcallHandle(
        "gdk_window_geometry_changed",
        constants$1228.gdk_window_geometry_changed$FUNC, false
    );
    static final FunctionDescriptor gdk_window_set_support_multidevice$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gdk_window_set_support_multidevice$MH = RuntimeHelper.downcallHandle(
        "gdk_window_set_support_multidevice",
        constants$1228.gdk_window_set_support_multidevice$FUNC, false
    );
    static final FunctionDescriptor gdk_window_get_support_multidevice$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_get_support_multidevice$MH = RuntimeHelper.downcallHandle(
        "gdk_window_get_support_multidevice",
        constants$1228.gdk_window_get_support_multidevice$FUNC, false
    );
    static final FunctionDescriptor gdk_window_get_frame_clock$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_get_frame_clock$MH = RuntimeHelper.downcallHandle(
        "gdk_window_get_frame_clock",
        constants$1228.gdk_window_get_frame_clock$FUNC, false
    );
    static final FunctionDescriptor gdk_window_set_opaque_region$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_set_opaque_region$MH = RuntimeHelper.downcallHandle(
        "gdk_window_set_opaque_region",
        constants$1228.gdk_window_set_opaque_region$FUNC, false
    );
    static final FunctionDescriptor gdk_window_set_event_compression$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gdk_window_set_event_compression$MH = RuntimeHelper.downcallHandle(
        "gdk_window_set_event_compression",
        constants$1228.gdk_window_set_event_compression$FUNC, false
    );
}


